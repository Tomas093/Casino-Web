
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model administrador
 * 
 */
export type administrador = $Result.DefaultSelection<Prisma.$administradorPayload>
/**
 * Model amistad
 * 
 */
export type amistad = $Result.DefaultSelection<Prisma.$amistadPayload>
/**
 * Model aumentolimitehorario
 * 
 */
export type aumentolimitehorario = $Result.DefaultSelection<Prisma.$aumentolimitehorarioPayload>
/**
 * Model aumentolimitesmonetario
 * 
 */
export type aumentolimitesmonetario = $Result.DefaultSelection<Prisma.$aumentolimitesmonetarioPayload>
/**
 * Model cliente
 * 
 */
export type cliente = $Result.DefaultSelection<Prisma.$clientePayload>
/**
 * Model disminucionlimitehorario
 * 
 */
export type disminucionlimitehorario = $Result.DefaultSelection<Prisma.$disminucionlimitehorarioPayload>
/**
 * Model disminucionlimitemonetario
 * 
 */
export type disminucionlimitemonetario = $Result.DefaultSelection<Prisma.$disminucionlimitemonetarioPayload>
/**
 * Model egreso
 * 
 */
export type egreso = $Result.DefaultSelection<Prisma.$egresoPayload>
/**
 * Model ingreso
 * 
 */
export type ingreso = $Result.DefaultSelection<Prisma.$ingresoPayload>
/**
 * Model juego
 * 
 */
export type juego = $Result.DefaultSelection<Prisma.$juegoPayload>
/**
 * Model jugada
 * 
 */
export type jugada = $Result.DefaultSelection<Prisma.$jugadaPayload>
/**
 * Model limitehorario
 * 
 */
export type limitehorario = $Result.DefaultSelection<Prisma.$limitehorarioPayload>
/**
 * Model limitemonetario
 * 
 */
export type limitemonetario = $Result.DefaultSelection<Prisma.$limitemonetarioPayload>
/**
 * Model mensajes
 * 
 */
export type mensajes = $Result.DefaultSelection<Prisma.$mensajesPayload>
/**
 * Model partida
 * 
 */
export type partida = $Result.DefaultSelection<Prisma.$partidaPayload>
/**
 * Model pausa
 * 
 */
export type pausa = $Result.DefaultSelection<Prisma.$pausaPayload>
/**
 * Model promocion
 * 
 */
export type promocion = $Result.DefaultSelection<Prisma.$promocionPayload>
/**
 * Model suspendidos
 * 
 */
export type suspendidos = $Result.DefaultSelection<Prisma.$suspendidosPayload>
/**
 * Model tickets
 * 
 */
export type tickets = $Result.DefaultSelection<Prisma.$ticketsPayload>
/**
 * Model tiempodejuego
 * 
 */
export type tiempodejuego = $Result.DefaultSelection<Prisma.$tiempodejuegoPayload>
/**
 * Model usuario
 * 
 */
export type usuario = $Result.DefaultSelection<Prisma.$usuarioPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Administradors
 * const administradors = await prisma.administrador.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Administradors
   * const administradors = await prisma.administrador.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.administrador`: Exposes CRUD operations for the **administrador** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Administradors
    * const administradors = await prisma.administrador.findMany()
    * ```
    */
  get administrador(): Prisma.administradorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.amistad`: Exposes CRUD operations for the **amistad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Amistads
    * const amistads = await prisma.amistad.findMany()
    * ```
    */
  get amistad(): Prisma.amistadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aumentolimitehorario`: Exposes CRUD operations for the **aumentolimitehorario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Aumentolimitehorarios
    * const aumentolimitehorarios = await prisma.aumentolimitehorario.findMany()
    * ```
    */
  get aumentolimitehorario(): Prisma.aumentolimitehorarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aumentolimitesmonetario`: Exposes CRUD operations for the **aumentolimitesmonetario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Aumentolimitesmonetarios
    * const aumentolimitesmonetarios = await prisma.aumentolimitesmonetario.findMany()
    * ```
    */
  get aumentolimitesmonetario(): Prisma.aumentolimitesmonetarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cliente`: Exposes CRUD operations for the **cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.clienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.disminucionlimitehorario`: Exposes CRUD operations for the **disminucionlimitehorario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disminucionlimitehorarios
    * const disminucionlimitehorarios = await prisma.disminucionlimitehorario.findMany()
    * ```
    */
  get disminucionlimitehorario(): Prisma.disminucionlimitehorarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.disminucionlimitemonetario`: Exposes CRUD operations for the **disminucionlimitemonetario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disminucionlimitemonetarios
    * const disminucionlimitemonetarios = await prisma.disminucionlimitemonetario.findMany()
    * ```
    */
  get disminucionlimitemonetario(): Prisma.disminucionlimitemonetarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.egreso`: Exposes CRUD operations for the **egreso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Egresos
    * const egresos = await prisma.egreso.findMany()
    * ```
    */
  get egreso(): Prisma.egresoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ingreso`: Exposes CRUD operations for the **ingreso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ingresos
    * const ingresos = await prisma.ingreso.findMany()
    * ```
    */
  get ingreso(): Prisma.ingresoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.juego`: Exposes CRUD operations for the **juego** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Juegos
    * const juegos = await prisma.juego.findMany()
    * ```
    */
  get juego(): Prisma.juegoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.jugada`: Exposes CRUD operations for the **jugada** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Jugadas
    * const jugadas = await prisma.jugada.findMany()
    * ```
    */
  get jugada(): Prisma.jugadaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.limitehorario`: Exposes CRUD operations for the **limitehorario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Limitehorarios
    * const limitehorarios = await prisma.limitehorario.findMany()
    * ```
    */
  get limitehorario(): Prisma.limitehorarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.limitemonetario`: Exposes CRUD operations for the **limitemonetario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Limitemonetarios
    * const limitemonetarios = await prisma.limitemonetario.findMany()
    * ```
    */
  get limitemonetario(): Prisma.limitemonetarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mensajes`: Exposes CRUD operations for the **mensajes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mensajes
    * const mensajes = await prisma.mensajes.findMany()
    * ```
    */
  get mensajes(): Prisma.mensajesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.partida`: Exposes CRUD operations for the **partida** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Partidas
    * const partidas = await prisma.partida.findMany()
    * ```
    */
  get partida(): Prisma.partidaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pausa`: Exposes CRUD operations for the **pausa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pausas
    * const pausas = await prisma.pausa.findMany()
    * ```
    */
  get pausa(): Prisma.pausaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promocion`: Exposes CRUD operations for the **promocion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promocions
    * const promocions = await prisma.promocion.findMany()
    * ```
    */
  get promocion(): Prisma.promocionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.suspendidos`: Exposes CRUD operations for the **suspendidos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Suspendidos
    * const suspendidos = await prisma.suspendidos.findMany()
    * ```
    */
  get suspendidos(): Prisma.suspendidosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tickets`: Exposes CRUD operations for the **tickets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tickets
    * const tickets = await prisma.tickets.findMany()
    * ```
    */
  get tickets(): Prisma.ticketsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tiempodejuego`: Exposes CRUD operations for the **tiempodejuego** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tiempodejuegos
    * const tiempodejuegos = await prisma.tiempodejuego.findMany()
    * ```
    */
  get tiempodejuego(): Prisma.tiempodejuegoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.usuarioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    administrador: 'administrador',
    amistad: 'amistad',
    aumentolimitehorario: 'aumentolimitehorario',
    aumentolimitesmonetario: 'aumentolimitesmonetario',
    cliente: 'cliente',
    disminucionlimitehorario: 'disminucionlimitehorario',
    disminucionlimitemonetario: 'disminucionlimitemonetario',
    egreso: 'egreso',
    ingreso: 'ingreso',
    juego: 'juego',
    jugada: 'jugada',
    limitehorario: 'limitehorario',
    limitemonetario: 'limitemonetario',
    mensajes: 'mensajes',
    partida: 'partida',
    pausa: 'pausa',
    promocion: 'promocion',
    suspendidos: 'suspendidos',
    tickets: 'tickets',
    tiempodejuego: 'tiempodejuego',
    usuario: 'usuario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "administrador" | "amistad" | "aumentolimitehorario" | "aumentolimitesmonetario" | "cliente" | "disminucionlimitehorario" | "disminucionlimitemonetario" | "egreso" | "ingreso" | "juego" | "jugada" | "limitehorario" | "limitemonetario" | "mensajes" | "partida" | "pausa" | "promocion" | "suspendidos" | "tickets" | "tiempodejuego" | "usuario"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      administrador: {
        payload: Prisma.$administradorPayload<ExtArgs>
        fields: Prisma.administradorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.administradorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.administradorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>
          }
          findFirst: {
            args: Prisma.administradorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.administradorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>
          }
          findMany: {
            args: Prisma.administradorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>[]
          }
          create: {
            args: Prisma.administradorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>
          }
          createMany: {
            args: Prisma.administradorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.administradorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>[]
          }
          delete: {
            args: Prisma.administradorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>
          }
          update: {
            args: Prisma.administradorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>
          }
          deleteMany: {
            args: Prisma.administradorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.administradorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.administradorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>[]
          }
          upsert: {
            args: Prisma.administradorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$administradorPayload>
          }
          aggregate: {
            args: Prisma.AdministradorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdministrador>
          }
          groupBy: {
            args: Prisma.administradorGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdministradorGroupByOutputType>[]
          }
          count: {
            args: Prisma.administradorCountArgs<ExtArgs>
            result: $Utils.Optional<AdministradorCountAggregateOutputType> | number
          }
        }
      }
      amistad: {
        payload: Prisma.$amistadPayload<ExtArgs>
        fields: Prisma.amistadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.amistadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.amistadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>
          }
          findFirst: {
            args: Prisma.amistadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.amistadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>
          }
          findMany: {
            args: Prisma.amistadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>[]
          }
          create: {
            args: Prisma.amistadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>
          }
          createMany: {
            args: Prisma.amistadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.amistadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>[]
          }
          delete: {
            args: Prisma.amistadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>
          }
          update: {
            args: Prisma.amistadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>
          }
          deleteMany: {
            args: Prisma.amistadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.amistadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.amistadUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>[]
          }
          upsert: {
            args: Prisma.amistadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$amistadPayload>
          }
          aggregate: {
            args: Prisma.AmistadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAmistad>
          }
          groupBy: {
            args: Prisma.amistadGroupByArgs<ExtArgs>
            result: $Utils.Optional<AmistadGroupByOutputType>[]
          }
          count: {
            args: Prisma.amistadCountArgs<ExtArgs>
            result: $Utils.Optional<AmistadCountAggregateOutputType> | number
          }
        }
      }
      aumentolimitehorario: {
        payload: Prisma.$aumentolimitehorarioPayload<ExtArgs>
        fields: Prisma.aumentolimitehorarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.aumentolimitehorarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.aumentolimitehorarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>
          }
          findFirst: {
            args: Prisma.aumentolimitehorarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.aumentolimitehorarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>
          }
          findMany: {
            args: Prisma.aumentolimitehorarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>[]
          }
          create: {
            args: Prisma.aumentolimitehorarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>
          }
          createMany: {
            args: Prisma.aumentolimitehorarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.aumentolimitehorarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>[]
          }
          delete: {
            args: Prisma.aumentolimitehorarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>
          }
          update: {
            args: Prisma.aumentolimitehorarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>
          }
          deleteMany: {
            args: Prisma.aumentolimitehorarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.aumentolimitehorarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.aumentolimitehorarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>[]
          }
          upsert: {
            args: Prisma.aumentolimitehorarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitehorarioPayload>
          }
          aggregate: {
            args: Prisma.AumentolimitehorarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAumentolimitehorario>
          }
          groupBy: {
            args: Prisma.aumentolimitehorarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<AumentolimitehorarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.aumentolimitehorarioCountArgs<ExtArgs>
            result: $Utils.Optional<AumentolimitehorarioCountAggregateOutputType> | number
          }
        }
      }
      aumentolimitesmonetario: {
        payload: Prisma.$aumentolimitesmonetarioPayload<ExtArgs>
        fields: Prisma.aumentolimitesmonetarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.aumentolimitesmonetarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.aumentolimitesmonetarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>
          }
          findFirst: {
            args: Prisma.aumentolimitesmonetarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.aumentolimitesmonetarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>
          }
          findMany: {
            args: Prisma.aumentolimitesmonetarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>[]
          }
          create: {
            args: Prisma.aumentolimitesmonetarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>
          }
          createMany: {
            args: Prisma.aumentolimitesmonetarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.aumentolimitesmonetarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>[]
          }
          delete: {
            args: Prisma.aumentolimitesmonetarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>
          }
          update: {
            args: Prisma.aumentolimitesmonetarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>
          }
          deleteMany: {
            args: Prisma.aumentolimitesmonetarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.aumentolimitesmonetarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.aumentolimitesmonetarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>[]
          }
          upsert: {
            args: Prisma.aumentolimitesmonetarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aumentolimitesmonetarioPayload>
          }
          aggregate: {
            args: Prisma.AumentolimitesmonetarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAumentolimitesmonetario>
          }
          groupBy: {
            args: Prisma.aumentolimitesmonetarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<AumentolimitesmonetarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.aumentolimitesmonetarioCountArgs<ExtArgs>
            result: $Utils.Optional<AumentolimitesmonetarioCountAggregateOutputType> | number
          }
        }
      }
      cliente: {
        payload: Prisma.$clientePayload<ExtArgs>
        fields: Prisma.clienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          findFirst: {
            args: Prisma.clienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          findMany: {
            args: Prisma.clienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>[]
          }
          create: {
            args: Prisma.clienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          createMany: {
            args: Prisma.clienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.clienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>[]
          }
          delete: {
            args: Prisma.clienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          update: {
            args: Prisma.clienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          deleteMany: {
            args: Prisma.clienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.clienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.clienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>[]
          }
          upsert: {
            args: Prisma.clienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.clienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.clienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      disminucionlimitehorario: {
        payload: Prisma.$disminucionlimitehorarioPayload<ExtArgs>
        fields: Prisma.disminucionlimitehorarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disminucionlimitehorarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disminucionlimitehorarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>
          }
          findFirst: {
            args: Prisma.disminucionlimitehorarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disminucionlimitehorarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>
          }
          findMany: {
            args: Prisma.disminucionlimitehorarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>[]
          }
          create: {
            args: Prisma.disminucionlimitehorarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>
          }
          createMany: {
            args: Prisma.disminucionlimitehorarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.disminucionlimitehorarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>[]
          }
          delete: {
            args: Prisma.disminucionlimitehorarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>
          }
          update: {
            args: Prisma.disminucionlimitehorarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>
          }
          deleteMany: {
            args: Prisma.disminucionlimitehorarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.disminucionlimitehorarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.disminucionlimitehorarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>[]
          }
          upsert: {
            args: Prisma.disminucionlimitehorarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitehorarioPayload>
          }
          aggregate: {
            args: Prisma.DisminucionlimitehorarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDisminucionlimitehorario>
          }
          groupBy: {
            args: Prisma.disminucionlimitehorarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<DisminucionlimitehorarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.disminucionlimitehorarioCountArgs<ExtArgs>
            result: $Utils.Optional<DisminucionlimitehorarioCountAggregateOutputType> | number
          }
        }
      }
      disminucionlimitemonetario: {
        payload: Prisma.$disminucionlimitemonetarioPayload<ExtArgs>
        fields: Prisma.disminucionlimitemonetarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disminucionlimitemonetarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disminucionlimitemonetarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>
          }
          findFirst: {
            args: Prisma.disminucionlimitemonetarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disminucionlimitemonetarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>
          }
          findMany: {
            args: Prisma.disminucionlimitemonetarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>[]
          }
          create: {
            args: Prisma.disminucionlimitemonetarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>
          }
          createMany: {
            args: Prisma.disminucionlimitemonetarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.disminucionlimitemonetarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>[]
          }
          delete: {
            args: Prisma.disminucionlimitemonetarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>
          }
          update: {
            args: Prisma.disminucionlimitemonetarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>
          }
          deleteMany: {
            args: Prisma.disminucionlimitemonetarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.disminucionlimitemonetarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.disminucionlimitemonetarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>[]
          }
          upsert: {
            args: Prisma.disminucionlimitemonetarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$disminucionlimitemonetarioPayload>
          }
          aggregate: {
            args: Prisma.DisminucionlimitemonetarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDisminucionlimitemonetario>
          }
          groupBy: {
            args: Prisma.disminucionlimitemonetarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<DisminucionlimitemonetarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.disminucionlimitemonetarioCountArgs<ExtArgs>
            result: $Utils.Optional<DisminucionlimitemonetarioCountAggregateOutputType> | number
          }
        }
      }
      egreso: {
        payload: Prisma.$egresoPayload<ExtArgs>
        fields: Prisma.egresoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.egresoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.egresoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>
          }
          findFirst: {
            args: Prisma.egresoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.egresoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>
          }
          findMany: {
            args: Prisma.egresoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>[]
          }
          create: {
            args: Prisma.egresoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>
          }
          createMany: {
            args: Prisma.egresoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.egresoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>[]
          }
          delete: {
            args: Prisma.egresoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>
          }
          update: {
            args: Prisma.egresoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>
          }
          deleteMany: {
            args: Prisma.egresoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.egresoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.egresoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>[]
          }
          upsert: {
            args: Prisma.egresoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$egresoPayload>
          }
          aggregate: {
            args: Prisma.EgresoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEgreso>
          }
          groupBy: {
            args: Prisma.egresoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EgresoGroupByOutputType>[]
          }
          count: {
            args: Prisma.egresoCountArgs<ExtArgs>
            result: $Utils.Optional<EgresoCountAggregateOutputType> | number
          }
        }
      }
      ingreso: {
        payload: Prisma.$ingresoPayload<ExtArgs>
        fields: Prisma.ingresoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ingresoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ingresoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>
          }
          findFirst: {
            args: Prisma.ingresoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ingresoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>
          }
          findMany: {
            args: Prisma.ingresoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>[]
          }
          create: {
            args: Prisma.ingresoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>
          }
          createMany: {
            args: Prisma.ingresoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ingresoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>[]
          }
          delete: {
            args: Prisma.ingresoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>
          }
          update: {
            args: Prisma.ingresoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>
          }
          deleteMany: {
            args: Prisma.ingresoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ingresoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ingresoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>[]
          }
          upsert: {
            args: Prisma.ingresoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ingresoPayload>
          }
          aggregate: {
            args: Prisma.IngresoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIngreso>
          }
          groupBy: {
            args: Prisma.ingresoGroupByArgs<ExtArgs>
            result: $Utils.Optional<IngresoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ingresoCountArgs<ExtArgs>
            result: $Utils.Optional<IngresoCountAggregateOutputType> | number
          }
        }
      }
      juego: {
        payload: Prisma.$juegoPayload<ExtArgs>
        fields: Prisma.juegoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.juegoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.juegoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>
          }
          findFirst: {
            args: Prisma.juegoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.juegoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>
          }
          findMany: {
            args: Prisma.juegoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>[]
          }
          create: {
            args: Prisma.juegoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>
          }
          createMany: {
            args: Prisma.juegoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.juegoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>[]
          }
          delete: {
            args: Prisma.juegoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>
          }
          update: {
            args: Prisma.juegoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>
          }
          deleteMany: {
            args: Prisma.juegoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.juegoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.juegoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>[]
          }
          upsert: {
            args: Prisma.juegoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$juegoPayload>
          }
          aggregate: {
            args: Prisma.JuegoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJuego>
          }
          groupBy: {
            args: Prisma.juegoGroupByArgs<ExtArgs>
            result: $Utils.Optional<JuegoGroupByOutputType>[]
          }
          count: {
            args: Prisma.juegoCountArgs<ExtArgs>
            result: $Utils.Optional<JuegoCountAggregateOutputType> | number
          }
        }
      }
      jugada: {
        payload: Prisma.$jugadaPayload<ExtArgs>
        fields: Prisma.jugadaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.jugadaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.jugadaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>
          }
          findFirst: {
            args: Prisma.jugadaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.jugadaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>
          }
          findMany: {
            args: Prisma.jugadaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>[]
          }
          create: {
            args: Prisma.jugadaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>
          }
          createMany: {
            args: Prisma.jugadaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.jugadaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>[]
          }
          delete: {
            args: Prisma.jugadaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>
          }
          update: {
            args: Prisma.jugadaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>
          }
          deleteMany: {
            args: Prisma.jugadaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.jugadaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.jugadaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>[]
          }
          upsert: {
            args: Prisma.jugadaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jugadaPayload>
          }
          aggregate: {
            args: Prisma.JugadaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJugada>
          }
          groupBy: {
            args: Prisma.jugadaGroupByArgs<ExtArgs>
            result: $Utils.Optional<JugadaGroupByOutputType>[]
          }
          count: {
            args: Prisma.jugadaCountArgs<ExtArgs>
            result: $Utils.Optional<JugadaCountAggregateOutputType> | number
          }
        }
      }
      limitehorario: {
        payload: Prisma.$limitehorarioPayload<ExtArgs>
        fields: Prisma.limitehorarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.limitehorarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.limitehorarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>
          }
          findFirst: {
            args: Prisma.limitehorarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.limitehorarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>
          }
          findMany: {
            args: Prisma.limitehorarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>[]
          }
          create: {
            args: Prisma.limitehorarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>
          }
          createMany: {
            args: Prisma.limitehorarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.limitehorarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>[]
          }
          delete: {
            args: Prisma.limitehorarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>
          }
          update: {
            args: Prisma.limitehorarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>
          }
          deleteMany: {
            args: Prisma.limitehorarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.limitehorarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.limitehorarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>[]
          }
          upsert: {
            args: Prisma.limitehorarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitehorarioPayload>
          }
          aggregate: {
            args: Prisma.LimitehorarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLimitehorario>
          }
          groupBy: {
            args: Prisma.limitehorarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<LimitehorarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.limitehorarioCountArgs<ExtArgs>
            result: $Utils.Optional<LimitehorarioCountAggregateOutputType> | number
          }
        }
      }
      limitemonetario: {
        payload: Prisma.$limitemonetarioPayload<ExtArgs>
        fields: Prisma.limitemonetarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.limitemonetarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.limitemonetarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>
          }
          findFirst: {
            args: Prisma.limitemonetarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.limitemonetarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>
          }
          findMany: {
            args: Prisma.limitemonetarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>[]
          }
          create: {
            args: Prisma.limitemonetarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>
          }
          createMany: {
            args: Prisma.limitemonetarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.limitemonetarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>[]
          }
          delete: {
            args: Prisma.limitemonetarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>
          }
          update: {
            args: Prisma.limitemonetarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>
          }
          deleteMany: {
            args: Prisma.limitemonetarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.limitemonetarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.limitemonetarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>[]
          }
          upsert: {
            args: Prisma.limitemonetarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$limitemonetarioPayload>
          }
          aggregate: {
            args: Prisma.LimitemonetarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLimitemonetario>
          }
          groupBy: {
            args: Prisma.limitemonetarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<LimitemonetarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.limitemonetarioCountArgs<ExtArgs>
            result: $Utils.Optional<LimitemonetarioCountAggregateOutputType> | number
          }
        }
      }
      mensajes: {
        payload: Prisma.$mensajesPayload<ExtArgs>
        fields: Prisma.mensajesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mensajesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mensajesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>
          }
          findFirst: {
            args: Prisma.mensajesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mensajesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>
          }
          findMany: {
            args: Prisma.mensajesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>[]
          }
          create: {
            args: Prisma.mensajesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>
          }
          createMany: {
            args: Prisma.mensajesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mensajesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>[]
          }
          delete: {
            args: Prisma.mensajesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>
          }
          update: {
            args: Prisma.mensajesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>
          }
          deleteMany: {
            args: Prisma.mensajesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mensajesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mensajesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>[]
          }
          upsert: {
            args: Prisma.mensajesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mensajesPayload>
          }
          aggregate: {
            args: Prisma.MensajesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMensajes>
          }
          groupBy: {
            args: Prisma.mensajesGroupByArgs<ExtArgs>
            result: $Utils.Optional<MensajesGroupByOutputType>[]
          }
          count: {
            args: Prisma.mensajesCountArgs<ExtArgs>
            result: $Utils.Optional<MensajesCountAggregateOutputType> | number
          }
        }
      }
      partida: {
        payload: Prisma.$partidaPayload<ExtArgs>
        fields: Prisma.partidaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.partidaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.partidaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>
          }
          findFirst: {
            args: Prisma.partidaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.partidaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>
          }
          findMany: {
            args: Prisma.partidaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>[]
          }
          create: {
            args: Prisma.partidaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>
          }
          createMany: {
            args: Prisma.partidaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.partidaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>[]
          }
          delete: {
            args: Prisma.partidaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>
          }
          update: {
            args: Prisma.partidaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>
          }
          deleteMany: {
            args: Prisma.partidaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.partidaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.partidaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>[]
          }
          upsert: {
            args: Prisma.partidaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$partidaPayload>
          }
          aggregate: {
            args: Prisma.PartidaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePartida>
          }
          groupBy: {
            args: Prisma.partidaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PartidaGroupByOutputType>[]
          }
          count: {
            args: Prisma.partidaCountArgs<ExtArgs>
            result: $Utils.Optional<PartidaCountAggregateOutputType> | number
          }
        }
      }
      pausa: {
        payload: Prisma.$pausaPayload<ExtArgs>
        fields: Prisma.pausaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pausaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pausaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>
          }
          findFirst: {
            args: Prisma.pausaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pausaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>
          }
          findMany: {
            args: Prisma.pausaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>[]
          }
          create: {
            args: Prisma.pausaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>
          }
          createMany: {
            args: Prisma.pausaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pausaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>[]
          }
          delete: {
            args: Prisma.pausaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>
          }
          update: {
            args: Prisma.pausaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>
          }
          deleteMany: {
            args: Prisma.pausaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pausaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pausaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>[]
          }
          upsert: {
            args: Prisma.pausaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pausaPayload>
          }
          aggregate: {
            args: Prisma.PausaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePausa>
          }
          groupBy: {
            args: Prisma.pausaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PausaGroupByOutputType>[]
          }
          count: {
            args: Prisma.pausaCountArgs<ExtArgs>
            result: $Utils.Optional<PausaCountAggregateOutputType> | number
          }
        }
      }
      promocion: {
        payload: Prisma.$promocionPayload<ExtArgs>
        fields: Prisma.promocionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.promocionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.promocionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>
          }
          findFirst: {
            args: Prisma.promocionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.promocionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>
          }
          findMany: {
            args: Prisma.promocionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>[]
          }
          create: {
            args: Prisma.promocionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>
          }
          createMany: {
            args: Prisma.promocionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.promocionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>[]
          }
          delete: {
            args: Prisma.promocionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>
          }
          update: {
            args: Prisma.promocionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>
          }
          deleteMany: {
            args: Prisma.promocionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.promocionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.promocionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>[]
          }
          upsert: {
            args: Prisma.promocionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promocionPayload>
          }
          aggregate: {
            args: Prisma.PromocionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromocion>
          }
          groupBy: {
            args: Prisma.promocionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromocionGroupByOutputType>[]
          }
          count: {
            args: Prisma.promocionCountArgs<ExtArgs>
            result: $Utils.Optional<PromocionCountAggregateOutputType> | number
          }
        }
      }
      suspendidos: {
        payload: Prisma.$suspendidosPayload<ExtArgs>
        fields: Prisma.suspendidosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.suspendidosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.suspendidosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>
          }
          findFirst: {
            args: Prisma.suspendidosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.suspendidosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>
          }
          findMany: {
            args: Prisma.suspendidosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>[]
          }
          create: {
            args: Prisma.suspendidosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>
          }
          createMany: {
            args: Prisma.suspendidosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.suspendidosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>[]
          }
          delete: {
            args: Prisma.suspendidosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>
          }
          update: {
            args: Prisma.suspendidosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>
          }
          deleteMany: {
            args: Prisma.suspendidosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.suspendidosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.suspendidosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>[]
          }
          upsert: {
            args: Prisma.suspendidosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$suspendidosPayload>
          }
          aggregate: {
            args: Prisma.SuspendidosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSuspendidos>
          }
          groupBy: {
            args: Prisma.suspendidosGroupByArgs<ExtArgs>
            result: $Utils.Optional<SuspendidosGroupByOutputType>[]
          }
          count: {
            args: Prisma.suspendidosCountArgs<ExtArgs>
            result: $Utils.Optional<SuspendidosCountAggregateOutputType> | number
          }
        }
      }
      tickets: {
        payload: Prisma.$ticketsPayload<ExtArgs>
        fields: Prisma.ticketsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ticketsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ticketsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>
          }
          findFirst: {
            args: Prisma.ticketsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ticketsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>
          }
          findMany: {
            args: Prisma.ticketsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>[]
          }
          create: {
            args: Prisma.ticketsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>
          }
          createMany: {
            args: Prisma.ticketsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ticketsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>[]
          }
          delete: {
            args: Prisma.ticketsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>
          }
          update: {
            args: Prisma.ticketsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>
          }
          deleteMany: {
            args: Prisma.ticketsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ticketsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ticketsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>[]
          }
          upsert: {
            args: Prisma.ticketsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ticketsPayload>
          }
          aggregate: {
            args: Prisma.TicketsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTickets>
          }
          groupBy: {
            args: Prisma.ticketsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ticketsCountArgs<ExtArgs>
            result: $Utils.Optional<TicketsCountAggregateOutputType> | number
          }
        }
      }
      tiempodejuego: {
        payload: Prisma.$tiempodejuegoPayload<ExtArgs>
        fields: Prisma.tiempodejuegoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tiempodejuegoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tiempodejuegoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>
          }
          findFirst: {
            args: Prisma.tiempodejuegoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tiempodejuegoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>
          }
          findMany: {
            args: Prisma.tiempodejuegoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>[]
          }
          create: {
            args: Prisma.tiempodejuegoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>
          }
          createMany: {
            args: Prisma.tiempodejuegoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tiempodejuegoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>[]
          }
          delete: {
            args: Prisma.tiempodejuegoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>
          }
          update: {
            args: Prisma.tiempodejuegoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>
          }
          deleteMany: {
            args: Prisma.tiempodejuegoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tiempodejuegoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tiempodejuegoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>[]
          }
          upsert: {
            args: Prisma.tiempodejuegoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tiempodejuegoPayload>
          }
          aggregate: {
            args: Prisma.TiempodejuegoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTiempodejuego>
          }
          groupBy: {
            args: Prisma.tiempodejuegoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TiempodejuegoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tiempodejuegoCountArgs<ExtArgs>
            result: $Utils.Optional<TiempodejuegoCountAggregateOutputType> | number
          }
        }
      }
      usuario: {
        payload: Prisma.$usuarioPayload<ExtArgs>
        fields: Prisma.usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findFirst: {
            args: Prisma.usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findMany: {
            args: Prisma.usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          create: {
            args: Prisma.usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          createMany: {
            args: Prisma.usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          delete: {
            args: Prisma.usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          update: {
            args: Prisma.usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          deleteMany: {
            args: Prisma.usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          upsert: {
            args: Prisma.usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    administrador?: administradorOmit
    amistad?: amistadOmit
    aumentolimitehorario?: aumentolimitehorarioOmit
    aumentolimitesmonetario?: aumentolimitesmonetarioOmit
    cliente?: clienteOmit
    disminucionlimitehorario?: disminucionlimitehorarioOmit
    disminucionlimitemonetario?: disminucionlimitemonetarioOmit
    egreso?: egresoOmit
    ingreso?: ingresoOmit
    juego?: juegoOmit
    jugada?: jugadaOmit
    limitehorario?: limitehorarioOmit
    limitemonetario?: limitemonetarioOmit
    mensajes?: mensajesOmit
    partida?: partidaOmit
    pausa?: pausaOmit
    promocion?: promocionOmit
    suspendidos?: suspendidosOmit
    tickets?: ticketsOmit
    tiempodejuego?: tiempodejuegoOmit
    usuario?: usuarioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AdministradorCountOutputType
   */

  export type AdministradorCountOutputType = {
    aumentolimitehorario: number
    aumentolimitesmonetario: number
    suspendidos: number
    tickets: number
  }

  export type AdministradorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aumentolimitehorario?: boolean | AdministradorCountOutputTypeCountAumentolimitehorarioArgs
    aumentolimitesmonetario?: boolean | AdministradorCountOutputTypeCountAumentolimitesmonetarioArgs
    suspendidos?: boolean | AdministradorCountOutputTypeCountSuspendidosArgs
    tickets?: boolean | AdministradorCountOutputTypeCountTicketsArgs
  }

  // Custom InputTypes
  /**
   * AdministradorCountOutputType without action
   */
  export type AdministradorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdministradorCountOutputType
     */
    select?: AdministradorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdministradorCountOutputType without action
   */
  export type AdministradorCountOutputTypeCountAumentolimitehorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aumentolimitehorarioWhereInput
  }

  /**
   * AdministradorCountOutputType without action
   */
  export type AdministradorCountOutputTypeCountAumentolimitesmonetarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aumentolimitesmonetarioWhereInput
  }

  /**
   * AdministradorCountOutputType without action
   */
  export type AdministradorCountOutputTypeCountSuspendidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: suspendidosWhereInput
  }

  /**
   * AdministradorCountOutputType without action
   */
  export type AdministradorCountOutputTypeCountTicketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticketsWhereInput
  }


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    amistad_amistad_cliente2idTocliente: number
    amistad_amistad_clienteidTocliente: number
    aumentolimitehorario: number
    aumentolimitesmonetario: number
    disminucionlimitehorario: number
    disminucionlimitemonetario: number
    egreso: number
    ingreso: number
    jugada: number
    partida: number
    suspendidos: number
    tickets: number
    tiempodejuego: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    amistad_amistad_cliente2idTocliente?: boolean | ClienteCountOutputTypeCountAmistad_amistad_cliente2idToclienteArgs
    amistad_amistad_clienteidTocliente?: boolean | ClienteCountOutputTypeCountAmistad_amistad_clienteidToclienteArgs
    aumentolimitehorario?: boolean | ClienteCountOutputTypeCountAumentolimitehorarioArgs
    aumentolimitesmonetario?: boolean | ClienteCountOutputTypeCountAumentolimitesmonetarioArgs
    disminucionlimitehorario?: boolean | ClienteCountOutputTypeCountDisminucionlimitehorarioArgs
    disminucionlimitemonetario?: boolean | ClienteCountOutputTypeCountDisminucionlimitemonetarioArgs
    egreso?: boolean | ClienteCountOutputTypeCountEgresoArgs
    ingreso?: boolean | ClienteCountOutputTypeCountIngresoArgs
    jugada?: boolean | ClienteCountOutputTypeCountJugadaArgs
    partida?: boolean | ClienteCountOutputTypeCountPartidaArgs
    suspendidos?: boolean | ClienteCountOutputTypeCountSuspendidosArgs
    tickets?: boolean | ClienteCountOutputTypeCountTicketsArgs
    tiempodejuego?: boolean | ClienteCountOutputTypeCountTiempodejuegoArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountAmistad_amistad_cliente2idToclienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: amistadWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountAmistad_amistad_clienteidToclienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: amistadWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountAumentolimitehorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aumentolimitehorarioWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountAumentolimitesmonetarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aumentolimitesmonetarioWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountDisminucionlimitehorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disminucionlimitehorarioWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountDisminucionlimitemonetarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disminucionlimitemonetarioWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountEgresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: egresoWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountIngresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ingresoWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountJugadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: jugadaWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountPartidaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: partidaWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountSuspendidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: suspendidosWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountTicketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticketsWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountTiempodejuegoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tiempodejuegoWhereInput
  }


  /**
   * Count Type PartidaCountOutputType
   */

  export type PartidaCountOutputType = {
    jugada: number
  }

  export type PartidaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jugada?: boolean | PartidaCountOutputTypeCountJugadaArgs
  }

  // Custom InputTypes
  /**
   * PartidaCountOutputType without action
   */
  export type PartidaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PartidaCountOutputType
     */
    select?: PartidaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PartidaCountOutputType without action
   */
  export type PartidaCountOutputTypeCountJugadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: jugadaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model administrador
   */

  export type AggregateAdministrador = {
    _count: AdministradorCountAggregateOutputType | null
    _avg: AdministradorAvgAggregateOutputType | null
    _sum: AdministradorSumAggregateOutputType | null
    _min: AdministradorMinAggregateOutputType | null
    _max: AdministradorMaxAggregateOutputType | null
  }

  export type AdministradorAvgAggregateOutputType = {
    adminid: number | null
    balance: number | null
    usuarioid: number | null
  }

  export type AdministradorSumAggregateOutputType = {
    adminid: number | null
    balance: bigint | null
    usuarioid: number | null
  }

  export type AdministradorMinAggregateOutputType = {
    adminid: number | null
    balance: bigint | null
    superadmin: boolean | null
    usuarioid: number | null
  }

  export type AdministradorMaxAggregateOutputType = {
    adminid: number | null
    balance: bigint | null
    superadmin: boolean | null
    usuarioid: number | null
  }

  export type AdministradorCountAggregateOutputType = {
    adminid: number
    balance: number
    superadmin: number
    usuarioid: number
    _all: number
  }


  export type AdministradorAvgAggregateInputType = {
    adminid?: true
    balance?: true
    usuarioid?: true
  }

  export type AdministradorSumAggregateInputType = {
    adminid?: true
    balance?: true
    usuarioid?: true
  }

  export type AdministradorMinAggregateInputType = {
    adminid?: true
    balance?: true
    superadmin?: true
    usuarioid?: true
  }

  export type AdministradorMaxAggregateInputType = {
    adminid?: true
    balance?: true
    superadmin?: true
    usuarioid?: true
  }

  export type AdministradorCountAggregateInputType = {
    adminid?: true
    balance?: true
    superadmin?: true
    usuarioid?: true
    _all?: true
  }

  export type AdministradorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which administrador to aggregate.
     */
    where?: administradorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradors to fetch.
     */
    orderBy?: administradorOrderByWithRelationInput | administradorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: administradorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned administradors
    **/
    _count?: true | AdministradorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdministradorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdministradorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdministradorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdministradorMaxAggregateInputType
  }

  export type GetAdministradorAggregateType<T extends AdministradorAggregateArgs> = {
        [P in keyof T & keyof AggregateAdministrador]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdministrador[P]>
      : GetScalarType<T[P], AggregateAdministrador[P]>
  }




  export type administradorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: administradorWhereInput
    orderBy?: administradorOrderByWithAggregationInput | administradorOrderByWithAggregationInput[]
    by: AdministradorScalarFieldEnum[] | AdministradorScalarFieldEnum
    having?: administradorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdministradorCountAggregateInputType | true
    _avg?: AdministradorAvgAggregateInputType
    _sum?: AdministradorSumAggregateInputType
    _min?: AdministradorMinAggregateInputType
    _max?: AdministradorMaxAggregateInputType
  }

  export type AdministradorGroupByOutputType = {
    adminid: number
    balance: bigint | null
    superadmin: boolean | null
    usuarioid: number
    _count: AdministradorCountAggregateOutputType | null
    _avg: AdministradorAvgAggregateOutputType | null
    _sum: AdministradorSumAggregateOutputType | null
    _min: AdministradorMinAggregateOutputType | null
    _max: AdministradorMaxAggregateOutputType | null
  }

  type GetAdministradorGroupByPayload<T extends administradorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdministradorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdministradorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdministradorGroupByOutputType[P]>
            : GetScalarType<T[P], AdministradorGroupByOutputType[P]>
        }
      >
    >


  export type administradorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    adminid?: boolean
    balance?: boolean
    superadmin?: boolean
    usuarioid?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    aumentolimitehorario?: boolean | administrador$aumentolimitehorarioArgs<ExtArgs>
    aumentolimitesmonetario?: boolean | administrador$aumentolimitesmonetarioArgs<ExtArgs>
    suspendidos?: boolean | administrador$suspendidosArgs<ExtArgs>
    tickets?: boolean | administrador$ticketsArgs<ExtArgs>
    _count?: boolean | AdministradorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["administrador"]>

  export type administradorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    adminid?: boolean
    balance?: boolean
    superadmin?: boolean
    usuarioid?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["administrador"]>

  export type administradorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    adminid?: boolean
    balance?: boolean
    superadmin?: boolean
    usuarioid?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["administrador"]>

  export type administradorSelectScalar = {
    adminid?: boolean
    balance?: boolean
    superadmin?: boolean
    usuarioid?: boolean
  }

  export type administradorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"adminid" | "balance" | "superadmin" | "usuarioid", ExtArgs["result"]["administrador"]>
  export type administradorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    aumentolimitehorario?: boolean | administrador$aumentolimitehorarioArgs<ExtArgs>
    aumentolimitesmonetario?: boolean | administrador$aumentolimitesmonetarioArgs<ExtArgs>
    suspendidos?: boolean | administrador$suspendidosArgs<ExtArgs>
    tickets?: boolean | administrador$ticketsArgs<ExtArgs>
    _count?: boolean | AdministradorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type administradorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type administradorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }

  export type $administradorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "administrador"
    objects: {
      usuario: Prisma.$usuarioPayload<ExtArgs>
      aumentolimitehorario: Prisma.$aumentolimitehorarioPayload<ExtArgs>[]
      aumentolimitesmonetario: Prisma.$aumentolimitesmonetarioPayload<ExtArgs>[]
      suspendidos: Prisma.$suspendidosPayload<ExtArgs>[]
      tickets: Prisma.$ticketsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      adminid: number
      balance: bigint | null
      superadmin: boolean | null
      usuarioid: number
    }, ExtArgs["result"]["administrador"]>
    composites: {}
  }

  type administradorGetPayload<S extends boolean | null | undefined | administradorDefaultArgs> = $Result.GetResult<Prisma.$administradorPayload, S>

  type administradorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<administradorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdministradorCountAggregateInputType | true
    }

  export interface administradorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['administrador'], meta: { name: 'administrador' } }
    /**
     * Find zero or one Administrador that matches the filter.
     * @param {administradorFindUniqueArgs} args - Arguments to find a Administrador
     * @example
     * // Get one Administrador
     * const administrador = await prisma.administrador.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends administradorFindUniqueArgs>(args: SelectSubset<T, administradorFindUniqueArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Administrador that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {administradorFindUniqueOrThrowArgs} args - Arguments to find a Administrador
     * @example
     * // Get one Administrador
     * const administrador = await prisma.administrador.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends administradorFindUniqueOrThrowArgs>(args: SelectSubset<T, administradorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Administrador that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradorFindFirstArgs} args - Arguments to find a Administrador
     * @example
     * // Get one Administrador
     * const administrador = await prisma.administrador.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends administradorFindFirstArgs>(args?: SelectSubset<T, administradorFindFirstArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Administrador that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradorFindFirstOrThrowArgs} args - Arguments to find a Administrador
     * @example
     * // Get one Administrador
     * const administrador = await prisma.administrador.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends administradorFindFirstOrThrowArgs>(args?: SelectSubset<T, administradorFindFirstOrThrowArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Administradors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Administradors
     * const administradors = await prisma.administrador.findMany()
     * 
     * // Get first 10 Administradors
     * const administradors = await prisma.administrador.findMany({ take: 10 })
     * 
     * // Only select the `adminid`
     * const administradorWithAdminidOnly = await prisma.administrador.findMany({ select: { adminid: true } })
     * 
     */
    findMany<T extends administradorFindManyArgs>(args?: SelectSubset<T, administradorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Administrador.
     * @param {administradorCreateArgs} args - Arguments to create a Administrador.
     * @example
     * // Create one Administrador
     * const Administrador = await prisma.administrador.create({
     *   data: {
     *     // ... data to create a Administrador
     *   }
     * })
     * 
     */
    create<T extends administradorCreateArgs>(args: SelectSubset<T, administradorCreateArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Administradors.
     * @param {administradorCreateManyArgs} args - Arguments to create many Administradors.
     * @example
     * // Create many Administradors
     * const administrador = await prisma.administrador.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends administradorCreateManyArgs>(args?: SelectSubset<T, administradorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Administradors and returns the data saved in the database.
     * @param {administradorCreateManyAndReturnArgs} args - Arguments to create many Administradors.
     * @example
     * // Create many Administradors
     * const administrador = await prisma.administrador.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Administradors and only return the `adminid`
     * const administradorWithAdminidOnly = await prisma.administrador.createManyAndReturn({
     *   select: { adminid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends administradorCreateManyAndReturnArgs>(args?: SelectSubset<T, administradorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Administrador.
     * @param {administradorDeleteArgs} args - Arguments to delete one Administrador.
     * @example
     * // Delete one Administrador
     * const Administrador = await prisma.administrador.delete({
     *   where: {
     *     // ... filter to delete one Administrador
     *   }
     * })
     * 
     */
    delete<T extends administradorDeleteArgs>(args: SelectSubset<T, administradorDeleteArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Administrador.
     * @param {administradorUpdateArgs} args - Arguments to update one Administrador.
     * @example
     * // Update one Administrador
     * const administrador = await prisma.administrador.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends administradorUpdateArgs>(args: SelectSubset<T, administradorUpdateArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Administradors.
     * @param {administradorDeleteManyArgs} args - Arguments to filter Administradors to delete.
     * @example
     * // Delete a few Administradors
     * const { count } = await prisma.administrador.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends administradorDeleteManyArgs>(args?: SelectSubset<T, administradorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Administradors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Administradors
     * const administrador = await prisma.administrador.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends administradorUpdateManyArgs>(args: SelectSubset<T, administradorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Administradors and returns the data updated in the database.
     * @param {administradorUpdateManyAndReturnArgs} args - Arguments to update many Administradors.
     * @example
     * // Update many Administradors
     * const administrador = await prisma.administrador.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Administradors and only return the `adminid`
     * const administradorWithAdminidOnly = await prisma.administrador.updateManyAndReturn({
     *   select: { adminid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends administradorUpdateManyAndReturnArgs>(args: SelectSubset<T, administradorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Administrador.
     * @param {administradorUpsertArgs} args - Arguments to update or create a Administrador.
     * @example
     * // Update or create a Administrador
     * const administrador = await prisma.administrador.upsert({
     *   create: {
     *     // ... data to create a Administrador
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Administrador we want to update
     *   }
     * })
     */
    upsert<T extends administradorUpsertArgs>(args: SelectSubset<T, administradorUpsertArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Administradors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradorCountArgs} args - Arguments to filter Administradors to count.
     * @example
     * // Count the number of Administradors
     * const count = await prisma.administrador.count({
     *   where: {
     *     // ... the filter for the Administradors we want to count
     *   }
     * })
    **/
    count<T extends administradorCountArgs>(
      args?: Subset<T, administradorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdministradorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Administrador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdministradorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdministradorAggregateArgs>(args: Subset<T, AdministradorAggregateArgs>): Prisma.PrismaPromise<GetAdministradorAggregateType<T>>

    /**
     * Group by Administrador.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {administradorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends administradorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: administradorGroupByArgs['orderBy'] }
        : { orderBy?: administradorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, administradorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdministradorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the administrador model
   */
  readonly fields: administradorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for administrador.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__administradorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    aumentolimitehorario<T extends administrador$aumentolimitehorarioArgs<ExtArgs> = {}>(args?: Subset<T, administrador$aumentolimitehorarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aumentolimitesmonetario<T extends administrador$aumentolimitesmonetarioArgs<ExtArgs> = {}>(args?: Subset<T, administrador$aumentolimitesmonetarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    suspendidos<T extends administrador$suspendidosArgs<ExtArgs> = {}>(args?: Subset<T, administrador$suspendidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tickets<T extends administrador$ticketsArgs<ExtArgs> = {}>(args?: Subset<T, administrador$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the administrador model
   */ 
  interface administradorFieldRefs {
    readonly adminid: FieldRef<"administrador", 'Int'>
    readonly balance: FieldRef<"administrador", 'BigInt'>
    readonly superadmin: FieldRef<"administrador", 'Boolean'>
    readonly usuarioid: FieldRef<"administrador", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * administrador findUnique
   */
  export type administradorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * Filter, which administrador to fetch.
     */
    where: administradorWhereUniqueInput
  }

  /**
   * administrador findUniqueOrThrow
   */
  export type administradorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * Filter, which administrador to fetch.
     */
    where: administradorWhereUniqueInput
  }

  /**
   * administrador findFirst
   */
  export type administradorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * Filter, which administrador to fetch.
     */
    where?: administradorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradors to fetch.
     */
    orderBy?: administradorOrderByWithRelationInput | administradorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for administradors.
     */
    cursor?: administradorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of administradors.
     */
    distinct?: AdministradorScalarFieldEnum | AdministradorScalarFieldEnum[]
  }

  /**
   * administrador findFirstOrThrow
   */
  export type administradorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * Filter, which administrador to fetch.
     */
    where?: administradorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradors to fetch.
     */
    orderBy?: administradorOrderByWithRelationInput | administradorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for administradors.
     */
    cursor?: administradorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of administradors.
     */
    distinct?: AdministradorScalarFieldEnum | AdministradorScalarFieldEnum[]
  }

  /**
   * administrador findMany
   */
  export type administradorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * Filter, which administradors to fetch.
     */
    where?: administradorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of administradors to fetch.
     */
    orderBy?: administradorOrderByWithRelationInput | administradorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing administradors.
     */
    cursor?: administradorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` administradors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` administradors.
     */
    skip?: number
    distinct?: AdministradorScalarFieldEnum | AdministradorScalarFieldEnum[]
  }

  /**
   * administrador create
   */
  export type administradorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * The data needed to create a administrador.
     */
    data: XOR<administradorCreateInput, administradorUncheckedCreateInput>
  }

  /**
   * administrador createMany
   */
  export type administradorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many administradors.
     */
    data: administradorCreateManyInput | administradorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * administrador createManyAndReturn
   */
  export type administradorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * The data used to create many administradors.
     */
    data: administradorCreateManyInput | administradorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * administrador update
   */
  export type administradorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * The data needed to update a administrador.
     */
    data: XOR<administradorUpdateInput, administradorUncheckedUpdateInput>
    /**
     * Choose, which administrador to update.
     */
    where: administradorWhereUniqueInput
  }

  /**
   * administrador updateMany
   */
  export type administradorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update administradors.
     */
    data: XOR<administradorUpdateManyMutationInput, administradorUncheckedUpdateManyInput>
    /**
     * Filter which administradors to update
     */
    where?: administradorWhereInput
    /**
     * Limit how many administradors to update.
     */
    limit?: number
  }

  /**
   * administrador updateManyAndReturn
   */
  export type administradorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * The data used to update administradors.
     */
    data: XOR<administradorUpdateManyMutationInput, administradorUncheckedUpdateManyInput>
    /**
     * Filter which administradors to update
     */
    where?: administradorWhereInput
    /**
     * Limit how many administradors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * administrador upsert
   */
  export type administradorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * The filter to search for the administrador to update in case it exists.
     */
    where: administradorWhereUniqueInput
    /**
     * In case the administrador found by the `where` argument doesn't exist, create a new administrador with this data.
     */
    create: XOR<administradorCreateInput, administradorUncheckedCreateInput>
    /**
     * In case the administrador was found with the provided `where` argument, update it with this data.
     */
    update: XOR<administradorUpdateInput, administradorUncheckedUpdateInput>
  }

  /**
   * administrador delete
   */
  export type administradorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    /**
     * Filter which administrador to delete.
     */
    where: administradorWhereUniqueInput
  }

  /**
   * administrador deleteMany
   */
  export type administradorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which administradors to delete
     */
    where?: administradorWhereInput
    /**
     * Limit how many administradors to delete.
     */
    limit?: number
  }

  /**
   * administrador.aumentolimitehorario
   */
  export type administrador$aumentolimitehorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    where?: aumentolimitehorarioWhereInput
    orderBy?: aumentolimitehorarioOrderByWithRelationInput | aumentolimitehorarioOrderByWithRelationInput[]
    cursor?: aumentolimitehorarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AumentolimitehorarioScalarFieldEnum | AumentolimitehorarioScalarFieldEnum[]
  }

  /**
   * administrador.aumentolimitesmonetario
   */
  export type administrador$aumentolimitesmonetarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    where?: aumentolimitesmonetarioWhereInput
    orderBy?: aumentolimitesmonetarioOrderByWithRelationInput | aumentolimitesmonetarioOrderByWithRelationInput[]
    cursor?: aumentolimitesmonetarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AumentolimitesmonetarioScalarFieldEnum | AumentolimitesmonetarioScalarFieldEnum[]
  }

  /**
   * administrador.suspendidos
   */
  export type administrador$suspendidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    where?: suspendidosWhereInput
    orderBy?: suspendidosOrderByWithRelationInput | suspendidosOrderByWithRelationInput[]
    cursor?: suspendidosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuspendidosScalarFieldEnum | SuspendidosScalarFieldEnum[]
  }

  /**
   * administrador.tickets
   */
  export type administrador$ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    where?: ticketsWhereInput
    orderBy?: ticketsOrderByWithRelationInput | ticketsOrderByWithRelationInput[]
    cursor?: ticketsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketsScalarFieldEnum | TicketsScalarFieldEnum[]
  }

  /**
   * administrador without action
   */
  export type administradorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
  }


  /**
   * Model amistad
   */

  export type AggregateAmistad = {
    _count: AmistadCountAggregateOutputType | null
    _avg: AmistadAvgAggregateOutputType | null
    _sum: AmistadSumAggregateOutputType | null
    _min: AmistadMinAggregateOutputType | null
    _max: AmistadMaxAggregateOutputType | null
  }

  export type AmistadAvgAggregateOutputType = {
    amistadid: number | null
    clienteid: number | null
    cliente2id: number | null
  }

  export type AmistadSumAggregateOutputType = {
    amistadid: number | null
    clienteid: number | null
    cliente2id: number | null
  }

  export type AmistadMinAggregateOutputType = {
    amistadid: number | null
    clienteid: number | null
    cliente2id: number | null
    aceptada: boolean | null
  }

  export type AmistadMaxAggregateOutputType = {
    amistadid: number | null
    clienteid: number | null
    cliente2id: number | null
    aceptada: boolean | null
  }

  export type AmistadCountAggregateOutputType = {
    amistadid: number
    clienteid: number
    cliente2id: number
    aceptada: number
    _all: number
  }


  export type AmistadAvgAggregateInputType = {
    amistadid?: true
    clienteid?: true
    cliente2id?: true
  }

  export type AmistadSumAggregateInputType = {
    amistadid?: true
    clienteid?: true
    cliente2id?: true
  }

  export type AmistadMinAggregateInputType = {
    amistadid?: true
    clienteid?: true
    cliente2id?: true
    aceptada?: true
  }

  export type AmistadMaxAggregateInputType = {
    amistadid?: true
    clienteid?: true
    cliente2id?: true
    aceptada?: true
  }

  export type AmistadCountAggregateInputType = {
    amistadid?: true
    clienteid?: true
    cliente2id?: true
    aceptada?: true
    _all?: true
  }

  export type AmistadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which amistad to aggregate.
     */
    where?: amistadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of amistads to fetch.
     */
    orderBy?: amistadOrderByWithRelationInput | amistadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: amistadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` amistads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` amistads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned amistads
    **/
    _count?: true | AmistadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AmistadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AmistadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AmistadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AmistadMaxAggregateInputType
  }

  export type GetAmistadAggregateType<T extends AmistadAggregateArgs> = {
        [P in keyof T & keyof AggregateAmistad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAmistad[P]>
      : GetScalarType<T[P], AggregateAmistad[P]>
  }




  export type amistadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: amistadWhereInput
    orderBy?: amistadOrderByWithAggregationInput | amistadOrderByWithAggregationInput[]
    by: AmistadScalarFieldEnum[] | AmistadScalarFieldEnum
    having?: amistadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AmistadCountAggregateInputType | true
    _avg?: AmistadAvgAggregateInputType
    _sum?: AmistadSumAggregateInputType
    _min?: AmistadMinAggregateInputType
    _max?: AmistadMaxAggregateInputType
  }

  export type AmistadGroupByOutputType = {
    amistadid: number
    clienteid: number | null
    cliente2id: number | null
    aceptada: boolean | null
    _count: AmistadCountAggregateOutputType | null
    _avg: AmistadAvgAggregateOutputType | null
    _sum: AmistadSumAggregateOutputType | null
    _min: AmistadMinAggregateOutputType | null
    _max: AmistadMaxAggregateOutputType | null
  }

  type GetAmistadGroupByPayload<T extends amistadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AmistadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AmistadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AmistadGroupByOutputType[P]>
            : GetScalarType<T[P], AmistadGroupByOutputType[P]>
        }
      >
    >


  export type amistadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    amistadid?: boolean
    clienteid?: boolean
    cliente2id?: boolean
    aceptada?: boolean
    cliente_amistad_cliente2idTocliente?: boolean | amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs>
    cliente_amistad_clienteidTocliente?: boolean | amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs>
  }, ExtArgs["result"]["amistad"]>

  export type amistadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    amistadid?: boolean
    clienteid?: boolean
    cliente2id?: boolean
    aceptada?: boolean
    cliente_amistad_cliente2idTocliente?: boolean | amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs>
    cliente_amistad_clienteidTocliente?: boolean | amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs>
  }, ExtArgs["result"]["amistad"]>

  export type amistadSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    amistadid?: boolean
    clienteid?: boolean
    cliente2id?: boolean
    aceptada?: boolean
    cliente_amistad_cliente2idTocliente?: boolean | amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs>
    cliente_amistad_clienteidTocliente?: boolean | amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs>
  }, ExtArgs["result"]["amistad"]>

  export type amistadSelectScalar = {
    amistadid?: boolean
    clienteid?: boolean
    cliente2id?: boolean
    aceptada?: boolean
  }

  export type amistadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"amistadid" | "clienteid" | "cliente2id" | "aceptada", ExtArgs["result"]["amistad"]>
  export type amistadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente_amistad_cliente2idTocliente?: boolean | amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs>
    cliente_amistad_clienteidTocliente?: boolean | amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs>
  }
  export type amistadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente_amistad_cliente2idTocliente?: boolean | amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs>
    cliente_amistad_clienteidTocliente?: boolean | amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs>
  }
  export type amistadIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente_amistad_cliente2idTocliente?: boolean | amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs>
    cliente_amistad_clienteidTocliente?: boolean | amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs>
  }

  export type $amistadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "amistad"
    objects: {
      cliente_amistad_cliente2idTocliente: Prisma.$clientePayload<ExtArgs> | null
      cliente_amistad_clienteidTocliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      amistadid: number
      clienteid: number | null
      cliente2id: number | null
      aceptada: boolean | null
    }, ExtArgs["result"]["amistad"]>
    composites: {}
  }

  type amistadGetPayload<S extends boolean | null | undefined | amistadDefaultArgs> = $Result.GetResult<Prisma.$amistadPayload, S>

  type amistadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<amistadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AmistadCountAggregateInputType | true
    }

  export interface amistadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['amistad'], meta: { name: 'amistad' } }
    /**
     * Find zero or one Amistad that matches the filter.
     * @param {amistadFindUniqueArgs} args - Arguments to find a Amistad
     * @example
     * // Get one Amistad
     * const amistad = await prisma.amistad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends amistadFindUniqueArgs>(args: SelectSubset<T, amistadFindUniqueArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Amistad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {amistadFindUniqueOrThrowArgs} args - Arguments to find a Amistad
     * @example
     * // Get one Amistad
     * const amistad = await prisma.amistad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends amistadFindUniqueOrThrowArgs>(args: SelectSubset<T, amistadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Amistad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {amistadFindFirstArgs} args - Arguments to find a Amistad
     * @example
     * // Get one Amistad
     * const amistad = await prisma.amistad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends amistadFindFirstArgs>(args?: SelectSubset<T, amistadFindFirstArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Amistad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {amistadFindFirstOrThrowArgs} args - Arguments to find a Amistad
     * @example
     * // Get one Amistad
     * const amistad = await prisma.amistad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends amistadFindFirstOrThrowArgs>(args?: SelectSubset<T, amistadFindFirstOrThrowArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Amistads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {amistadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Amistads
     * const amistads = await prisma.amistad.findMany()
     * 
     * // Get first 10 Amistads
     * const amistads = await prisma.amistad.findMany({ take: 10 })
     * 
     * // Only select the `amistadid`
     * const amistadWithAmistadidOnly = await prisma.amistad.findMany({ select: { amistadid: true } })
     * 
     */
    findMany<T extends amistadFindManyArgs>(args?: SelectSubset<T, amistadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Amistad.
     * @param {amistadCreateArgs} args - Arguments to create a Amistad.
     * @example
     * // Create one Amistad
     * const Amistad = await prisma.amistad.create({
     *   data: {
     *     // ... data to create a Amistad
     *   }
     * })
     * 
     */
    create<T extends amistadCreateArgs>(args: SelectSubset<T, amistadCreateArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Amistads.
     * @param {amistadCreateManyArgs} args - Arguments to create many Amistads.
     * @example
     * // Create many Amistads
     * const amistad = await prisma.amistad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends amistadCreateManyArgs>(args?: SelectSubset<T, amistadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Amistads and returns the data saved in the database.
     * @param {amistadCreateManyAndReturnArgs} args - Arguments to create many Amistads.
     * @example
     * // Create many Amistads
     * const amistad = await prisma.amistad.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Amistads and only return the `amistadid`
     * const amistadWithAmistadidOnly = await prisma.amistad.createManyAndReturn({
     *   select: { amistadid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends amistadCreateManyAndReturnArgs>(args?: SelectSubset<T, amistadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Amistad.
     * @param {amistadDeleteArgs} args - Arguments to delete one Amistad.
     * @example
     * // Delete one Amistad
     * const Amistad = await prisma.amistad.delete({
     *   where: {
     *     // ... filter to delete one Amistad
     *   }
     * })
     * 
     */
    delete<T extends amistadDeleteArgs>(args: SelectSubset<T, amistadDeleteArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Amistad.
     * @param {amistadUpdateArgs} args - Arguments to update one Amistad.
     * @example
     * // Update one Amistad
     * const amistad = await prisma.amistad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends amistadUpdateArgs>(args: SelectSubset<T, amistadUpdateArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Amistads.
     * @param {amistadDeleteManyArgs} args - Arguments to filter Amistads to delete.
     * @example
     * // Delete a few Amistads
     * const { count } = await prisma.amistad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends amistadDeleteManyArgs>(args?: SelectSubset<T, amistadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Amistads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {amistadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Amistads
     * const amistad = await prisma.amistad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends amistadUpdateManyArgs>(args: SelectSubset<T, amistadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Amistads and returns the data updated in the database.
     * @param {amistadUpdateManyAndReturnArgs} args - Arguments to update many Amistads.
     * @example
     * // Update many Amistads
     * const amistad = await prisma.amistad.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Amistads and only return the `amistadid`
     * const amistadWithAmistadidOnly = await prisma.amistad.updateManyAndReturn({
     *   select: { amistadid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends amistadUpdateManyAndReturnArgs>(args: SelectSubset<T, amistadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Amistad.
     * @param {amistadUpsertArgs} args - Arguments to update or create a Amistad.
     * @example
     * // Update or create a Amistad
     * const amistad = await prisma.amistad.upsert({
     *   create: {
     *     // ... data to create a Amistad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Amistad we want to update
     *   }
     * })
     */
    upsert<T extends amistadUpsertArgs>(args: SelectSubset<T, amistadUpsertArgs<ExtArgs>>): Prisma__amistadClient<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Amistads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {amistadCountArgs} args - Arguments to filter Amistads to count.
     * @example
     * // Count the number of Amistads
     * const count = await prisma.amistad.count({
     *   where: {
     *     // ... the filter for the Amistads we want to count
     *   }
     * })
    **/
    count<T extends amistadCountArgs>(
      args?: Subset<T, amistadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AmistadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Amistad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AmistadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AmistadAggregateArgs>(args: Subset<T, AmistadAggregateArgs>): Prisma.PrismaPromise<GetAmistadAggregateType<T>>

    /**
     * Group by Amistad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {amistadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends amistadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: amistadGroupByArgs['orderBy'] }
        : { orderBy?: amistadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, amistadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAmistadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the amistad model
   */
  readonly fields: amistadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for amistad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__amistadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente_amistad_cliente2idTocliente<T extends amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs> = {}>(args?: Subset<T, amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cliente_amistad_clienteidTocliente<T extends amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs> = {}>(args?: Subset<T, amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the amistad model
   */ 
  interface amistadFieldRefs {
    readonly amistadid: FieldRef<"amistad", 'Int'>
    readonly clienteid: FieldRef<"amistad", 'Int'>
    readonly cliente2id: FieldRef<"amistad", 'Int'>
    readonly aceptada: FieldRef<"amistad", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * amistad findUnique
   */
  export type amistadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * Filter, which amistad to fetch.
     */
    where: amistadWhereUniqueInput
  }

  /**
   * amistad findUniqueOrThrow
   */
  export type amistadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * Filter, which amistad to fetch.
     */
    where: amistadWhereUniqueInput
  }

  /**
   * amistad findFirst
   */
  export type amistadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * Filter, which amistad to fetch.
     */
    where?: amistadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of amistads to fetch.
     */
    orderBy?: amistadOrderByWithRelationInput | amistadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for amistads.
     */
    cursor?: amistadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` amistads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` amistads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of amistads.
     */
    distinct?: AmistadScalarFieldEnum | AmistadScalarFieldEnum[]
  }

  /**
   * amistad findFirstOrThrow
   */
  export type amistadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * Filter, which amistad to fetch.
     */
    where?: amistadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of amistads to fetch.
     */
    orderBy?: amistadOrderByWithRelationInput | amistadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for amistads.
     */
    cursor?: amistadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` amistads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` amistads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of amistads.
     */
    distinct?: AmistadScalarFieldEnum | AmistadScalarFieldEnum[]
  }

  /**
   * amistad findMany
   */
  export type amistadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * Filter, which amistads to fetch.
     */
    where?: amistadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of amistads to fetch.
     */
    orderBy?: amistadOrderByWithRelationInput | amistadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing amistads.
     */
    cursor?: amistadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` amistads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` amistads.
     */
    skip?: number
    distinct?: AmistadScalarFieldEnum | AmistadScalarFieldEnum[]
  }

  /**
   * amistad create
   */
  export type amistadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * The data needed to create a amistad.
     */
    data?: XOR<amistadCreateInput, amistadUncheckedCreateInput>
  }

  /**
   * amistad createMany
   */
  export type amistadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many amistads.
     */
    data: amistadCreateManyInput | amistadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * amistad createManyAndReturn
   */
  export type amistadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * The data used to create many amistads.
     */
    data: amistadCreateManyInput | amistadCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * amistad update
   */
  export type amistadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * The data needed to update a amistad.
     */
    data: XOR<amistadUpdateInput, amistadUncheckedUpdateInput>
    /**
     * Choose, which amistad to update.
     */
    where: amistadWhereUniqueInput
  }

  /**
   * amistad updateMany
   */
  export type amistadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update amistads.
     */
    data: XOR<amistadUpdateManyMutationInput, amistadUncheckedUpdateManyInput>
    /**
     * Filter which amistads to update
     */
    where?: amistadWhereInput
    /**
     * Limit how many amistads to update.
     */
    limit?: number
  }

  /**
   * amistad updateManyAndReturn
   */
  export type amistadUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * The data used to update amistads.
     */
    data: XOR<amistadUpdateManyMutationInput, amistadUncheckedUpdateManyInput>
    /**
     * Filter which amistads to update
     */
    where?: amistadWhereInput
    /**
     * Limit how many amistads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * amistad upsert
   */
  export type amistadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * The filter to search for the amistad to update in case it exists.
     */
    where: amistadWhereUniqueInput
    /**
     * In case the amistad found by the `where` argument doesn't exist, create a new amistad with this data.
     */
    create: XOR<amistadCreateInput, amistadUncheckedCreateInput>
    /**
     * In case the amistad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<amistadUpdateInput, amistadUncheckedUpdateInput>
  }

  /**
   * amistad delete
   */
  export type amistadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    /**
     * Filter which amistad to delete.
     */
    where: amistadWhereUniqueInput
  }

  /**
   * amistad deleteMany
   */
  export type amistadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which amistads to delete
     */
    where?: amistadWhereInput
    /**
     * Limit how many amistads to delete.
     */
    limit?: number
  }

  /**
   * amistad.cliente_amistad_cliente2idTocliente
   */
  export type amistad$cliente_amistad_cliente2idToclienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * amistad.cliente_amistad_clienteidTocliente
   */
  export type amistad$cliente_amistad_clienteidToclienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * amistad without action
   */
  export type amistadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
  }


  /**
   * Model aumentolimitehorario
   */

  export type AggregateAumentolimitehorario = {
    _count: AumentolimitehorarioCountAggregateOutputType | null
    _avg: AumentolimitehorarioAvgAggregateOutputType | null
    _sum: AumentolimitehorarioSumAggregateOutputType | null
    _min: AumentolimitehorarioMinAggregateOutputType | null
    _max: AumentolimitehorarioMaxAggregateOutputType | null
  }

  export type AumentolimitehorarioAvgAggregateOutputType = {
    aumenthorarioid: number | null
    clienteid: number | null
    cantidad: number | null
    adminid: number | null
  }

  export type AumentolimitehorarioSumAggregateOutputType = {
    aumenthorarioid: number | null
    clienteid: number | null
    cantidad: number | null
    adminid: number | null
  }

  export type AumentolimitehorarioMinAggregateOutputType = {
    aumenthorarioid: number | null
    clienteid: number | null
    cantidad: number | null
    adminid: number | null
    fechaabierto: Date | null
    fecharesuelto: Date | null
  }

  export type AumentolimitehorarioMaxAggregateOutputType = {
    aumenthorarioid: number | null
    clienteid: number | null
    cantidad: number | null
    adminid: number | null
    fechaabierto: Date | null
    fecharesuelto: Date | null
  }

  export type AumentolimitehorarioCountAggregateOutputType = {
    aumenthorarioid: number
    clienteid: number
    cantidad: number
    adminid: number
    fechaabierto: number
    fecharesuelto: number
    _all: number
  }


  export type AumentolimitehorarioAvgAggregateInputType = {
    aumenthorarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
  }

  export type AumentolimitehorarioSumAggregateInputType = {
    aumenthorarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
  }

  export type AumentolimitehorarioMinAggregateInputType = {
    aumenthorarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
    fechaabierto?: true
    fecharesuelto?: true
  }

  export type AumentolimitehorarioMaxAggregateInputType = {
    aumenthorarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
    fechaabierto?: true
    fecharesuelto?: true
  }

  export type AumentolimitehorarioCountAggregateInputType = {
    aumenthorarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
    fechaabierto?: true
    fecharesuelto?: true
    _all?: true
  }

  export type AumentolimitehorarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aumentolimitehorario to aggregate.
     */
    where?: aumentolimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitehorarios to fetch.
     */
    orderBy?: aumentolimitehorarioOrderByWithRelationInput | aumentolimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: aumentolimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned aumentolimitehorarios
    **/
    _count?: true | AumentolimitehorarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AumentolimitehorarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AumentolimitehorarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AumentolimitehorarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AumentolimitehorarioMaxAggregateInputType
  }

  export type GetAumentolimitehorarioAggregateType<T extends AumentolimitehorarioAggregateArgs> = {
        [P in keyof T & keyof AggregateAumentolimitehorario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAumentolimitehorario[P]>
      : GetScalarType<T[P], AggregateAumentolimitehorario[P]>
  }




  export type aumentolimitehorarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aumentolimitehorarioWhereInput
    orderBy?: aumentolimitehorarioOrderByWithAggregationInput | aumentolimitehorarioOrderByWithAggregationInput[]
    by: AumentolimitehorarioScalarFieldEnum[] | AumentolimitehorarioScalarFieldEnum
    having?: aumentolimitehorarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AumentolimitehorarioCountAggregateInputType | true
    _avg?: AumentolimitehorarioAvgAggregateInputType
    _sum?: AumentolimitehorarioSumAggregateInputType
    _min?: AumentolimitehorarioMinAggregateInputType
    _max?: AumentolimitehorarioMaxAggregateInputType
  }

  export type AumentolimitehorarioGroupByOutputType = {
    aumenthorarioid: number
    clienteid: number | null
    cantidad: number | null
    adminid: number | null
    fechaabierto: Date | null
    fecharesuelto: Date | null
    _count: AumentolimitehorarioCountAggregateOutputType | null
    _avg: AumentolimitehorarioAvgAggregateOutputType | null
    _sum: AumentolimitehorarioSumAggregateOutputType | null
    _min: AumentolimitehorarioMinAggregateOutputType | null
    _max: AumentolimitehorarioMaxAggregateOutputType | null
  }

  type GetAumentolimitehorarioGroupByPayload<T extends aumentolimitehorarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AumentolimitehorarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AumentolimitehorarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AumentolimitehorarioGroupByOutputType[P]>
            : GetScalarType<T[P], AumentolimitehorarioGroupByOutputType[P]>
        }
      >
    >


  export type aumentolimitehorarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    aumenthorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
    administrador?: boolean | aumentolimitehorario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitehorario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["aumentolimitehorario"]>

  export type aumentolimitehorarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    aumenthorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
    administrador?: boolean | aumentolimitehorario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitehorario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["aumentolimitehorario"]>

  export type aumentolimitehorarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    aumenthorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
    administrador?: boolean | aumentolimitehorario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitehorario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["aumentolimitehorario"]>

  export type aumentolimitehorarioSelectScalar = {
    aumenthorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
  }

  export type aumentolimitehorarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"aumenthorarioid" | "clienteid" | "cantidad" | "adminid" | "fechaabierto" | "fecharesuelto", ExtArgs["result"]["aumentolimitehorario"]>
  export type aumentolimitehorarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | aumentolimitehorario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitehorario$clienteArgs<ExtArgs>
  }
  export type aumentolimitehorarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | aumentolimitehorario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitehorario$clienteArgs<ExtArgs>
  }
  export type aumentolimitehorarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | aumentolimitehorario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitehorario$clienteArgs<ExtArgs>
  }

  export type $aumentolimitehorarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "aumentolimitehorario"
    objects: {
      administrador: Prisma.$administradorPayload<ExtArgs> | null
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      aumenthorarioid: number
      clienteid: number | null
      cantidad: number | null
      adminid: number | null
      fechaabierto: Date | null
      fecharesuelto: Date | null
    }, ExtArgs["result"]["aumentolimitehorario"]>
    composites: {}
  }

  type aumentolimitehorarioGetPayload<S extends boolean | null | undefined | aumentolimitehorarioDefaultArgs> = $Result.GetResult<Prisma.$aumentolimitehorarioPayload, S>

  type aumentolimitehorarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<aumentolimitehorarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AumentolimitehorarioCountAggregateInputType | true
    }

  export interface aumentolimitehorarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['aumentolimitehorario'], meta: { name: 'aumentolimitehorario' } }
    /**
     * Find zero or one Aumentolimitehorario that matches the filter.
     * @param {aumentolimitehorarioFindUniqueArgs} args - Arguments to find a Aumentolimitehorario
     * @example
     * // Get one Aumentolimitehorario
     * const aumentolimitehorario = await prisma.aumentolimitehorario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends aumentolimitehorarioFindUniqueArgs>(args: SelectSubset<T, aumentolimitehorarioFindUniqueArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Aumentolimitehorario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {aumentolimitehorarioFindUniqueOrThrowArgs} args - Arguments to find a Aumentolimitehorario
     * @example
     * // Get one Aumentolimitehorario
     * const aumentolimitehorario = await prisma.aumentolimitehorario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends aumentolimitehorarioFindUniqueOrThrowArgs>(args: SelectSubset<T, aumentolimitehorarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aumentolimitehorario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitehorarioFindFirstArgs} args - Arguments to find a Aumentolimitehorario
     * @example
     * // Get one Aumentolimitehorario
     * const aumentolimitehorario = await prisma.aumentolimitehorario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends aumentolimitehorarioFindFirstArgs>(args?: SelectSubset<T, aumentolimitehorarioFindFirstArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aumentolimitehorario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitehorarioFindFirstOrThrowArgs} args - Arguments to find a Aumentolimitehorario
     * @example
     * // Get one Aumentolimitehorario
     * const aumentolimitehorario = await prisma.aumentolimitehorario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends aumentolimitehorarioFindFirstOrThrowArgs>(args?: SelectSubset<T, aumentolimitehorarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Aumentolimitehorarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitehorarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Aumentolimitehorarios
     * const aumentolimitehorarios = await prisma.aumentolimitehorario.findMany()
     * 
     * // Get first 10 Aumentolimitehorarios
     * const aumentolimitehorarios = await prisma.aumentolimitehorario.findMany({ take: 10 })
     * 
     * // Only select the `aumenthorarioid`
     * const aumentolimitehorarioWithAumenthorarioidOnly = await prisma.aumentolimitehorario.findMany({ select: { aumenthorarioid: true } })
     * 
     */
    findMany<T extends aumentolimitehorarioFindManyArgs>(args?: SelectSubset<T, aumentolimitehorarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Aumentolimitehorario.
     * @param {aumentolimitehorarioCreateArgs} args - Arguments to create a Aumentolimitehorario.
     * @example
     * // Create one Aumentolimitehorario
     * const Aumentolimitehorario = await prisma.aumentolimitehorario.create({
     *   data: {
     *     // ... data to create a Aumentolimitehorario
     *   }
     * })
     * 
     */
    create<T extends aumentolimitehorarioCreateArgs>(args: SelectSubset<T, aumentolimitehorarioCreateArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Aumentolimitehorarios.
     * @param {aumentolimitehorarioCreateManyArgs} args - Arguments to create many Aumentolimitehorarios.
     * @example
     * // Create many Aumentolimitehorarios
     * const aumentolimitehorario = await prisma.aumentolimitehorario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends aumentolimitehorarioCreateManyArgs>(args?: SelectSubset<T, aumentolimitehorarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Aumentolimitehorarios and returns the data saved in the database.
     * @param {aumentolimitehorarioCreateManyAndReturnArgs} args - Arguments to create many Aumentolimitehorarios.
     * @example
     * // Create many Aumentolimitehorarios
     * const aumentolimitehorario = await prisma.aumentolimitehorario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Aumentolimitehorarios and only return the `aumenthorarioid`
     * const aumentolimitehorarioWithAumenthorarioidOnly = await prisma.aumentolimitehorario.createManyAndReturn({
     *   select: { aumenthorarioid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends aumentolimitehorarioCreateManyAndReturnArgs>(args?: SelectSubset<T, aumentolimitehorarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Aumentolimitehorario.
     * @param {aumentolimitehorarioDeleteArgs} args - Arguments to delete one Aumentolimitehorario.
     * @example
     * // Delete one Aumentolimitehorario
     * const Aumentolimitehorario = await prisma.aumentolimitehorario.delete({
     *   where: {
     *     // ... filter to delete one Aumentolimitehorario
     *   }
     * })
     * 
     */
    delete<T extends aumentolimitehorarioDeleteArgs>(args: SelectSubset<T, aumentolimitehorarioDeleteArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Aumentolimitehorario.
     * @param {aumentolimitehorarioUpdateArgs} args - Arguments to update one Aumentolimitehorario.
     * @example
     * // Update one Aumentolimitehorario
     * const aumentolimitehorario = await prisma.aumentolimitehorario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends aumentolimitehorarioUpdateArgs>(args: SelectSubset<T, aumentolimitehorarioUpdateArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Aumentolimitehorarios.
     * @param {aumentolimitehorarioDeleteManyArgs} args - Arguments to filter Aumentolimitehorarios to delete.
     * @example
     * // Delete a few Aumentolimitehorarios
     * const { count } = await prisma.aumentolimitehorario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends aumentolimitehorarioDeleteManyArgs>(args?: SelectSubset<T, aumentolimitehorarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aumentolimitehorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitehorarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Aumentolimitehorarios
     * const aumentolimitehorario = await prisma.aumentolimitehorario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends aumentolimitehorarioUpdateManyArgs>(args: SelectSubset<T, aumentolimitehorarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aumentolimitehorarios and returns the data updated in the database.
     * @param {aumentolimitehorarioUpdateManyAndReturnArgs} args - Arguments to update many Aumentolimitehorarios.
     * @example
     * // Update many Aumentolimitehorarios
     * const aumentolimitehorario = await prisma.aumentolimitehorario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Aumentolimitehorarios and only return the `aumenthorarioid`
     * const aumentolimitehorarioWithAumenthorarioidOnly = await prisma.aumentolimitehorario.updateManyAndReturn({
     *   select: { aumenthorarioid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends aumentolimitehorarioUpdateManyAndReturnArgs>(args: SelectSubset<T, aumentolimitehorarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Aumentolimitehorario.
     * @param {aumentolimitehorarioUpsertArgs} args - Arguments to update or create a Aumentolimitehorario.
     * @example
     * // Update or create a Aumentolimitehorario
     * const aumentolimitehorario = await prisma.aumentolimitehorario.upsert({
     *   create: {
     *     // ... data to create a Aumentolimitehorario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Aumentolimitehorario we want to update
     *   }
     * })
     */
    upsert<T extends aumentolimitehorarioUpsertArgs>(args: SelectSubset<T, aumentolimitehorarioUpsertArgs<ExtArgs>>): Prisma__aumentolimitehorarioClient<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Aumentolimitehorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitehorarioCountArgs} args - Arguments to filter Aumentolimitehorarios to count.
     * @example
     * // Count the number of Aumentolimitehorarios
     * const count = await prisma.aumentolimitehorario.count({
     *   where: {
     *     // ... the filter for the Aumentolimitehorarios we want to count
     *   }
     * })
    **/
    count<T extends aumentolimitehorarioCountArgs>(
      args?: Subset<T, aumentolimitehorarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AumentolimitehorarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Aumentolimitehorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AumentolimitehorarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AumentolimitehorarioAggregateArgs>(args: Subset<T, AumentolimitehorarioAggregateArgs>): Prisma.PrismaPromise<GetAumentolimitehorarioAggregateType<T>>

    /**
     * Group by Aumentolimitehorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitehorarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends aumentolimitehorarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: aumentolimitehorarioGroupByArgs['orderBy'] }
        : { orderBy?: aumentolimitehorarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, aumentolimitehorarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAumentolimitehorarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the aumentolimitehorario model
   */
  readonly fields: aumentolimitehorarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for aumentolimitehorario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__aumentolimitehorarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    administrador<T extends aumentolimitehorario$administradorArgs<ExtArgs> = {}>(args?: Subset<T, aumentolimitehorario$administradorArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cliente<T extends aumentolimitehorario$clienteArgs<ExtArgs> = {}>(args?: Subset<T, aumentolimitehorario$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the aumentolimitehorario model
   */ 
  interface aumentolimitehorarioFieldRefs {
    readonly aumenthorarioid: FieldRef<"aumentolimitehorario", 'Int'>
    readonly clienteid: FieldRef<"aumentolimitehorario", 'Int'>
    readonly cantidad: FieldRef<"aumentolimitehorario", 'Int'>
    readonly adminid: FieldRef<"aumentolimitehorario", 'Int'>
    readonly fechaabierto: FieldRef<"aumentolimitehorario", 'DateTime'>
    readonly fecharesuelto: FieldRef<"aumentolimitehorario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * aumentolimitehorario findUnique
   */
  export type aumentolimitehorarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitehorario to fetch.
     */
    where: aumentolimitehorarioWhereUniqueInput
  }

  /**
   * aumentolimitehorario findUniqueOrThrow
   */
  export type aumentolimitehorarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitehorario to fetch.
     */
    where: aumentolimitehorarioWhereUniqueInput
  }

  /**
   * aumentolimitehorario findFirst
   */
  export type aumentolimitehorarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitehorario to fetch.
     */
    where?: aumentolimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitehorarios to fetch.
     */
    orderBy?: aumentolimitehorarioOrderByWithRelationInput | aumentolimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aumentolimitehorarios.
     */
    cursor?: aumentolimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aumentolimitehorarios.
     */
    distinct?: AumentolimitehorarioScalarFieldEnum | AumentolimitehorarioScalarFieldEnum[]
  }

  /**
   * aumentolimitehorario findFirstOrThrow
   */
  export type aumentolimitehorarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitehorario to fetch.
     */
    where?: aumentolimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitehorarios to fetch.
     */
    orderBy?: aumentolimitehorarioOrderByWithRelationInput | aumentolimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aumentolimitehorarios.
     */
    cursor?: aumentolimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aumentolimitehorarios.
     */
    distinct?: AumentolimitehorarioScalarFieldEnum | AumentolimitehorarioScalarFieldEnum[]
  }

  /**
   * aumentolimitehorario findMany
   */
  export type aumentolimitehorarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitehorarios to fetch.
     */
    where?: aumentolimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitehorarios to fetch.
     */
    orderBy?: aumentolimitehorarioOrderByWithRelationInput | aumentolimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing aumentolimitehorarios.
     */
    cursor?: aumentolimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitehorarios.
     */
    skip?: number
    distinct?: AumentolimitehorarioScalarFieldEnum | AumentolimitehorarioScalarFieldEnum[]
  }

  /**
   * aumentolimitehorario create
   */
  export type aumentolimitehorarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * The data needed to create a aumentolimitehorario.
     */
    data?: XOR<aumentolimitehorarioCreateInput, aumentolimitehorarioUncheckedCreateInput>
  }

  /**
   * aumentolimitehorario createMany
   */
  export type aumentolimitehorarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many aumentolimitehorarios.
     */
    data: aumentolimitehorarioCreateManyInput | aumentolimitehorarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * aumentolimitehorario createManyAndReturn
   */
  export type aumentolimitehorarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * The data used to create many aumentolimitehorarios.
     */
    data: aumentolimitehorarioCreateManyInput | aumentolimitehorarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * aumentolimitehorario update
   */
  export type aumentolimitehorarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * The data needed to update a aumentolimitehorario.
     */
    data: XOR<aumentolimitehorarioUpdateInput, aumentolimitehorarioUncheckedUpdateInput>
    /**
     * Choose, which aumentolimitehorario to update.
     */
    where: aumentolimitehorarioWhereUniqueInput
  }

  /**
   * aumentolimitehorario updateMany
   */
  export type aumentolimitehorarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update aumentolimitehorarios.
     */
    data: XOR<aumentolimitehorarioUpdateManyMutationInput, aumentolimitehorarioUncheckedUpdateManyInput>
    /**
     * Filter which aumentolimitehorarios to update
     */
    where?: aumentolimitehorarioWhereInput
    /**
     * Limit how many aumentolimitehorarios to update.
     */
    limit?: number
  }

  /**
   * aumentolimitehorario updateManyAndReturn
   */
  export type aumentolimitehorarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * The data used to update aumentolimitehorarios.
     */
    data: XOR<aumentolimitehorarioUpdateManyMutationInput, aumentolimitehorarioUncheckedUpdateManyInput>
    /**
     * Filter which aumentolimitehorarios to update
     */
    where?: aumentolimitehorarioWhereInput
    /**
     * Limit how many aumentolimitehorarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * aumentolimitehorario upsert
   */
  export type aumentolimitehorarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * The filter to search for the aumentolimitehorario to update in case it exists.
     */
    where: aumentolimitehorarioWhereUniqueInput
    /**
     * In case the aumentolimitehorario found by the `where` argument doesn't exist, create a new aumentolimitehorario with this data.
     */
    create: XOR<aumentolimitehorarioCreateInput, aumentolimitehorarioUncheckedCreateInput>
    /**
     * In case the aumentolimitehorario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<aumentolimitehorarioUpdateInput, aumentolimitehorarioUncheckedUpdateInput>
  }

  /**
   * aumentolimitehorario delete
   */
  export type aumentolimitehorarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    /**
     * Filter which aumentolimitehorario to delete.
     */
    where: aumentolimitehorarioWhereUniqueInput
  }

  /**
   * aumentolimitehorario deleteMany
   */
  export type aumentolimitehorarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aumentolimitehorarios to delete
     */
    where?: aumentolimitehorarioWhereInput
    /**
     * Limit how many aumentolimitehorarios to delete.
     */
    limit?: number
  }

  /**
   * aumentolimitehorario.administrador
   */
  export type aumentolimitehorario$administradorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    where?: administradorWhereInput
  }

  /**
   * aumentolimitehorario.cliente
   */
  export type aumentolimitehorario$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * aumentolimitehorario without action
   */
  export type aumentolimitehorarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
  }


  /**
   * Model aumentolimitesmonetario
   */

  export type AggregateAumentolimitesmonetario = {
    _count: AumentolimitesmonetarioCountAggregateOutputType | null
    _avg: AumentolimitesmonetarioAvgAggregateOutputType | null
    _sum: AumentolimitesmonetarioSumAggregateOutputType | null
    _min: AumentolimitesmonetarioMinAggregateOutputType | null
    _max: AumentolimitesmonetarioMaxAggregateOutputType | null
  }

  export type AumentolimitesmonetarioAvgAggregateOutputType = {
    aumentomonetarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
    adminid: number | null
  }

  export type AumentolimitesmonetarioSumAggregateOutputType = {
    aumentomonetarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
    adminid: number | null
  }

  export type AumentolimitesmonetarioMinAggregateOutputType = {
    aumentomonetarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
    adminid: number | null
    fechaabierto: Date | null
    fecharesuelto: Date | null
  }

  export type AumentolimitesmonetarioMaxAggregateOutputType = {
    aumentomonetarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
    adminid: number | null
    fechaabierto: Date | null
    fecharesuelto: Date | null
  }

  export type AumentolimitesmonetarioCountAggregateOutputType = {
    aumentomonetarioid: number
    clienteid: number
    cantidad: number
    adminid: number
    fechaabierto: number
    fecharesuelto: number
    _all: number
  }


  export type AumentolimitesmonetarioAvgAggregateInputType = {
    aumentomonetarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
  }

  export type AumentolimitesmonetarioSumAggregateInputType = {
    aumentomonetarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
  }

  export type AumentolimitesmonetarioMinAggregateInputType = {
    aumentomonetarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
    fechaabierto?: true
    fecharesuelto?: true
  }

  export type AumentolimitesmonetarioMaxAggregateInputType = {
    aumentomonetarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
    fechaabierto?: true
    fecharesuelto?: true
  }

  export type AumentolimitesmonetarioCountAggregateInputType = {
    aumentomonetarioid?: true
    clienteid?: true
    cantidad?: true
    adminid?: true
    fechaabierto?: true
    fecharesuelto?: true
    _all?: true
  }

  export type AumentolimitesmonetarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aumentolimitesmonetario to aggregate.
     */
    where?: aumentolimitesmonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitesmonetarios to fetch.
     */
    orderBy?: aumentolimitesmonetarioOrderByWithRelationInput | aumentolimitesmonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: aumentolimitesmonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitesmonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitesmonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned aumentolimitesmonetarios
    **/
    _count?: true | AumentolimitesmonetarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AumentolimitesmonetarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AumentolimitesmonetarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AumentolimitesmonetarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AumentolimitesmonetarioMaxAggregateInputType
  }

  export type GetAumentolimitesmonetarioAggregateType<T extends AumentolimitesmonetarioAggregateArgs> = {
        [P in keyof T & keyof AggregateAumentolimitesmonetario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAumentolimitesmonetario[P]>
      : GetScalarType<T[P], AggregateAumentolimitesmonetario[P]>
  }




  export type aumentolimitesmonetarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aumentolimitesmonetarioWhereInput
    orderBy?: aumentolimitesmonetarioOrderByWithAggregationInput | aumentolimitesmonetarioOrderByWithAggregationInput[]
    by: AumentolimitesmonetarioScalarFieldEnum[] | AumentolimitesmonetarioScalarFieldEnum
    having?: aumentolimitesmonetarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AumentolimitesmonetarioCountAggregateInputType | true
    _avg?: AumentolimitesmonetarioAvgAggregateInputType
    _sum?: AumentolimitesmonetarioSumAggregateInputType
    _min?: AumentolimitesmonetarioMinAggregateInputType
    _max?: AumentolimitesmonetarioMaxAggregateInputType
  }

  export type AumentolimitesmonetarioGroupByOutputType = {
    aumentomonetarioid: number
    clienteid: number | null
    cantidad: Decimal | null
    adminid: number | null
    fechaabierto: Date | null
    fecharesuelto: Date | null
    _count: AumentolimitesmonetarioCountAggregateOutputType | null
    _avg: AumentolimitesmonetarioAvgAggregateOutputType | null
    _sum: AumentolimitesmonetarioSumAggregateOutputType | null
    _min: AumentolimitesmonetarioMinAggregateOutputType | null
    _max: AumentolimitesmonetarioMaxAggregateOutputType | null
  }

  type GetAumentolimitesmonetarioGroupByPayload<T extends aumentolimitesmonetarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AumentolimitesmonetarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AumentolimitesmonetarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AumentolimitesmonetarioGroupByOutputType[P]>
            : GetScalarType<T[P], AumentolimitesmonetarioGroupByOutputType[P]>
        }
      >
    >


  export type aumentolimitesmonetarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    aumentomonetarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
    administrador?: boolean | aumentolimitesmonetario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitesmonetario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["aumentolimitesmonetario"]>

  export type aumentolimitesmonetarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    aumentomonetarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
    administrador?: boolean | aumentolimitesmonetario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitesmonetario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["aumentolimitesmonetario"]>

  export type aumentolimitesmonetarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    aumentomonetarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
    administrador?: boolean | aumentolimitesmonetario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitesmonetario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["aumentolimitesmonetario"]>

  export type aumentolimitesmonetarioSelectScalar = {
    aumentomonetarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    adminid?: boolean
    fechaabierto?: boolean
    fecharesuelto?: boolean
  }

  export type aumentolimitesmonetarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"aumentomonetarioid" | "clienteid" | "cantidad" | "adminid" | "fechaabierto" | "fecharesuelto", ExtArgs["result"]["aumentolimitesmonetario"]>
  export type aumentolimitesmonetarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | aumentolimitesmonetario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitesmonetario$clienteArgs<ExtArgs>
  }
  export type aumentolimitesmonetarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | aumentolimitesmonetario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitesmonetario$clienteArgs<ExtArgs>
  }
  export type aumentolimitesmonetarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | aumentolimitesmonetario$administradorArgs<ExtArgs>
    cliente?: boolean | aumentolimitesmonetario$clienteArgs<ExtArgs>
  }

  export type $aumentolimitesmonetarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "aumentolimitesmonetario"
    objects: {
      administrador: Prisma.$administradorPayload<ExtArgs> | null
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      aumentomonetarioid: number
      clienteid: number | null
      cantidad: Prisma.Decimal | null
      adminid: number | null
      fechaabierto: Date | null
      fecharesuelto: Date | null
    }, ExtArgs["result"]["aumentolimitesmonetario"]>
    composites: {}
  }

  type aumentolimitesmonetarioGetPayload<S extends boolean | null | undefined | aumentolimitesmonetarioDefaultArgs> = $Result.GetResult<Prisma.$aumentolimitesmonetarioPayload, S>

  type aumentolimitesmonetarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<aumentolimitesmonetarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AumentolimitesmonetarioCountAggregateInputType | true
    }

  export interface aumentolimitesmonetarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['aumentolimitesmonetario'], meta: { name: 'aumentolimitesmonetario' } }
    /**
     * Find zero or one Aumentolimitesmonetario that matches the filter.
     * @param {aumentolimitesmonetarioFindUniqueArgs} args - Arguments to find a Aumentolimitesmonetario
     * @example
     * // Get one Aumentolimitesmonetario
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends aumentolimitesmonetarioFindUniqueArgs>(args: SelectSubset<T, aumentolimitesmonetarioFindUniqueArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Aumentolimitesmonetario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {aumentolimitesmonetarioFindUniqueOrThrowArgs} args - Arguments to find a Aumentolimitesmonetario
     * @example
     * // Get one Aumentolimitesmonetario
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends aumentolimitesmonetarioFindUniqueOrThrowArgs>(args: SelectSubset<T, aumentolimitesmonetarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aumentolimitesmonetario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitesmonetarioFindFirstArgs} args - Arguments to find a Aumentolimitesmonetario
     * @example
     * // Get one Aumentolimitesmonetario
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends aumentolimitesmonetarioFindFirstArgs>(args?: SelectSubset<T, aumentolimitesmonetarioFindFirstArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Aumentolimitesmonetario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitesmonetarioFindFirstOrThrowArgs} args - Arguments to find a Aumentolimitesmonetario
     * @example
     * // Get one Aumentolimitesmonetario
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends aumentolimitesmonetarioFindFirstOrThrowArgs>(args?: SelectSubset<T, aumentolimitesmonetarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Aumentolimitesmonetarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitesmonetarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Aumentolimitesmonetarios
     * const aumentolimitesmonetarios = await prisma.aumentolimitesmonetario.findMany()
     * 
     * // Get first 10 Aumentolimitesmonetarios
     * const aumentolimitesmonetarios = await prisma.aumentolimitesmonetario.findMany({ take: 10 })
     * 
     * // Only select the `aumentomonetarioid`
     * const aumentolimitesmonetarioWithAumentomonetarioidOnly = await prisma.aumentolimitesmonetario.findMany({ select: { aumentomonetarioid: true } })
     * 
     */
    findMany<T extends aumentolimitesmonetarioFindManyArgs>(args?: SelectSubset<T, aumentolimitesmonetarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Aumentolimitesmonetario.
     * @param {aumentolimitesmonetarioCreateArgs} args - Arguments to create a Aumentolimitesmonetario.
     * @example
     * // Create one Aumentolimitesmonetario
     * const Aumentolimitesmonetario = await prisma.aumentolimitesmonetario.create({
     *   data: {
     *     // ... data to create a Aumentolimitesmonetario
     *   }
     * })
     * 
     */
    create<T extends aumentolimitesmonetarioCreateArgs>(args: SelectSubset<T, aumentolimitesmonetarioCreateArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Aumentolimitesmonetarios.
     * @param {aumentolimitesmonetarioCreateManyArgs} args - Arguments to create many Aumentolimitesmonetarios.
     * @example
     * // Create many Aumentolimitesmonetarios
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends aumentolimitesmonetarioCreateManyArgs>(args?: SelectSubset<T, aumentolimitesmonetarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Aumentolimitesmonetarios and returns the data saved in the database.
     * @param {aumentolimitesmonetarioCreateManyAndReturnArgs} args - Arguments to create many Aumentolimitesmonetarios.
     * @example
     * // Create many Aumentolimitesmonetarios
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Aumentolimitesmonetarios and only return the `aumentomonetarioid`
     * const aumentolimitesmonetarioWithAumentomonetarioidOnly = await prisma.aumentolimitesmonetario.createManyAndReturn({
     *   select: { aumentomonetarioid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends aumentolimitesmonetarioCreateManyAndReturnArgs>(args?: SelectSubset<T, aumentolimitesmonetarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Aumentolimitesmonetario.
     * @param {aumentolimitesmonetarioDeleteArgs} args - Arguments to delete one Aumentolimitesmonetario.
     * @example
     * // Delete one Aumentolimitesmonetario
     * const Aumentolimitesmonetario = await prisma.aumentolimitesmonetario.delete({
     *   where: {
     *     // ... filter to delete one Aumentolimitesmonetario
     *   }
     * })
     * 
     */
    delete<T extends aumentolimitesmonetarioDeleteArgs>(args: SelectSubset<T, aumentolimitesmonetarioDeleteArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Aumentolimitesmonetario.
     * @param {aumentolimitesmonetarioUpdateArgs} args - Arguments to update one Aumentolimitesmonetario.
     * @example
     * // Update one Aumentolimitesmonetario
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends aumentolimitesmonetarioUpdateArgs>(args: SelectSubset<T, aumentolimitesmonetarioUpdateArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Aumentolimitesmonetarios.
     * @param {aumentolimitesmonetarioDeleteManyArgs} args - Arguments to filter Aumentolimitesmonetarios to delete.
     * @example
     * // Delete a few Aumentolimitesmonetarios
     * const { count } = await prisma.aumentolimitesmonetario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends aumentolimitesmonetarioDeleteManyArgs>(args?: SelectSubset<T, aumentolimitesmonetarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aumentolimitesmonetarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitesmonetarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Aumentolimitesmonetarios
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends aumentolimitesmonetarioUpdateManyArgs>(args: SelectSubset<T, aumentolimitesmonetarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aumentolimitesmonetarios and returns the data updated in the database.
     * @param {aumentolimitesmonetarioUpdateManyAndReturnArgs} args - Arguments to update many Aumentolimitesmonetarios.
     * @example
     * // Update many Aumentolimitesmonetarios
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Aumentolimitesmonetarios and only return the `aumentomonetarioid`
     * const aumentolimitesmonetarioWithAumentomonetarioidOnly = await prisma.aumentolimitesmonetario.updateManyAndReturn({
     *   select: { aumentomonetarioid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends aumentolimitesmonetarioUpdateManyAndReturnArgs>(args: SelectSubset<T, aumentolimitesmonetarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Aumentolimitesmonetario.
     * @param {aumentolimitesmonetarioUpsertArgs} args - Arguments to update or create a Aumentolimitesmonetario.
     * @example
     * // Update or create a Aumentolimitesmonetario
     * const aumentolimitesmonetario = await prisma.aumentolimitesmonetario.upsert({
     *   create: {
     *     // ... data to create a Aumentolimitesmonetario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Aumentolimitesmonetario we want to update
     *   }
     * })
     */
    upsert<T extends aumentolimitesmonetarioUpsertArgs>(args: SelectSubset<T, aumentolimitesmonetarioUpsertArgs<ExtArgs>>): Prisma__aumentolimitesmonetarioClient<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Aumentolimitesmonetarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitesmonetarioCountArgs} args - Arguments to filter Aumentolimitesmonetarios to count.
     * @example
     * // Count the number of Aumentolimitesmonetarios
     * const count = await prisma.aumentolimitesmonetario.count({
     *   where: {
     *     // ... the filter for the Aumentolimitesmonetarios we want to count
     *   }
     * })
    **/
    count<T extends aumentolimitesmonetarioCountArgs>(
      args?: Subset<T, aumentolimitesmonetarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AumentolimitesmonetarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Aumentolimitesmonetario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AumentolimitesmonetarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AumentolimitesmonetarioAggregateArgs>(args: Subset<T, AumentolimitesmonetarioAggregateArgs>): Prisma.PrismaPromise<GetAumentolimitesmonetarioAggregateType<T>>

    /**
     * Group by Aumentolimitesmonetario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aumentolimitesmonetarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends aumentolimitesmonetarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: aumentolimitesmonetarioGroupByArgs['orderBy'] }
        : { orderBy?: aumentolimitesmonetarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, aumentolimitesmonetarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAumentolimitesmonetarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the aumentolimitesmonetario model
   */
  readonly fields: aumentolimitesmonetarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for aumentolimitesmonetario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__aumentolimitesmonetarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    administrador<T extends aumentolimitesmonetario$administradorArgs<ExtArgs> = {}>(args?: Subset<T, aumentolimitesmonetario$administradorArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cliente<T extends aumentolimitesmonetario$clienteArgs<ExtArgs> = {}>(args?: Subset<T, aumentolimitesmonetario$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the aumentolimitesmonetario model
   */ 
  interface aumentolimitesmonetarioFieldRefs {
    readonly aumentomonetarioid: FieldRef<"aumentolimitesmonetario", 'Int'>
    readonly clienteid: FieldRef<"aumentolimitesmonetario", 'Int'>
    readonly cantidad: FieldRef<"aumentolimitesmonetario", 'Decimal'>
    readonly adminid: FieldRef<"aumentolimitesmonetario", 'Int'>
    readonly fechaabierto: FieldRef<"aumentolimitesmonetario", 'DateTime'>
    readonly fecharesuelto: FieldRef<"aumentolimitesmonetario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * aumentolimitesmonetario findUnique
   */
  export type aumentolimitesmonetarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitesmonetario to fetch.
     */
    where: aumentolimitesmonetarioWhereUniqueInput
  }

  /**
   * aumentolimitesmonetario findUniqueOrThrow
   */
  export type aumentolimitesmonetarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitesmonetario to fetch.
     */
    where: aumentolimitesmonetarioWhereUniqueInput
  }

  /**
   * aumentolimitesmonetario findFirst
   */
  export type aumentolimitesmonetarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitesmonetario to fetch.
     */
    where?: aumentolimitesmonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitesmonetarios to fetch.
     */
    orderBy?: aumentolimitesmonetarioOrderByWithRelationInput | aumentolimitesmonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aumentolimitesmonetarios.
     */
    cursor?: aumentolimitesmonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitesmonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitesmonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aumentolimitesmonetarios.
     */
    distinct?: AumentolimitesmonetarioScalarFieldEnum | AumentolimitesmonetarioScalarFieldEnum[]
  }

  /**
   * aumentolimitesmonetario findFirstOrThrow
   */
  export type aumentolimitesmonetarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitesmonetario to fetch.
     */
    where?: aumentolimitesmonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitesmonetarios to fetch.
     */
    orderBy?: aumentolimitesmonetarioOrderByWithRelationInput | aumentolimitesmonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aumentolimitesmonetarios.
     */
    cursor?: aumentolimitesmonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitesmonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitesmonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aumentolimitesmonetarios.
     */
    distinct?: AumentolimitesmonetarioScalarFieldEnum | AumentolimitesmonetarioScalarFieldEnum[]
  }

  /**
   * aumentolimitesmonetario findMany
   */
  export type aumentolimitesmonetarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * Filter, which aumentolimitesmonetarios to fetch.
     */
    where?: aumentolimitesmonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aumentolimitesmonetarios to fetch.
     */
    orderBy?: aumentolimitesmonetarioOrderByWithRelationInput | aumentolimitesmonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing aumentolimitesmonetarios.
     */
    cursor?: aumentolimitesmonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aumentolimitesmonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aumentolimitesmonetarios.
     */
    skip?: number
    distinct?: AumentolimitesmonetarioScalarFieldEnum | AumentolimitesmonetarioScalarFieldEnum[]
  }

  /**
   * aumentolimitesmonetario create
   */
  export type aumentolimitesmonetarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * The data needed to create a aumentolimitesmonetario.
     */
    data?: XOR<aumentolimitesmonetarioCreateInput, aumentolimitesmonetarioUncheckedCreateInput>
  }

  /**
   * aumentolimitesmonetario createMany
   */
  export type aumentolimitesmonetarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many aumentolimitesmonetarios.
     */
    data: aumentolimitesmonetarioCreateManyInput | aumentolimitesmonetarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * aumentolimitesmonetario createManyAndReturn
   */
  export type aumentolimitesmonetarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * The data used to create many aumentolimitesmonetarios.
     */
    data: aumentolimitesmonetarioCreateManyInput | aumentolimitesmonetarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * aumentolimitesmonetario update
   */
  export type aumentolimitesmonetarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * The data needed to update a aumentolimitesmonetario.
     */
    data: XOR<aumentolimitesmonetarioUpdateInput, aumentolimitesmonetarioUncheckedUpdateInput>
    /**
     * Choose, which aumentolimitesmonetario to update.
     */
    where: aumentolimitesmonetarioWhereUniqueInput
  }

  /**
   * aumentolimitesmonetario updateMany
   */
  export type aumentolimitesmonetarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update aumentolimitesmonetarios.
     */
    data: XOR<aumentolimitesmonetarioUpdateManyMutationInput, aumentolimitesmonetarioUncheckedUpdateManyInput>
    /**
     * Filter which aumentolimitesmonetarios to update
     */
    where?: aumentolimitesmonetarioWhereInput
    /**
     * Limit how many aumentolimitesmonetarios to update.
     */
    limit?: number
  }

  /**
   * aumentolimitesmonetario updateManyAndReturn
   */
  export type aumentolimitesmonetarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * The data used to update aumentolimitesmonetarios.
     */
    data: XOR<aumentolimitesmonetarioUpdateManyMutationInput, aumentolimitesmonetarioUncheckedUpdateManyInput>
    /**
     * Filter which aumentolimitesmonetarios to update
     */
    where?: aumentolimitesmonetarioWhereInput
    /**
     * Limit how many aumentolimitesmonetarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * aumentolimitesmonetario upsert
   */
  export type aumentolimitesmonetarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * The filter to search for the aumentolimitesmonetario to update in case it exists.
     */
    where: aumentolimitesmonetarioWhereUniqueInput
    /**
     * In case the aumentolimitesmonetario found by the `where` argument doesn't exist, create a new aumentolimitesmonetario with this data.
     */
    create: XOR<aumentolimitesmonetarioCreateInput, aumentolimitesmonetarioUncheckedCreateInput>
    /**
     * In case the aumentolimitesmonetario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<aumentolimitesmonetarioUpdateInput, aumentolimitesmonetarioUncheckedUpdateInput>
  }

  /**
   * aumentolimitesmonetario delete
   */
  export type aumentolimitesmonetarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    /**
     * Filter which aumentolimitesmonetario to delete.
     */
    where: aumentolimitesmonetarioWhereUniqueInput
  }

  /**
   * aumentolimitesmonetario deleteMany
   */
  export type aumentolimitesmonetarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aumentolimitesmonetarios to delete
     */
    where?: aumentolimitesmonetarioWhereInput
    /**
     * Limit how many aumentolimitesmonetarios to delete.
     */
    limit?: number
  }

  /**
   * aumentolimitesmonetario.administrador
   */
  export type aumentolimitesmonetario$administradorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    where?: administradorWhereInput
  }

  /**
   * aumentolimitesmonetario.cliente
   */
  export type aumentolimitesmonetario$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * aumentolimitesmonetario without action
   */
  export type aumentolimitesmonetarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
  }


  /**
   * Model cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    clienteid: number | null
    balance: number | null
    usuarioid: number | null
  }

  export type ClienteSumAggregateOutputType = {
    clienteid: number | null
    balance: bigint | null
    usuarioid: number | null
  }

  export type ClienteMinAggregateOutputType = {
    clienteid: number | null
    balance: bigint | null
    influencer: boolean | null
    usuarioid: number | null
  }

  export type ClienteMaxAggregateOutputType = {
    clienteid: number | null
    balance: bigint | null
    influencer: boolean | null
    usuarioid: number | null
  }

  export type ClienteCountAggregateOutputType = {
    clienteid: number
    balance: number
    influencer: number
    usuarioid: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    clienteid?: true
    balance?: true
    usuarioid?: true
  }

  export type ClienteSumAggregateInputType = {
    clienteid?: true
    balance?: true
    usuarioid?: true
  }

  export type ClienteMinAggregateInputType = {
    clienteid?: true
    balance?: true
    influencer?: true
    usuarioid?: true
  }

  export type ClienteMaxAggregateInputType = {
    clienteid?: true
    balance?: true
    influencer?: true
    usuarioid?: true
  }

  export type ClienteCountAggregateInputType = {
    clienteid?: true
    balance?: true
    influencer?: true
    usuarioid?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cliente to aggregate.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type clienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clienteWhereInput
    orderBy?: clienteOrderByWithAggregationInput | clienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: clienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    clienteid: number
    balance: bigint | null
    influencer: boolean | null
    usuarioid: number
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends clienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type clienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    balance?: boolean
    influencer?: boolean
    usuarioid?: boolean
    amistad_amistad_cliente2idTocliente?: boolean | cliente$amistad_amistad_cliente2idToclienteArgs<ExtArgs>
    amistad_amistad_clienteidTocliente?: boolean | cliente$amistad_amistad_clienteidToclienteArgs<ExtArgs>
    aumentolimitehorario?: boolean | cliente$aumentolimitehorarioArgs<ExtArgs>
    aumentolimitesmonetario?: boolean | cliente$aumentolimitesmonetarioArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    disminucionlimitehorario?: boolean | cliente$disminucionlimitehorarioArgs<ExtArgs>
    disminucionlimitemonetario?: boolean | cliente$disminucionlimitemonetarioArgs<ExtArgs>
    egreso?: boolean | cliente$egresoArgs<ExtArgs>
    ingreso?: boolean | cliente$ingresoArgs<ExtArgs>
    jugada?: boolean | cliente$jugadaArgs<ExtArgs>
    limitehorario?: boolean | cliente$limitehorarioArgs<ExtArgs>
    limitemonetario?: boolean | cliente$limitemonetarioArgs<ExtArgs>
    partida?: boolean | cliente$partidaArgs<ExtArgs>
    pausa?: boolean | cliente$pausaArgs<ExtArgs>
    suspendidos?: boolean | cliente$suspendidosArgs<ExtArgs>
    tickets?: boolean | cliente$ticketsArgs<ExtArgs>
    tiempodejuego?: boolean | cliente$tiempodejuegoArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type clienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    balance?: boolean
    influencer?: boolean
    usuarioid?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type clienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    balance?: boolean
    influencer?: boolean
    usuarioid?: boolean
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type clienteSelectScalar = {
    clienteid?: boolean
    balance?: boolean
    influencer?: boolean
    usuarioid?: boolean
  }

  export type clienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"clienteid" | "balance" | "influencer" | "usuarioid", ExtArgs["result"]["cliente"]>
  export type clienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    amistad_amistad_cliente2idTocliente?: boolean | cliente$amistad_amistad_cliente2idToclienteArgs<ExtArgs>
    amistad_amistad_clienteidTocliente?: boolean | cliente$amistad_amistad_clienteidToclienteArgs<ExtArgs>
    aumentolimitehorario?: boolean | cliente$aumentolimitehorarioArgs<ExtArgs>
    aumentolimitesmonetario?: boolean | cliente$aumentolimitesmonetarioArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    disminucionlimitehorario?: boolean | cliente$disminucionlimitehorarioArgs<ExtArgs>
    disminucionlimitemonetario?: boolean | cliente$disminucionlimitemonetarioArgs<ExtArgs>
    egreso?: boolean | cliente$egresoArgs<ExtArgs>
    ingreso?: boolean | cliente$ingresoArgs<ExtArgs>
    jugada?: boolean | cliente$jugadaArgs<ExtArgs>
    limitehorario?: boolean | cliente$limitehorarioArgs<ExtArgs>
    limitemonetario?: boolean | cliente$limitemonetarioArgs<ExtArgs>
    partida?: boolean | cliente$partidaArgs<ExtArgs>
    pausa?: boolean | cliente$pausaArgs<ExtArgs>
    suspendidos?: boolean | cliente$suspendidosArgs<ExtArgs>
    tickets?: boolean | cliente$ticketsArgs<ExtArgs>
    tiempodejuego?: boolean | cliente$tiempodejuegoArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type clienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }
  export type clienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
  }

  export type $clientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cliente"
    objects: {
      amistad_amistad_cliente2idTocliente: Prisma.$amistadPayload<ExtArgs>[]
      amistad_amistad_clienteidTocliente: Prisma.$amistadPayload<ExtArgs>[]
      aumentolimitehorario: Prisma.$aumentolimitehorarioPayload<ExtArgs>[]
      aumentolimitesmonetario: Prisma.$aumentolimitesmonetarioPayload<ExtArgs>[]
      usuario: Prisma.$usuarioPayload<ExtArgs>
      disminucionlimitehorario: Prisma.$disminucionlimitehorarioPayload<ExtArgs>[]
      disminucionlimitemonetario: Prisma.$disminucionlimitemonetarioPayload<ExtArgs>[]
      egreso: Prisma.$egresoPayload<ExtArgs>[]
      ingreso: Prisma.$ingresoPayload<ExtArgs>[]
      jugada: Prisma.$jugadaPayload<ExtArgs>[]
      limitehorario: Prisma.$limitehorarioPayload<ExtArgs> | null
      limitemonetario: Prisma.$limitemonetarioPayload<ExtArgs> | null
      partida: Prisma.$partidaPayload<ExtArgs>[]
      pausa: Prisma.$pausaPayload<ExtArgs> | null
      suspendidos: Prisma.$suspendidosPayload<ExtArgs>[]
      tickets: Prisma.$ticketsPayload<ExtArgs>[]
      tiempodejuego: Prisma.$tiempodejuegoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteid: number
      balance: bigint | null
      influencer: boolean | null
      usuarioid: number
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type clienteGetPayload<S extends boolean | null | undefined | clienteDefaultArgs> = $Result.GetResult<Prisma.$clientePayload, S>

  type clienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<clienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface clienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cliente'], meta: { name: 'cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {clienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends clienteFindUniqueArgs>(args: SelectSubset<T, clienteFindUniqueArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {clienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends clienteFindUniqueOrThrowArgs>(args: SelectSubset<T, clienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends clienteFindFirstArgs>(args?: SelectSubset<T, clienteFindFirstArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends clienteFindFirstOrThrowArgs>(args?: SelectSubset<T, clienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `clienteid`
     * const clienteWithClienteidOnly = await prisma.cliente.findMany({ select: { clienteid: true } })
     * 
     */
    findMany<T extends clienteFindManyArgs>(args?: SelectSubset<T, clienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cliente.
     * @param {clienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends clienteCreateArgs>(args: SelectSubset<T, clienteCreateArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {clienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends clienteCreateManyArgs>(args?: SelectSubset<T, clienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {clienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `clienteid`
     * const clienteWithClienteidOnly = await prisma.cliente.createManyAndReturn({
     *   select: { clienteid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends clienteCreateManyAndReturnArgs>(args?: SelectSubset<T, clienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cliente.
     * @param {clienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends clienteDeleteArgs>(args: SelectSubset<T, clienteDeleteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cliente.
     * @param {clienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends clienteUpdateArgs>(args: SelectSubset<T, clienteUpdateArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {clienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends clienteDeleteManyArgs>(args?: SelectSubset<T, clienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends clienteUpdateManyArgs>(args: SelectSubset<T, clienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes and returns the data updated in the database.
     * @param {clienteUpdateManyAndReturnArgs} args - Arguments to update many Clientes.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clientes and only return the `clienteid`
     * const clienteWithClienteidOnly = await prisma.cliente.updateManyAndReturn({
     *   select: { clienteid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends clienteUpdateManyAndReturnArgs>(args: SelectSubset<T, clienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cliente.
     * @param {clienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends clienteUpsertArgs>(args: SelectSubset<T, clienteUpsertArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends clienteCountArgs>(
      args?: Subset<T, clienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clienteGroupByArgs['orderBy'] }
        : { orderBy?: clienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cliente model
   */
  readonly fields: clienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    amistad_amistad_cliente2idTocliente<T extends cliente$amistad_amistad_cliente2idToclienteArgs<ExtArgs> = {}>(args?: Subset<T, cliente$amistad_amistad_cliente2idToclienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    amistad_amistad_clienteidTocliente<T extends cliente$amistad_amistad_clienteidToclienteArgs<ExtArgs> = {}>(args?: Subset<T, cliente$amistad_amistad_clienteidToclienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$amistadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aumentolimitehorario<T extends cliente$aumentolimitehorarioArgs<ExtArgs> = {}>(args?: Subset<T, cliente$aumentolimitehorarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitehorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aumentolimitesmonetario<T extends cliente$aumentolimitesmonetarioArgs<ExtArgs> = {}>(args?: Subset<T, cliente$aumentolimitesmonetarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aumentolimitesmonetarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    disminucionlimitehorario<T extends cliente$disminucionlimitehorarioArgs<ExtArgs> = {}>(args?: Subset<T, cliente$disminucionlimitehorarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    disminucionlimitemonetario<T extends cliente$disminucionlimitemonetarioArgs<ExtArgs> = {}>(args?: Subset<T, cliente$disminucionlimitemonetarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    egreso<T extends cliente$egresoArgs<ExtArgs> = {}>(args?: Subset<T, cliente$egresoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ingreso<T extends cliente$ingresoArgs<ExtArgs> = {}>(args?: Subset<T, cliente$ingresoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    jugada<T extends cliente$jugadaArgs<ExtArgs> = {}>(args?: Subset<T, cliente$jugadaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    limitehorario<T extends cliente$limitehorarioArgs<ExtArgs> = {}>(args?: Subset<T, cliente$limitehorarioArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    limitemonetario<T extends cliente$limitemonetarioArgs<ExtArgs> = {}>(args?: Subset<T, cliente$limitemonetarioArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    partida<T extends cliente$partidaArgs<ExtArgs> = {}>(args?: Subset<T, cliente$partidaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pausa<T extends cliente$pausaArgs<ExtArgs> = {}>(args?: Subset<T, cliente$pausaArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    suspendidos<T extends cliente$suspendidosArgs<ExtArgs> = {}>(args?: Subset<T, cliente$suspendidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tickets<T extends cliente$ticketsArgs<ExtArgs> = {}>(args?: Subset<T, cliente$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tiempodejuego<T extends cliente$tiempodejuegoArgs<ExtArgs> = {}>(args?: Subset<T, cliente$tiempodejuegoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cliente model
   */ 
  interface clienteFieldRefs {
    readonly clienteid: FieldRef<"cliente", 'Int'>
    readonly balance: FieldRef<"cliente", 'BigInt'>
    readonly influencer: FieldRef<"cliente", 'Boolean'>
    readonly usuarioid: FieldRef<"cliente", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * cliente findUnique
   */
  export type clienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente findUniqueOrThrow
   */
  export type clienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente findFirst
   */
  export type clienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente findFirstOrThrow
   */
  export type clienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente findMany
   */
  export type clienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente create
   */
  export type clienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * The data needed to create a cliente.
     */
    data: XOR<clienteCreateInput, clienteUncheckedCreateInput>
  }

  /**
   * cliente createMany
   */
  export type clienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clientes.
     */
    data: clienteCreateManyInput | clienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cliente createManyAndReturn
   */
  export type clienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * The data used to create many clientes.
     */
    data: clienteCreateManyInput | clienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cliente update
   */
  export type clienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * The data needed to update a cliente.
     */
    data: XOR<clienteUpdateInput, clienteUncheckedUpdateInput>
    /**
     * Choose, which cliente to update.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente updateMany
   */
  export type clienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clientes.
     */
    data: XOR<clienteUpdateManyMutationInput, clienteUncheckedUpdateManyInput>
    /**
     * Filter which clientes to update
     */
    where?: clienteWhereInput
    /**
     * Limit how many clientes to update.
     */
    limit?: number
  }

  /**
   * cliente updateManyAndReturn
   */
  export type clienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * The data used to update clientes.
     */
    data: XOR<clienteUpdateManyMutationInput, clienteUncheckedUpdateManyInput>
    /**
     * Filter which clientes to update
     */
    where?: clienteWhereInput
    /**
     * Limit how many clientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cliente upsert
   */
  export type clienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * The filter to search for the cliente to update in case it exists.
     */
    where: clienteWhereUniqueInput
    /**
     * In case the cliente found by the `where` argument doesn't exist, create a new cliente with this data.
     */
    create: XOR<clienteCreateInput, clienteUncheckedCreateInput>
    /**
     * In case the cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clienteUpdateInput, clienteUncheckedUpdateInput>
  }

  /**
   * cliente delete
   */
  export type clienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    /**
     * Filter which cliente to delete.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente deleteMany
   */
  export type clienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clientes to delete
     */
    where?: clienteWhereInput
    /**
     * Limit how many clientes to delete.
     */
    limit?: number
  }

  /**
   * cliente.amistad_amistad_cliente2idTocliente
   */
  export type cliente$amistad_amistad_cliente2idToclienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    where?: amistadWhereInput
    orderBy?: amistadOrderByWithRelationInput | amistadOrderByWithRelationInput[]
    cursor?: amistadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AmistadScalarFieldEnum | AmistadScalarFieldEnum[]
  }

  /**
   * cliente.amistad_amistad_clienteidTocliente
   */
  export type cliente$amistad_amistad_clienteidToclienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the amistad
     */
    select?: amistadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the amistad
     */
    omit?: amistadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: amistadInclude<ExtArgs> | null
    where?: amistadWhereInput
    orderBy?: amistadOrderByWithRelationInput | amistadOrderByWithRelationInput[]
    cursor?: amistadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AmistadScalarFieldEnum | AmistadScalarFieldEnum[]
  }

  /**
   * cliente.aumentolimitehorario
   */
  export type cliente$aumentolimitehorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitehorario
     */
    select?: aumentolimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitehorario
     */
    omit?: aumentolimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitehorarioInclude<ExtArgs> | null
    where?: aumentolimitehorarioWhereInput
    orderBy?: aumentolimitehorarioOrderByWithRelationInput | aumentolimitehorarioOrderByWithRelationInput[]
    cursor?: aumentolimitehorarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AumentolimitehorarioScalarFieldEnum | AumentolimitehorarioScalarFieldEnum[]
  }

  /**
   * cliente.aumentolimitesmonetario
   */
  export type cliente$aumentolimitesmonetarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aumentolimitesmonetario
     */
    select?: aumentolimitesmonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the aumentolimitesmonetario
     */
    omit?: aumentolimitesmonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aumentolimitesmonetarioInclude<ExtArgs> | null
    where?: aumentolimitesmonetarioWhereInput
    orderBy?: aumentolimitesmonetarioOrderByWithRelationInput | aumentolimitesmonetarioOrderByWithRelationInput[]
    cursor?: aumentolimitesmonetarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AumentolimitesmonetarioScalarFieldEnum | AumentolimitesmonetarioScalarFieldEnum[]
  }

  /**
   * cliente.disminucionlimitehorario
   */
  export type cliente$disminucionlimitehorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    where?: disminucionlimitehorarioWhereInput
    orderBy?: disminucionlimitehorarioOrderByWithRelationInput | disminucionlimitehorarioOrderByWithRelationInput[]
    cursor?: disminucionlimitehorarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisminucionlimitehorarioScalarFieldEnum | DisminucionlimitehorarioScalarFieldEnum[]
  }

  /**
   * cliente.disminucionlimitemonetario
   */
  export type cliente$disminucionlimitemonetarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    where?: disminucionlimitemonetarioWhereInput
    orderBy?: disminucionlimitemonetarioOrderByWithRelationInput | disminucionlimitemonetarioOrderByWithRelationInput[]
    cursor?: disminucionlimitemonetarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisminucionlimitemonetarioScalarFieldEnum | DisminucionlimitemonetarioScalarFieldEnum[]
  }

  /**
   * cliente.egreso
   */
  export type cliente$egresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    where?: egresoWhereInput
    orderBy?: egresoOrderByWithRelationInput | egresoOrderByWithRelationInput[]
    cursor?: egresoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * cliente.ingreso
   */
  export type cliente$ingresoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    where?: ingresoWhereInput
    orderBy?: ingresoOrderByWithRelationInput | ingresoOrderByWithRelationInput[]
    cursor?: ingresoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IngresoScalarFieldEnum | IngresoScalarFieldEnum[]
  }

  /**
   * cliente.jugada
   */
  export type cliente$jugadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    where?: jugadaWhereInput
    orderBy?: jugadaOrderByWithRelationInput | jugadaOrderByWithRelationInput[]
    cursor?: jugadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JugadaScalarFieldEnum | JugadaScalarFieldEnum[]
  }

  /**
   * cliente.limitehorario
   */
  export type cliente$limitehorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    where?: limitehorarioWhereInput
  }

  /**
   * cliente.limitemonetario
   */
  export type cliente$limitemonetarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    where?: limitemonetarioWhereInput
  }

  /**
   * cliente.partida
   */
  export type cliente$partidaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    where?: partidaWhereInput
    orderBy?: partidaOrderByWithRelationInput | partidaOrderByWithRelationInput[]
    cursor?: partidaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PartidaScalarFieldEnum | PartidaScalarFieldEnum[]
  }

  /**
   * cliente.pausa
   */
  export type cliente$pausaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    where?: pausaWhereInput
  }

  /**
   * cliente.suspendidos
   */
  export type cliente$suspendidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    where?: suspendidosWhereInput
    orderBy?: suspendidosOrderByWithRelationInput | suspendidosOrderByWithRelationInput[]
    cursor?: suspendidosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SuspendidosScalarFieldEnum | SuspendidosScalarFieldEnum[]
  }

  /**
   * cliente.tickets
   */
  export type cliente$ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    where?: ticketsWhereInput
    orderBy?: ticketsOrderByWithRelationInput | ticketsOrderByWithRelationInput[]
    cursor?: ticketsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketsScalarFieldEnum | TicketsScalarFieldEnum[]
  }

  /**
   * cliente.tiempodejuego
   */
  export type cliente$tiempodejuegoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    where?: tiempodejuegoWhereInput
    orderBy?: tiempodejuegoOrderByWithRelationInput | tiempodejuegoOrderByWithRelationInput[]
    cursor?: tiempodejuegoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TiempodejuegoScalarFieldEnum | TiempodejuegoScalarFieldEnum[]
  }

  /**
   * cliente without action
   */
  export type clienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
  }


  /**
   * Model disminucionlimitehorario
   */

  export type AggregateDisminucionlimitehorario = {
    _count: DisminucionlimitehorarioCountAggregateOutputType | null
    _avg: DisminucionlimitehorarioAvgAggregateOutputType | null
    _sum: DisminucionlimitehorarioSumAggregateOutputType | null
    _min: DisminucionlimitehorarioMinAggregateOutputType | null
    _max: DisminucionlimitehorarioMaxAggregateOutputType | null
  }

  export type DisminucionlimitehorarioAvgAggregateOutputType = {
    disminucionhorarioid: number | null
    clienteid: number | null
    cantidad: number | null
  }

  export type DisminucionlimitehorarioSumAggregateOutputType = {
    disminucionhorarioid: number | null
    clienteid: number | null
    cantidad: number | null
  }

  export type DisminucionlimitehorarioMinAggregateOutputType = {
    disminucionhorarioid: number | null
    clienteid: number | null
    cantidad: number | null
    fecha: Date | null
  }

  export type DisminucionlimitehorarioMaxAggregateOutputType = {
    disminucionhorarioid: number | null
    clienteid: number | null
    cantidad: number | null
    fecha: Date | null
  }

  export type DisminucionlimitehorarioCountAggregateOutputType = {
    disminucionhorarioid: number
    clienteid: number
    cantidad: number
    fecha: number
    _all: number
  }


  export type DisminucionlimitehorarioAvgAggregateInputType = {
    disminucionhorarioid?: true
    clienteid?: true
    cantidad?: true
  }

  export type DisminucionlimitehorarioSumAggregateInputType = {
    disminucionhorarioid?: true
    clienteid?: true
    cantidad?: true
  }

  export type DisminucionlimitehorarioMinAggregateInputType = {
    disminucionhorarioid?: true
    clienteid?: true
    cantidad?: true
    fecha?: true
  }

  export type DisminucionlimitehorarioMaxAggregateInputType = {
    disminucionhorarioid?: true
    clienteid?: true
    cantidad?: true
    fecha?: true
  }

  export type DisminucionlimitehorarioCountAggregateInputType = {
    disminucionhorarioid?: true
    clienteid?: true
    cantidad?: true
    fecha?: true
    _all?: true
  }

  export type DisminucionlimitehorarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disminucionlimitehorario to aggregate.
     */
    where?: disminucionlimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitehorarios to fetch.
     */
    orderBy?: disminucionlimitehorarioOrderByWithRelationInput | disminucionlimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disminucionlimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disminucionlimitehorarios
    **/
    _count?: true | DisminucionlimitehorarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DisminucionlimitehorarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DisminucionlimitehorarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisminucionlimitehorarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisminucionlimitehorarioMaxAggregateInputType
  }

  export type GetDisminucionlimitehorarioAggregateType<T extends DisminucionlimitehorarioAggregateArgs> = {
        [P in keyof T & keyof AggregateDisminucionlimitehorario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisminucionlimitehorario[P]>
      : GetScalarType<T[P], AggregateDisminucionlimitehorario[P]>
  }




  export type disminucionlimitehorarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disminucionlimitehorarioWhereInput
    orderBy?: disminucionlimitehorarioOrderByWithAggregationInput | disminucionlimitehorarioOrderByWithAggregationInput[]
    by: DisminucionlimitehorarioScalarFieldEnum[] | DisminucionlimitehorarioScalarFieldEnum
    having?: disminucionlimitehorarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisminucionlimitehorarioCountAggregateInputType | true
    _avg?: DisminucionlimitehorarioAvgAggregateInputType
    _sum?: DisminucionlimitehorarioSumAggregateInputType
    _min?: DisminucionlimitehorarioMinAggregateInputType
    _max?: DisminucionlimitehorarioMaxAggregateInputType
  }

  export type DisminucionlimitehorarioGroupByOutputType = {
    disminucionhorarioid: number
    clienteid: number | null
    cantidad: number | null
    fecha: Date | null
    _count: DisminucionlimitehorarioCountAggregateOutputType | null
    _avg: DisminucionlimitehorarioAvgAggregateOutputType | null
    _sum: DisminucionlimitehorarioSumAggregateOutputType | null
    _min: DisminucionlimitehorarioMinAggregateOutputType | null
    _max: DisminucionlimitehorarioMaxAggregateOutputType | null
  }

  type GetDisminucionlimitehorarioGroupByPayload<T extends disminucionlimitehorarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisminucionlimitehorarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisminucionlimitehorarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisminucionlimitehorarioGroupByOutputType[P]>
            : GetScalarType<T[P], DisminucionlimitehorarioGroupByOutputType[P]>
        }
      >
    >


  export type disminucionlimitehorarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    disminucionhorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
    cliente?: boolean | disminucionlimitehorario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["disminucionlimitehorario"]>

  export type disminucionlimitehorarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    disminucionhorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
    cliente?: boolean | disminucionlimitehorario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["disminucionlimitehorario"]>

  export type disminucionlimitehorarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    disminucionhorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
    cliente?: boolean | disminucionlimitehorario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["disminucionlimitehorario"]>

  export type disminucionlimitehorarioSelectScalar = {
    disminucionhorarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
  }

  export type disminucionlimitehorarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"disminucionhorarioid" | "clienteid" | "cantidad" | "fecha", ExtArgs["result"]["disminucionlimitehorario"]>
  export type disminucionlimitehorarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | disminucionlimitehorario$clienteArgs<ExtArgs>
  }
  export type disminucionlimitehorarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | disminucionlimitehorario$clienteArgs<ExtArgs>
  }
  export type disminucionlimitehorarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | disminucionlimitehorario$clienteArgs<ExtArgs>
  }

  export type $disminucionlimitehorarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disminucionlimitehorario"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      disminucionhorarioid: number
      clienteid: number | null
      cantidad: number | null
      fecha: Date | null
    }, ExtArgs["result"]["disminucionlimitehorario"]>
    composites: {}
  }

  type disminucionlimitehorarioGetPayload<S extends boolean | null | undefined | disminucionlimitehorarioDefaultArgs> = $Result.GetResult<Prisma.$disminucionlimitehorarioPayload, S>

  type disminucionlimitehorarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<disminucionlimitehorarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DisminucionlimitehorarioCountAggregateInputType | true
    }

  export interface disminucionlimitehorarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disminucionlimitehorario'], meta: { name: 'disminucionlimitehorario' } }
    /**
     * Find zero or one Disminucionlimitehorario that matches the filter.
     * @param {disminucionlimitehorarioFindUniqueArgs} args - Arguments to find a Disminucionlimitehorario
     * @example
     * // Get one Disminucionlimitehorario
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends disminucionlimitehorarioFindUniqueArgs>(args: SelectSubset<T, disminucionlimitehorarioFindUniqueArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Disminucionlimitehorario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {disminucionlimitehorarioFindUniqueOrThrowArgs} args - Arguments to find a Disminucionlimitehorario
     * @example
     * // Get one Disminucionlimitehorario
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends disminucionlimitehorarioFindUniqueOrThrowArgs>(args: SelectSubset<T, disminucionlimitehorarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disminucionlimitehorario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitehorarioFindFirstArgs} args - Arguments to find a Disminucionlimitehorario
     * @example
     * // Get one Disminucionlimitehorario
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends disminucionlimitehorarioFindFirstArgs>(args?: SelectSubset<T, disminucionlimitehorarioFindFirstArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disminucionlimitehorario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitehorarioFindFirstOrThrowArgs} args - Arguments to find a Disminucionlimitehorario
     * @example
     * // Get one Disminucionlimitehorario
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends disminucionlimitehorarioFindFirstOrThrowArgs>(args?: SelectSubset<T, disminucionlimitehorarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Disminucionlimitehorarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitehorarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disminucionlimitehorarios
     * const disminucionlimitehorarios = await prisma.disminucionlimitehorario.findMany()
     * 
     * // Get first 10 Disminucionlimitehorarios
     * const disminucionlimitehorarios = await prisma.disminucionlimitehorario.findMany({ take: 10 })
     * 
     * // Only select the `disminucionhorarioid`
     * const disminucionlimitehorarioWithDisminucionhorarioidOnly = await prisma.disminucionlimitehorario.findMany({ select: { disminucionhorarioid: true } })
     * 
     */
    findMany<T extends disminucionlimitehorarioFindManyArgs>(args?: SelectSubset<T, disminucionlimitehorarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Disminucionlimitehorario.
     * @param {disminucionlimitehorarioCreateArgs} args - Arguments to create a Disminucionlimitehorario.
     * @example
     * // Create one Disminucionlimitehorario
     * const Disminucionlimitehorario = await prisma.disminucionlimitehorario.create({
     *   data: {
     *     // ... data to create a Disminucionlimitehorario
     *   }
     * })
     * 
     */
    create<T extends disminucionlimitehorarioCreateArgs>(args: SelectSubset<T, disminucionlimitehorarioCreateArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Disminucionlimitehorarios.
     * @param {disminucionlimitehorarioCreateManyArgs} args - Arguments to create many Disminucionlimitehorarios.
     * @example
     * // Create many Disminucionlimitehorarios
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends disminucionlimitehorarioCreateManyArgs>(args?: SelectSubset<T, disminucionlimitehorarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Disminucionlimitehorarios and returns the data saved in the database.
     * @param {disminucionlimitehorarioCreateManyAndReturnArgs} args - Arguments to create many Disminucionlimitehorarios.
     * @example
     * // Create many Disminucionlimitehorarios
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Disminucionlimitehorarios and only return the `disminucionhorarioid`
     * const disminucionlimitehorarioWithDisminucionhorarioidOnly = await prisma.disminucionlimitehorario.createManyAndReturn({
     *   select: { disminucionhorarioid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends disminucionlimitehorarioCreateManyAndReturnArgs>(args?: SelectSubset<T, disminucionlimitehorarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Disminucionlimitehorario.
     * @param {disminucionlimitehorarioDeleteArgs} args - Arguments to delete one Disminucionlimitehorario.
     * @example
     * // Delete one Disminucionlimitehorario
     * const Disminucionlimitehorario = await prisma.disminucionlimitehorario.delete({
     *   where: {
     *     // ... filter to delete one Disminucionlimitehorario
     *   }
     * })
     * 
     */
    delete<T extends disminucionlimitehorarioDeleteArgs>(args: SelectSubset<T, disminucionlimitehorarioDeleteArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Disminucionlimitehorario.
     * @param {disminucionlimitehorarioUpdateArgs} args - Arguments to update one Disminucionlimitehorario.
     * @example
     * // Update one Disminucionlimitehorario
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends disminucionlimitehorarioUpdateArgs>(args: SelectSubset<T, disminucionlimitehorarioUpdateArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Disminucionlimitehorarios.
     * @param {disminucionlimitehorarioDeleteManyArgs} args - Arguments to filter Disminucionlimitehorarios to delete.
     * @example
     * // Delete a few Disminucionlimitehorarios
     * const { count } = await prisma.disminucionlimitehorario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends disminucionlimitehorarioDeleteManyArgs>(args?: SelectSubset<T, disminucionlimitehorarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disminucionlimitehorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitehorarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disminucionlimitehorarios
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends disminucionlimitehorarioUpdateManyArgs>(args: SelectSubset<T, disminucionlimitehorarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disminucionlimitehorarios and returns the data updated in the database.
     * @param {disminucionlimitehorarioUpdateManyAndReturnArgs} args - Arguments to update many Disminucionlimitehorarios.
     * @example
     * // Update many Disminucionlimitehorarios
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Disminucionlimitehorarios and only return the `disminucionhorarioid`
     * const disminucionlimitehorarioWithDisminucionhorarioidOnly = await prisma.disminucionlimitehorario.updateManyAndReturn({
     *   select: { disminucionhorarioid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends disminucionlimitehorarioUpdateManyAndReturnArgs>(args: SelectSubset<T, disminucionlimitehorarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Disminucionlimitehorario.
     * @param {disminucionlimitehorarioUpsertArgs} args - Arguments to update or create a Disminucionlimitehorario.
     * @example
     * // Update or create a Disminucionlimitehorario
     * const disminucionlimitehorario = await prisma.disminucionlimitehorario.upsert({
     *   create: {
     *     // ... data to create a Disminucionlimitehorario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disminucionlimitehorario we want to update
     *   }
     * })
     */
    upsert<T extends disminucionlimitehorarioUpsertArgs>(args: SelectSubset<T, disminucionlimitehorarioUpsertArgs<ExtArgs>>): Prisma__disminucionlimitehorarioClient<$Result.GetResult<Prisma.$disminucionlimitehorarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Disminucionlimitehorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitehorarioCountArgs} args - Arguments to filter Disminucionlimitehorarios to count.
     * @example
     * // Count the number of Disminucionlimitehorarios
     * const count = await prisma.disminucionlimitehorario.count({
     *   where: {
     *     // ... the filter for the Disminucionlimitehorarios we want to count
     *   }
     * })
    **/
    count<T extends disminucionlimitehorarioCountArgs>(
      args?: Subset<T, disminucionlimitehorarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisminucionlimitehorarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disminucionlimitehorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisminucionlimitehorarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisminucionlimitehorarioAggregateArgs>(args: Subset<T, DisminucionlimitehorarioAggregateArgs>): Prisma.PrismaPromise<GetDisminucionlimitehorarioAggregateType<T>>

    /**
     * Group by Disminucionlimitehorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitehorarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disminucionlimitehorarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disminucionlimitehorarioGroupByArgs['orderBy'] }
        : { orderBy?: disminucionlimitehorarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disminucionlimitehorarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisminucionlimitehorarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disminucionlimitehorario model
   */
  readonly fields: disminucionlimitehorarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disminucionlimitehorario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disminucionlimitehorarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends disminucionlimitehorario$clienteArgs<ExtArgs> = {}>(args?: Subset<T, disminucionlimitehorario$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the disminucionlimitehorario model
   */ 
  interface disminucionlimitehorarioFieldRefs {
    readonly disminucionhorarioid: FieldRef<"disminucionlimitehorario", 'Int'>
    readonly clienteid: FieldRef<"disminucionlimitehorario", 'Int'>
    readonly cantidad: FieldRef<"disminucionlimitehorario", 'Int'>
    readonly fecha: FieldRef<"disminucionlimitehorario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * disminucionlimitehorario findUnique
   */
  export type disminucionlimitehorarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitehorario to fetch.
     */
    where: disminucionlimitehorarioWhereUniqueInput
  }

  /**
   * disminucionlimitehorario findUniqueOrThrow
   */
  export type disminucionlimitehorarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitehorario to fetch.
     */
    where: disminucionlimitehorarioWhereUniqueInput
  }

  /**
   * disminucionlimitehorario findFirst
   */
  export type disminucionlimitehorarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitehorario to fetch.
     */
    where?: disminucionlimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitehorarios to fetch.
     */
    orderBy?: disminucionlimitehorarioOrderByWithRelationInput | disminucionlimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disminucionlimitehorarios.
     */
    cursor?: disminucionlimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disminucionlimitehorarios.
     */
    distinct?: DisminucionlimitehorarioScalarFieldEnum | DisminucionlimitehorarioScalarFieldEnum[]
  }

  /**
   * disminucionlimitehorario findFirstOrThrow
   */
  export type disminucionlimitehorarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitehorario to fetch.
     */
    where?: disminucionlimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitehorarios to fetch.
     */
    orderBy?: disminucionlimitehorarioOrderByWithRelationInput | disminucionlimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disminucionlimitehorarios.
     */
    cursor?: disminucionlimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disminucionlimitehorarios.
     */
    distinct?: DisminucionlimitehorarioScalarFieldEnum | DisminucionlimitehorarioScalarFieldEnum[]
  }

  /**
   * disminucionlimitehorario findMany
   */
  export type disminucionlimitehorarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitehorarios to fetch.
     */
    where?: disminucionlimitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitehorarios to fetch.
     */
    orderBy?: disminucionlimitehorarioOrderByWithRelationInput | disminucionlimitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disminucionlimitehorarios.
     */
    cursor?: disminucionlimitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitehorarios.
     */
    skip?: number
    distinct?: DisminucionlimitehorarioScalarFieldEnum | DisminucionlimitehorarioScalarFieldEnum[]
  }

  /**
   * disminucionlimitehorario create
   */
  export type disminucionlimitehorarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * The data needed to create a disminucionlimitehorario.
     */
    data?: XOR<disminucionlimitehorarioCreateInput, disminucionlimitehorarioUncheckedCreateInput>
  }

  /**
   * disminucionlimitehorario createMany
   */
  export type disminucionlimitehorarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disminucionlimitehorarios.
     */
    data: disminucionlimitehorarioCreateManyInput | disminucionlimitehorarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disminucionlimitehorario createManyAndReturn
   */
  export type disminucionlimitehorarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * The data used to create many disminucionlimitehorarios.
     */
    data: disminucionlimitehorarioCreateManyInput | disminucionlimitehorarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * disminucionlimitehorario update
   */
  export type disminucionlimitehorarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * The data needed to update a disminucionlimitehorario.
     */
    data: XOR<disminucionlimitehorarioUpdateInput, disminucionlimitehorarioUncheckedUpdateInput>
    /**
     * Choose, which disminucionlimitehorario to update.
     */
    where: disminucionlimitehorarioWhereUniqueInput
  }

  /**
   * disminucionlimitehorario updateMany
   */
  export type disminucionlimitehorarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disminucionlimitehorarios.
     */
    data: XOR<disminucionlimitehorarioUpdateManyMutationInput, disminucionlimitehorarioUncheckedUpdateManyInput>
    /**
     * Filter which disminucionlimitehorarios to update
     */
    where?: disminucionlimitehorarioWhereInput
    /**
     * Limit how many disminucionlimitehorarios to update.
     */
    limit?: number
  }

  /**
   * disminucionlimitehorario updateManyAndReturn
   */
  export type disminucionlimitehorarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * The data used to update disminucionlimitehorarios.
     */
    data: XOR<disminucionlimitehorarioUpdateManyMutationInput, disminucionlimitehorarioUncheckedUpdateManyInput>
    /**
     * Filter which disminucionlimitehorarios to update
     */
    where?: disminucionlimitehorarioWhereInput
    /**
     * Limit how many disminucionlimitehorarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * disminucionlimitehorario upsert
   */
  export type disminucionlimitehorarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * The filter to search for the disminucionlimitehorario to update in case it exists.
     */
    where: disminucionlimitehorarioWhereUniqueInput
    /**
     * In case the disminucionlimitehorario found by the `where` argument doesn't exist, create a new disminucionlimitehorario with this data.
     */
    create: XOR<disminucionlimitehorarioCreateInput, disminucionlimitehorarioUncheckedCreateInput>
    /**
     * In case the disminucionlimitehorario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disminucionlimitehorarioUpdateInput, disminucionlimitehorarioUncheckedUpdateInput>
  }

  /**
   * disminucionlimitehorario delete
   */
  export type disminucionlimitehorarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
    /**
     * Filter which disminucionlimitehorario to delete.
     */
    where: disminucionlimitehorarioWhereUniqueInput
  }

  /**
   * disminucionlimitehorario deleteMany
   */
  export type disminucionlimitehorarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disminucionlimitehorarios to delete
     */
    where?: disminucionlimitehorarioWhereInput
    /**
     * Limit how many disminucionlimitehorarios to delete.
     */
    limit?: number
  }

  /**
   * disminucionlimitehorario.cliente
   */
  export type disminucionlimitehorario$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * disminucionlimitehorario without action
   */
  export type disminucionlimitehorarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitehorario
     */
    select?: disminucionlimitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitehorario
     */
    omit?: disminucionlimitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitehorarioInclude<ExtArgs> | null
  }


  /**
   * Model disminucionlimitemonetario
   */

  export type AggregateDisminucionlimitemonetario = {
    _count: DisminucionlimitemonetarioCountAggregateOutputType | null
    _avg: DisminucionlimitemonetarioAvgAggregateOutputType | null
    _sum: DisminucionlimitemonetarioSumAggregateOutputType | null
    _min: DisminucionlimitemonetarioMinAggregateOutputType | null
    _max: DisminucionlimitemonetarioMaxAggregateOutputType | null
  }

  export type DisminucionlimitemonetarioAvgAggregateOutputType = {
    disminucionmontarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
  }

  export type DisminucionlimitemonetarioSumAggregateOutputType = {
    disminucionmontarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
  }

  export type DisminucionlimitemonetarioMinAggregateOutputType = {
    disminucionmontarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
    fecha: Date | null
  }

  export type DisminucionlimitemonetarioMaxAggregateOutputType = {
    disminucionmontarioid: number | null
    clienteid: number | null
    cantidad: Decimal | null
    fecha: Date | null
  }

  export type DisminucionlimitemonetarioCountAggregateOutputType = {
    disminucionmontarioid: number
    clienteid: number
    cantidad: number
    fecha: number
    _all: number
  }


  export type DisminucionlimitemonetarioAvgAggregateInputType = {
    disminucionmontarioid?: true
    clienteid?: true
    cantidad?: true
  }

  export type DisminucionlimitemonetarioSumAggregateInputType = {
    disminucionmontarioid?: true
    clienteid?: true
    cantidad?: true
  }

  export type DisminucionlimitemonetarioMinAggregateInputType = {
    disminucionmontarioid?: true
    clienteid?: true
    cantidad?: true
    fecha?: true
  }

  export type DisminucionlimitemonetarioMaxAggregateInputType = {
    disminucionmontarioid?: true
    clienteid?: true
    cantidad?: true
    fecha?: true
  }

  export type DisminucionlimitemonetarioCountAggregateInputType = {
    disminucionmontarioid?: true
    clienteid?: true
    cantidad?: true
    fecha?: true
    _all?: true
  }

  export type DisminucionlimitemonetarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disminucionlimitemonetario to aggregate.
     */
    where?: disminucionlimitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitemonetarios to fetch.
     */
    orderBy?: disminucionlimitemonetarioOrderByWithRelationInput | disminucionlimitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disminucionlimitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitemonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disminucionlimitemonetarios
    **/
    _count?: true | DisminucionlimitemonetarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DisminucionlimitemonetarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DisminucionlimitemonetarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisminucionlimitemonetarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisminucionlimitemonetarioMaxAggregateInputType
  }

  export type GetDisminucionlimitemonetarioAggregateType<T extends DisminucionlimitemonetarioAggregateArgs> = {
        [P in keyof T & keyof AggregateDisminucionlimitemonetario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisminucionlimitemonetario[P]>
      : GetScalarType<T[P], AggregateDisminucionlimitemonetario[P]>
  }




  export type disminucionlimitemonetarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disminucionlimitemonetarioWhereInput
    orderBy?: disminucionlimitemonetarioOrderByWithAggregationInput | disminucionlimitemonetarioOrderByWithAggregationInput[]
    by: DisminucionlimitemonetarioScalarFieldEnum[] | DisminucionlimitemonetarioScalarFieldEnum
    having?: disminucionlimitemonetarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisminucionlimitemonetarioCountAggregateInputType | true
    _avg?: DisminucionlimitemonetarioAvgAggregateInputType
    _sum?: DisminucionlimitemonetarioSumAggregateInputType
    _min?: DisminucionlimitemonetarioMinAggregateInputType
    _max?: DisminucionlimitemonetarioMaxAggregateInputType
  }

  export type DisminucionlimitemonetarioGroupByOutputType = {
    disminucionmontarioid: number
    clienteid: number | null
    cantidad: Decimal | null
    fecha: Date | null
    _count: DisminucionlimitemonetarioCountAggregateOutputType | null
    _avg: DisminucionlimitemonetarioAvgAggregateOutputType | null
    _sum: DisminucionlimitemonetarioSumAggregateOutputType | null
    _min: DisminucionlimitemonetarioMinAggregateOutputType | null
    _max: DisminucionlimitemonetarioMaxAggregateOutputType | null
  }

  type GetDisminucionlimitemonetarioGroupByPayload<T extends disminucionlimitemonetarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisminucionlimitemonetarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisminucionlimitemonetarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisminucionlimitemonetarioGroupByOutputType[P]>
            : GetScalarType<T[P], DisminucionlimitemonetarioGroupByOutputType[P]>
        }
      >
    >


  export type disminucionlimitemonetarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    disminucionmontarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
    cliente?: boolean | disminucionlimitemonetario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["disminucionlimitemonetario"]>

  export type disminucionlimitemonetarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    disminucionmontarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
    cliente?: boolean | disminucionlimitemonetario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["disminucionlimitemonetario"]>

  export type disminucionlimitemonetarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    disminucionmontarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
    cliente?: boolean | disminucionlimitemonetario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["disminucionlimitemonetario"]>

  export type disminucionlimitemonetarioSelectScalar = {
    disminucionmontarioid?: boolean
    clienteid?: boolean
    cantidad?: boolean
    fecha?: boolean
  }

  export type disminucionlimitemonetarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"disminucionmontarioid" | "clienteid" | "cantidad" | "fecha", ExtArgs["result"]["disminucionlimitemonetario"]>
  export type disminucionlimitemonetarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | disminucionlimitemonetario$clienteArgs<ExtArgs>
  }
  export type disminucionlimitemonetarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | disminucionlimitemonetario$clienteArgs<ExtArgs>
  }
  export type disminucionlimitemonetarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | disminucionlimitemonetario$clienteArgs<ExtArgs>
  }

  export type $disminucionlimitemonetarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disminucionlimitemonetario"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      disminucionmontarioid: number
      clienteid: number | null
      cantidad: Prisma.Decimal | null
      fecha: Date | null
    }, ExtArgs["result"]["disminucionlimitemonetario"]>
    composites: {}
  }

  type disminucionlimitemonetarioGetPayload<S extends boolean | null | undefined | disminucionlimitemonetarioDefaultArgs> = $Result.GetResult<Prisma.$disminucionlimitemonetarioPayload, S>

  type disminucionlimitemonetarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<disminucionlimitemonetarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DisminucionlimitemonetarioCountAggregateInputType | true
    }

  export interface disminucionlimitemonetarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disminucionlimitemonetario'], meta: { name: 'disminucionlimitemonetario' } }
    /**
     * Find zero or one Disminucionlimitemonetario that matches the filter.
     * @param {disminucionlimitemonetarioFindUniqueArgs} args - Arguments to find a Disminucionlimitemonetario
     * @example
     * // Get one Disminucionlimitemonetario
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends disminucionlimitemonetarioFindUniqueArgs>(args: SelectSubset<T, disminucionlimitemonetarioFindUniqueArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Disminucionlimitemonetario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {disminucionlimitemonetarioFindUniqueOrThrowArgs} args - Arguments to find a Disminucionlimitemonetario
     * @example
     * // Get one Disminucionlimitemonetario
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends disminucionlimitemonetarioFindUniqueOrThrowArgs>(args: SelectSubset<T, disminucionlimitemonetarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disminucionlimitemonetario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitemonetarioFindFirstArgs} args - Arguments to find a Disminucionlimitemonetario
     * @example
     * // Get one Disminucionlimitemonetario
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends disminucionlimitemonetarioFindFirstArgs>(args?: SelectSubset<T, disminucionlimitemonetarioFindFirstArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disminucionlimitemonetario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitemonetarioFindFirstOrThrowArgs} args - Arguments to find a Disminucionlimitemonetario
     * @example
     * // Get one Disminucionlimitemonetario
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends disminucionlimitemonetarioFindFirstOrThrowArgs>(args?: SelectSubset<T, disminucionlimitemonetarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Disminucionlimitemonetarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitemonetarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disminucionlimitemonetarios
     * const disminucionlimitemonetarios = await prisma.disminucionlimitemonetario.findMany()
     * 
     * // Get first 10 Disminucionlimitemonetarios
     * const disminucionlimitemonetarios = await prisma.disminucionlimitemonetario.findMany({ take: 10 })
     * 
     * // Only select the `disminucionmontarioid`
     * const disminucionlimitemonetarioWithDisminucionmontarioidOnly = await prisma.disminucionlimitemonetario.findMany({ select: { disminucionmontarioid: true } })
     * 
     */
    findMany<T extends disminucionlimitemonetarioFindManyArgs>(args?: SelectSubset<T, disminucionlimitemonetarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Disminucionlimitemonetario.
     * @param {disminucionlimitemonetarioCreateArgs} args - Arguments to create a Disminucionlimitemonetario.
     * @example
     * // Create one Disminucionlimitemonetario
     * const Disminucionlimitemonetario = await prisma.disminucionlimitemonetario.create({
     *   data: {
     *     // ... data to create a Disminucionlimitemonetario
     *   }
     * })
     * 
     */
    create<T extends disminucionlimitemonetarioCreateArgs>(args: SelectSubset<T, disminucionlimitemonetarioCreateArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Disminucionlimitemonetarios.
     * @param {disminucionlimitemonetarioCreateManyArgs} args - Arguments to create many Disminucionlimitemonetarios.
     * @example
     * // Create many Disminucionlimitemonetarios
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends disminucionlimitemonetarioCreateManyArgs>(args?: SelectSubset<T, disminucionlimitemonetarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Disminucionlimitemonetarios and returns the data saved in the database.
     * @param {disminucionlimitemonetarioCreateManyAndReturnArgs} args - Arguments to create many Disminucionlimitemonetarios.
     * @example
     * // Create many Disminucionlimitemonetarios
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Disminucionlimitemonetarios and only return the `disminucionmontarioid`
     * const disminucionlimitemonetarioWithDisminucionmontarioidOnly = await prisma.disminucionlimitemonetario.createManyAndReturn({
     *   select: { disminucionmontarioid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends disminucionlimitemonetarioCreateManyAndReturnArgs>(args?: SelectSubset<T, disminucionlimitemonetarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Disminucionlimitemonetario.
     * @param {disminucionlimitemonetarioDeleteArgs} args - Arguments to delete one Disminucionlimitemonetario.
     * @example
     * // Delete one Disminucionlimitemonetario
     * const Disminucionlimitemonetario = await prisma.disminucionlimitemonetario.delete({
     *   where: {
     *     // ... filter to delete one Disminucionlimitemonetario
     *   }
     * })
     * 
     */
    delete<T extends disminucionlimitemonetarioDeleteArgs>(args: SelectSubset<T, disminucionlimitemonetarioDeleteArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Disminucionlimitemonetario.
     * @param {disminucionlimitemonetarioUpdateArgs} args - Arguments to update one Disminucionlimitemonetario.
     * @example
     * // Update one Disminucionlimitemonetario
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends disminucionlimitemonetarioUpdateArgs>(args: SelectSubset<T, disminucionlimitemonetarioUpdateArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Disminucionlimitemonetarios.
     * @param {disminucionlimitemonetarioDeleteManyArgs} args - Arguments to filter Disminucionlimitemonetarios to delete.
     * @example
     * // Delete a few Disminucionlimitemonetarios
     * const { count } = await prisma.disminucionlimitemonetario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends disminucionlimitemonetarioDeleteManyArgs>(args?: SelectSubset<T, disminucionlimitemonetarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disminucionlimitemonetarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitemonetarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disminucionlimitemonetarios
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends disminucionlimitemonetarioUpdateManyArgs>(args: SelectSubset<T, disminucionlimitemonetarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disminucionlimitemonetarios and returns the data updated in the database.
     * @param {disminucionlimitemonetarioUpdateManyAndReturnArgs} args - Arguments to update many Disminucionlimitemonetarios.
     * @example
     * // Update many Disminucionlimitemonetarios
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Disminucionlimitemonetarios and only return the `disminucionmontarioid`
     * const disminucionlimitemonetarioWithDisminucionmontarioidOnly = await prisma.disminucionlimitemonetario.updateManyAndReturn({
     *   select: { disminucionmontarioid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends disminucionlimitemonetarioUpdateManyAndReturnArgs>(args: SelectSubset<T, disminucionlimitemonetarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Disminucionlimitemonetario.
     * @param {disminucionlimitemonetarioUpsertArgs} args - Arguments to update or create a Disminucionlimitemonetario.
     * @example
     * // Update or create a Disminucionlimitemonetario
     * const disminucionlimitemonetario = await prisma.disminucionlimitemonetario.upsert({
     *   create: {
     *     // ... data to create a Disminucionlimitemonetario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disminucionlimitemonetario we want to update
     *   }
     * })
     */
    upsert<T extends disminucionlimitemonetarioUpsertArgs>(args: SelectSubset<T, disminucionlimitemonetarioUpsertArgs<ExtArgs>>): Prisma__disminucionlimitemonetarioClient<$Result.GetResult<Prisma.$disminucionlimitemonetarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Disminucionlimitemonetarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitemonetarioCountArgs} args - Arguments to filter Disminucionlimitemonetarios to count.
     * @example
     * // Count the number of Disminucionlimitemonetarios
     * const count = await prisma.disminucionlimitemonetario.count({
     *   where: {
     *     // ... the filter for the Disminucionlimitemonetarios we want to count
     *   }
     * })
    **/
    count<T extends disminucionlimitemonetarioCountArgs>(
      args?: Subset<T, disminucionlimitemonetarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisminucionlimitemonetarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disminucionlimitemonetario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisminucionlimitemonetarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisminucionlimitemonetarioAggregateArgs>(args: Subset<T, DisminucionlimitemonetarioAggregateArgs>): Prisma.PrismaPromise<GetDisminucionlimitemonetarioAggregateType<T>>

    /**
     * Group by Disminucionlimitemonetario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disminucionlimitemonetarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disminucionlimitemonetarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disminucionlimitemonetarioGroupByArgs['orderBy'] }
        : { orderBy?: disminucionlimitemonetarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disminucionlimitemonetarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisminucionlimitemonetarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disminucionlimitemonetario model
   */
  readonly fields: disminucionlimitemonetarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disminucionlimitemonetario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disminucionlimitemonetarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends disminucionlimitemonetario$clienteArgs<ExtArgs> = {}>(args?: Subset<T, disminucionlimitemonetario$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the disminucionlimitemonetario model
   */ 
  interface disminucionlimitemonetarioFieldRefs {
    readonly disminucionmontarioid: FieldRef<"disminucionlimitemonetario", 'Int'>
    readonly clienteid: FieldRef<"disminucionlimitemonetario", 'Int'>
    readonly cantidad: FieldRef<"disminucionlimitemonetario", 'Decimal'>
    readonly fecha: FieldRef<"disminucionlimitemonetario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * disminucionlimitemonetario findUnique
   */
  export type disminucionlimitemonetarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitemonetario to fetch.
     */
    where: disminucionlimitemonetarioWhereUniqueInput
  }

  /**
   * disminucionlimitemonetario findUniqueOrThrow
   */
  export type disminucionlimitemonetarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitemonetario to fetch.
     */
    where: disminucionlimitemonetarioWhereUniqueInput
  }

  /**
   * disminucionlimitemonetario findFirst
   */
  export type disminucionlimitemonetarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitemonetario to fetch.
     */
    where?: disminucionlimitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitemonetarios to fetch.
     */
    orderBy?: disminucionlimitemonetarioOrderByWithRelationInput | disminucionlimitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disminucionlimitemonetarios.
     */
    cursor?: disminucionlimitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitemonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disminucionlimitemonetarios.
     */
    distinct?: DisminucionlimitemonetarioScalarFieldEnum | DisminucionlimitemonetarioScalarFieldEnum[]
  }

  /**
   * disminucionlimitemonetario findFirstOrThrow
   */
  export type disminucionlimitemonetarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitemonetario to fetch.
     */
    where?: disminucionlimitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitemonetarios to fetch.
     */
    orderBy?: disminucionlimitemonetarioOrderByWithRelationInput | disminucionlimitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disminucionlimitemonetarios.
     */
    cursor?: disminucionlimitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitemonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disminucionlimitemonetarios.
     */
    distinct?: DisminucionlimitemonetarioScalarFieldEnum | DisminucionlimitemonetarioScalarFieldEnum[]
  }

  /**
   * disminucionlimitemonetario findMany
   */
  export type disminucionlimitemonetarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which disminucionlimitemonetarios to fetch.
     */
    where?: disminucionlimitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disminucionlimitemonetarios to fetch.
     */
    orderBy?: disminucionlimitemonetarioOrderByWithRelationInput | disminucionlimitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disminucionlimitemonetarios.
     */
    cursor?: disminucionlimitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disminucionlimitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disminucionlimitemonetarios.
     */
    skip?: number
    distinct?: DisminucionlimitemonetarioScalarFieldEnum | DisminucionlimitemonetarioScalarFieldEnum[]
  }

  /**
   * disminucionlimitemonetario create
   */
  export type disminucionlimitemonetarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * The data needed to create a disminucionlimitemonetario.
     */
    data?: XOR<disminucionlimitemonetarioCreateInput, disminucionlimitemonetarioUncheckedCreateInput>
  }

  /**
   * disminucionlimitemonetario createMany
   */
  export type disminucionlimitemonetarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disminucionlimitemonetarios.
     */
    data: disminucionlimitemonetarioCreateManyInput | disminucionlimitemonetarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disminucionlimitemonetario createManyAndReturn
   */
  export type disminucionlimitemonetarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * The data used to create many disminucionlimitemonetarios.
     */
    data: disminucionlimitemonetarioCreateManyInput | disminucionlimitemonetarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * disminucionlimitemonetario update
   */
  export type disminucionlimitemonetarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * The data needed to update a disminucionlimitemonetario.
     */
    data: XOR<disminucionlimitemonetarioUpdateInput, disminucionlimitemonetarioUncheckedUpdateInput>
    /**
     * Choose, which disminucionlimitemonetario to update.
     */
    where: disminucionlimitemonetarioWhereUniqueInput
  }

  /**
   * disminucionlimitemonetario updateMany
   */
  export type disminucionlimitemonetarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disminucionlimitemonetarios.
     */
    data: XOR<disminucionlimitemonetarioUpdateManyMutationInput, disminucionlimitemonetarioUncheckedUpdateManyInput>
    /**
     * Filter which disminucionlimitemonetarios to update
     */
    where?: disminucionlimitemonetarioWhereInput
    /**
     * Limit how many disminucionlimitemonetarios to update.
     */
    limit?: number
  }

  /**
   * disminucionlimitemonetario updateManyAndReturn
   */
  export type disminucionlimitemonetarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * The data used to update disminucionlimitemonetarios.
     */
    data: XOR<disminucionlimitemonetarioUpdateManyMutationInput, disminucionlimitemonetarioUncheckedUpdateManyInput>
    /**
     * Filter which disminucionlimitemonetarios to update
     */
    where?: disminucionlimitemonetarioWhereInput
    /**
     * Limit how many disminucionlimitemonetarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * disminucionlimitemonetario upsert
   */
  export type disminucionlimitemonetarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * The filter to search for the disminucionlimitemonetario to update in case it exists.
     */
    where: disminucionlimitemonetarioWhereUniqueInput
    /**
     * In case the disminucionlimitemonetario found by the `where` argument doesn't exist, create a new disminucionlimitemonetario with this data.
     */
    create: XOR<disminucionlimitemonetarioCreateInput, disminucionlimitemonetarioUncheckedCreateInput>
    /**
     * In case the disminucionlimitemonetario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disminucionlimitemonetarioUpdateInput, disminucionlimitemonetarioUncheckedUpdateInput>
  }

  /**
   * disminucionlimitemonetario delete
   */
  export type disminucionlimitemonetarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
    /**
     * Filter which disminucionlimitemonetario to delete.
     */
    where: disminucionlimitemonetarioWhereUniqueInput
  }

  /**
   * disminucionlimitemonetario deleteMany
   */
  export type disminucionlimitemonetarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disminucionlimitemonetarios to delete
     */
    where?: disminucionlimitemonetarioWhereInput
    /**
     * Limit how many disminucionlimitemonetarios to delete.
     */
    limit?: number
  }

  /**
   * disminucionlimitemonetario.cliente
   */
  export type disminucionlimitemonetario$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * disminucionlimitemonetario without action
   */
  export type disminucionlimitemonetarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disminucionlimitemonetario
     */
    select?: disminucionlimitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the disminucionlimitemonetario
     */
    omit?: disminucionlimitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disminucionlimitemonetarioInclude<ExtArgs> | null
  }


  /**
   * Model egreso
   */

  export type AggregateEgreso = {
    _count: EgresoCountAggregateOutputType | null
    _avg: EgresoAvgAggregateOutputType | null
    _sum: EgresoSumAggregateOutputType | null
    _min: EgresoMinAggregateOutputType | null
    _max: EgresoMaxAggregateOutputType | null
  }

  export type EgresoAvgAggregateOutputType = {
    egresoid: number | null
    clienteid: number | null
    monto: Decimal | null
  }

  export type EgresoSumAggregateOutputType = {
    egresoid: number | null
    clienteid: number | null
    monto: Decimal | null
  }

  export type EgresoMinAggregateOutputType = {
    egresoid: number | null
    clienteid: number | null
    monto: Decimal | null
    fecha: Date | null
    metododeretiro: string | null
  }

  export type EgresoMaxAggregateOutputType = {
    egresoid: number | null
    clienteid: number | null
    monto: Decimal | null
    fecha: Date | null
    metododeretiro: string | null
  }

  export type EgresoCountAggregateOutputType = {
    egresoid: number
    clienteid: number
    monto: number
    fecha: number
    metododeretiro: number
    _all: number
  }


  export type EgresoAvgAggregateInputType = {
    egresoid?: true
    clienteid?: true
    monto?: true
  }

  export type EgresoSumAggregateInputType = {
    egresoid?: true
    clienteid?: true
    monto?: true
  }

  export type EgresoMinAggregateInputType = {
    egresoid?: true
    clienteid?: true
    monto?: true
    fecha?: true
    metododeretiro?: true
  }

  export type EgresoMaxAggregateInputType = {
    egresoid?: true
    clienteid?: true
    monto?: true
    fecha?: true
    metododeretiro?: true
  }

  export type EgresoCountAggregateInputType = {
    egresoid?: true
    clienteid?: true
    monto?: true
    fecha?: true
    metododeretiro?: true
    _all?: true
  }

  export type EgresoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which egreso to aggregate.
     */
    where?: egresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of egresos to fetch.
     */
    orderBy?: egresoOrderByWithRelationInput | egresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: egresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` egresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned egresos
    **/
    _count?: true | EgresoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EgresoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EgresoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EgresoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EgresoMaxAggregateInputType
  }

  export type GetEgresoAggregateType<T extends EgresoAggregateArgs> = {
        [P in keyof T & keyof AggregateEgreso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEgreso[P]>
      : GetScalarType<T[P], AggregateEgreso[P]>
  }




  export type egresoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: egresoWhereInput
    orderBy?: egresoOrderByWithAggregationInput | egresoOrderByWithAggregationInput[]
    by: EgresoScalarFieldEnum[] | EgresoScalarFieldEnum
    having?: egresoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EgresoCountAggregateInputType | true
    _avg?: EgresoAvgAggregateInputType
    _sum?: EgresoSumAggregateInputType
    _min?: EgresoMinAggregateInputType
    _max?: EgresoMaxAggregateInputType
  }

  export type EgresoGroupByOutputType = {
    egresoid: number
    clienteid: number | null
    monto: Decimal | null
    fecha: Date | null
    metododeretiro: string | null
    _count: EgresoCountAggregateOutputType | null
    _avg: EgresoAvgAggregateOutputType | null
    _sum: EgresoSumAggregateOutputType | null
    _min: EgresoMinAggregateOutputType | null
    _max: EgresoMaxAggregateOutputType | null
  }

  type GetEgresoGroupByPayload<T extends egresoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EgresoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EgresoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EgresoGroupByOutputType[P]>
            : GetScalarType<T[P], EgresoGroupByOutputType[P]>
        }
      >
    >


  export type egresoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    egresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    metododeretiro?: boolean
    cliente?: boolean | egreso$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["egreso"]>

  export type egresoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    egresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    metododeretiro?: boolean
    cliente?: boolean | egreso$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["egreso"]>

  export type egresoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    egresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    metododeretiro?: boolean
    cliente?: boolean | egreso$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["egreso"]>

  export type egresoSelectScalar = {
    egresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    metododeretiro?: boolean
  }

  export type egresoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"egresoid" | "clienteid" | "monto" | "fecha" | "metododeretiro", ExtArgs["result"]["egreso"]>
  export type egresoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | egreso$clienteArgs<ExtArgs>
  }
  export type egresoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | egreso$clienteArgs<ExtArgs>
  }
  export type egresoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | egreso$clienteArgs<ExtArgs>
  }

  export type $egresoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "egreso"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      egresoid: number
      clienteid: number | null
      monto: Prisma.Decimal | null
      fecha: Date | null
      metododeretiro: string | null
    }, ExtArgs["result"]["egreso"]>
    composites: {}
  }

  type egresoGetPayload<S extends boolean | null | undefined | egresoDefaultArgs> = $Result.GetResult<Prisma.$egresoPayload, S>

  type egresoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<egresoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EgresoCountAggregateInputType | true
    }

  export interface egresoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['egreso'], meta: { name: 'egreso' } }
    /**
     * Find zero or one Egreso that matches the filter.
     * @param {egresoFindUniqueArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends egresoFindUniqueArgs>(args: SelectSubset<T, egresoFindUniqueArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Egreso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {egresoFindUniqueOrThrowArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends egresoFindUniqueOrThrowArgs>(args: SelectSubset<T, egresoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Egreso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {egresoFindFirstArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends egresoFindFirstArgs>(args?: SelectSubset<T, egresoFindFirstArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Egreso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {egresoFindFirstOrThrowArgs} args - Arguments to find a Egreso
     * @example
     * // Get one Egreso
     * const egreso = await prisma.egreso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends egresoFindFirstOrThrowArgs>(args?: SelectSubset<T, egresoFindFirstOrThrowArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Egresos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {egresoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Egresos
     * const egresos = await prisma.egreso.findMany()
     * 
     * // Get first 10 Egresos
     * const egresos = await prisma.egreso.findMany({ take: 10 })
     * 
     * // Only select the `egresoid`
     * const egresoWithEgresoidOnly = await prisma.egreso.findMany({ select: { egresoid: true } })
     * 
     */
    findMany<T extends egresoFindManyArgs>(args?: SelectSubset<T, egresoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Egreso.
     * @param {egresoCreateArgs} args - Arguments to create a Egreso.
     * @example
     * // Create one Egreso
     * const Egreso = await prisma.egreso.create({
     *   data: {
     *     // ... data to create a Egreso
     *   }
     * })
     * 
     */
    create<T extends egresoCreateArgs>(args: SelectSubset<T, egresoCreateArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Egresos.
     * @param {egresoCreateManyArgs} args - Arguments to create many Egresos.
     * @example
     * // Create many Egresos
     * const egreso = await prisma.egreso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends egresoCreateManyArgs>(args?: SelectSubset<T, egresoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Egresos and returns the data saved in the database.
     * @param {egresoCreateManyAndReturnArgs} args - Arguments to create many Egresos.
     * @example
     * // Create many Egresos
     * const egreso = await prisma.egreso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Egresos and only return the `egresoid`
     * const egresoWithEgresoidOnly = await prisma.egreso.createManyAndReturn({
     *   select: { egresoid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends egresoCreateManyAndReturnArgs>(args?: SelectSubset<T, egresoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Egreso.
     * @param {egresoDeleteArgs} args - Arguments to delete one Egreso.
     * @example
     * // Delete one Egreso
     * const Egreso = await prisma.egreso.delete({
     *   where: {
     *     // ... filter to delete one Egreso
     *   }
     * })
     * 
     */
    delete<T extends egresoDeleteArgs>(args: SelectSubset<T, egresoDeleteArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Egreso.
     * @param {egresoUpdateArgs} args - Arguments to update one Egreso.
     * @example
     * // Update one Egreso
     * const egreso = await prisma.egreso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends egresoUpdateArgs>(args: SelectSubset<T, egresoUpdateArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Egresos.
     * @param {egresoDeleteManyArgs} args - Arguments to filter Egresos to delete.
     * @example
     * // Delete a few Egresos
     * const { count } = await prisma.egreso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends egresoDeleteManyArgs>(args?: SelectSubset<T, egresoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Egresos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {egresoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Egresos
     * const egreso = await prisma.egreso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends egresoUpdateManyArgs>(args: SelectSubset<T, egresoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Egresos and returns the data updated in the database.
     * @param {egresoUpdateManyAndReturnArgs} args - Arguments to update many Egresos.
     * @example
     * // Update many Egresos
     * const egreso = await prisma.egreso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Egresos and only return the `egresoid`
     * const egresoWithEgresoidOnly = await prisma.egreso.updateManyAndReturn({
     *   select: { egresoid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends egresoUpdateManyAndReturnArgs>(args: SelectSubset<T, egresoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Egreso.
     * @param {egresoUpsertArgs} args - Arguments to update or create a Egreso.
     * @example
     * // Update or create a Egreso
     * const egreso = await prisma.egreso.upsert({
     *   create: {
     *     // ... data to create a Egreso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Egreso we want to update
     *   }
     * })
     */
    upsert<T extends egresoUpsertArgs>(args: SelectSubset<T, egresoUpsertArgs<ExtArgs>>): Prisma__egresoClient<$Result.GetResult<Prisma.$egresoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Egresos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {egresoCountArgs} args - Arguments to filter Egresos to count.
     * @example
     * // Count the number of Egresos
     * const count = await prisma.egreso.count({
     *   where: {
     *     // ... the filter for the Egresos we want to count
     *   }
     * })
    **/
    count<T extends egresoCountArgs>(
      args?: Subset<T, egresoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EgresoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Egreso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EgresoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EgresoAggregateArgs>(args: Subset<T, EgresoAggregateArgs>): Prisma.PrismaPromise<GetEgresoAggregateType<T>>

    /**
     * Group by Egreso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {egresoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends egresoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: egresoGroupByArgs['orderBy'] }
        : { orderBy?: egresoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, egresoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEgresoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the egreso model
   */
  readonly fields: egresoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for egreso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__egresoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends egreso$clienteArgs<ExtArgs> = {}>(args?: Subset<T, egreso$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the egreso model
   */ 
  interface egresoFieldRefs {
    readonly egresoid: FieldRef<"egreso", 'Int'>
    readonly clienteid: FieldRef<"egreso", 'Int'>
    readonly monto: FieldRef<"egreso", 'Decimal'>
    readonly fecha: FieldRef<"egreso", 'DateTime'>
    readonly metododeretiro: FieldRef<"egreso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * egreso findUnique
   */
  export type egresoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * Filter, which egreso to fetch.
     */
    where: egresoWhereUniqueInput
  }

  /**
   * egreso findUniqueOrThrow
   */
  export type egresoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * Filter, which egreso to fetch.
     */
    where: egresoWhereUniqueInput
  }

  /**
   * egreso findFirst
   */
  export type egresoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * Filter, which egreso to fetch.
     */
    where?: egresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of egresos to fetch.
     */
    orderBy?: egresoOrderByWithRelationInput | egresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for egresos.
     */
    cursor?: egresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` egresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of egresos.
     */
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * egreso findFirstOrThrow
   */
  export type egresoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * Filter, which egreso to fetch.
     */
    where?: egresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of egresos to fetch.
     */
    orderBy?: egresoOrderByWithRelationInput | egresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for egresos.
     */
    cursor?: egresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` egresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of egresos.
     */
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * egreso findMany
   */
  export type egresoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * Filter, which egresos to fetch.
     */
    where?: egresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of egresos to fetch.
     */
    orderBy?: egresoOrderByWithRelationInput | egresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing egresos.
     */
    cursor?: egresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` egresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` egresos.
     */
    skip?: number
    distinct?: EgresoScalarFieldEnum | EgresoScalarFieldEnum[]
  }

  /**
   * egreso create
   */
  export type egresoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * The data needed to create a egreso.
     */
    data?: XOR<egresoCreateInput, egresoUncheckedCreateInput>
  }

  /**
   * egreso createMany
   */
  export type egresoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many egresos.
     */
    data: egresoCreateManyInput | egresoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * egreso createManyAndReturn
   */
  export type egresoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * The data used to create many egresos.
     */
    data: egresoCreateManyInput | egresoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * egreso update
   */
  export type egresoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * The data needed to update a egreso.
     */
    data: XOR<egresoUpdateInput, egresoUncheckedUpdateInput>
    /**
     * Choose, which egreso to update.
     */
    where: egresoWhereUniqueInput
  }

  /**
   * egreso updateMany
   */
  export type egresoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update egresos.
     */
    data: XOR<egresoUpdateManyMutationInput, egresoUncheckedUpdateManyInput>
    /**
     * Filter which egresos to update
     */
    where?: egresoWhereInput
    /**
     * Limit how many egresos to update.
     */
    limit?: number
  }

  /**
   * egreso updateManyAndReturn
   */
  export type egresoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * The data used to update egresos.
     */
    data: XOR<egresoUpdateManyMutationInput, egresoUncheckedUpdateManyInput>
    /**
     * Filter which egresos to update
     */
    where?: egresoWhereInput
    /**
     * Limit how many egresos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * egreso upsert
   */
  export type egresoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * The filter to search for the egreso to update in case it exists.
     */
    where: egresoWhereUniqueInput
    /**
     * In case the egreso found by the `where` argument doesn't exist, create a new egreso with this data.
     */
    create: XOR<egresoCreateInput, egresoUncheckedCreateInput>
    /**
     * In case the egreso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<egresoUpdateInput, egresoUncheckedUpdateInput>
  }

  /**
   * egreso delete
   */
  export type egresoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
    /**
     * Filter which egreso to delete.
     */
    where: egresoWhereUniqueInput
  }

  /**
   * egreso deleteMany
   */
  export type egresoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which egresos to delete
     */
    where?: egresoWhereInput
    /**
     * Limit how many egresos to delete.
     */
    limit?: number
  }

  /**
   * egreso.cliente
   */
  export type egreso$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * egreso without action
   */
  export type egresoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the egreso
     */
    select?: egresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the egreso
     */
    omit?: egresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: egresoInclude<ExtArgs> | null
  }


  /**
   * Model ingreso
   */

  export type AggregateIngreso = {
    _count: IngresoCountAggregateOutputType | null
    _avg: IngresoAvgAggregateOutputType | null
    _sum: IngresoSumAggregateOutputType | null
    _min: IngresoMinAggregateOutputType | null
    _max: IngresoMaxAggregateOutputType | null
  }

  export type IngresoAvgAggregateOutputType = {
    ingresoid: number | null
    clienteid: number | null
    monto: Decimal | null
    cuponid: number | null
  }

  export type IngresoSumAggregateOutputType = {
    ingresoid: number | null
    clienteid: number | null
    monto: Decimal | null
    cuponid: number | null
  }

  export type IngresoMinAggregateOutputType = {
    ingresoid: number | null
    clienteid: number | null
    monto: Decimal | null
    fecha: Date | null
    cuponid: number | null
    metododepago: string | null
  }

  export type IngresoMaxAggregateOutputType = {
    ingresoid: number | null
    clienteid: number | null
    monto: Decimal | null
    fecha: Date | null
    cuponid: number | null
    metododepago: string | null
  }

  export type IngresoCountAggregateOutputType = {
    ingresoid: number
    clienteid: number
    monto: number
    fecha: number
    cuponid: number
    metododepago: number
    _all: number
  }


  export type IngresoAvgAggregateInputType = {
    ingresoid?: true
    clienteid?: true
    monto?: true
    cuponid?: true
  }

  export type IngresoSumAggregateInputType = {
    ingresoid?: true
    clienteid?: true
    monto?: true
    cuponid?: true
  }

  export type IngresoMinAggregateInputType = {
    ingresoid?: true
    clienteid?: true
    monto?: true
    fecha?: true
    cuponid?: true
    metododepago?: true
  }

  export type IngresoMaxAggregateInputType = {
    ingresoid?: true
    clienteid?: true
    monto?: true
    fecha?: true
    cuponid?: true
    metododepago?: true
  }

  export type IngresoCountAggregateInputType = {
    ingresoid?: true
    clienteid?: true
    monto?: true
    fecha?: true
    cuponid?: true
    metododepago?: true
    _all?: true
  }

  export type IngresoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ingreso to aggregate.
     */
    where?: ingresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ingresos to fetch.
     */
    orderBy?: ingresoOrderByWithRelationInput | ingresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ingresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ingresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ingresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ingresos
    **/
    _count?: true | IngresoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IngresoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IngresoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IngresoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IngresoMaxAggregateInputType
  }

  export type GetIngresoAggregateType<T extends IngresoAggregateArgs> = {
        [P in keyof T & keyof AggregateIngreso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIngreso[P]>
      : GetScalarType<T[P], AggregateIngreso[P]>
  }




  export type ingresoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ingresoWhereInput
    orderBy?: ingresoOrderByWithAggregationInput | ingresoOrderByWithAggregationInput[]
    by: IngresoScalarFieldEnum[] | IngresoScalarFieldEnum
    having?: ingresoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IngresoCountAggregateInputType | true
    _avg?: IngresoAvgAggregateInputType
    _sum?: IngresoSumAggregateInputType
    _min?: IngresoMinAggregateInputType
    _max?: IngresoMaxAggregateInputType
  }

  export type IngresoGroupByOutputType = {
    ingresoid: number
    clienteid: number | null
    monto: Decimal | null
    fecha: Date | null
    cuponid: number | null
    metododepago: string | null
    _count: IngresoCountAggregateOutputType | null
    _avg: IngresoAvgAggregateOutputType | null
    _sum: IngresoSumAggregateOutputType | null
    _min: IngresoMinAggregateOutputType | null
    _max: IngresoMaxAggregateOutputType | null
  }

  type GetIngresoGroupByPayload<T extends ingresoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IngresoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IngresoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IngresoGroupByOutputType[P]>
            : GetScalarType<T[P], IngresoGroupByOutputType[P]>
        }
      >
    >


  export type ingresoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ingresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    cuponid?: boolean
    metododepago?: boolean
    cliente?: boolean | ingreso$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["ingreso"]>

  export type ingresoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ingresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    cuponid?: boolean
    metododepago?: boolean
    cliente?: boolean | ingreso$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["ingreso"]>

  export type ingresoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ingresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    cuponid?: boolean
    metododepago?: boolean
    cliente?: boolean | ingreso$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["ingreso"]>

  export type ingresoSelectScalar = {
    ingresoid?: boolean
    clienteid?: boolean
    monto?: boolean
    fecha?: boolean
    cuponid?: boolean
    metododepago?: boolean
  }

  export type ingresoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ingresoid" | "clienteid" | "monto" | "fecha" | "cuponid" | "metododepago", ExtArgs["result"]["ingreso"]>
  export type ingresoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ingreso$clienteArgs<ExtArgs>
  }
  export type ingresoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ingreso$clienteArgs<ExtArgs>
  }
  export type ingresoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ingreso$clienteArgs<ExtArgs>
  }

  export type $ingresoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ingreso"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      ingresoid: number
      clienteid: number | null
      monto: Prisma.Decimal | null
      fecha: Date | null
      cuponid: number | null
      metododepago: string | null
    }, ExtArgs["result"]["ingreso"]>
    composites: {}
  }

  type ingresoGetPayload<S extends boolean | null | undefined | ingresoDefaultArgs> = $Result.GetResult<Prisma.$ingresoPayload, S>

  type ingresoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ingresoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IngresoCountAggregateInputType | true
    }

  export interface ingresoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ingreso'], meta: { name: 'ingreso' } }
    /**
     * Find zero or one Ingreso that matches the filter.
     * @param {ingresoFindUniqueArgs} args - Arguments to find a Ingreso
     * @example
     * // Get one Ingreso
     * const ingreso = await prisma.ingreso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ingresoFindUniqueArgs>(args: SelectSubset<T, ingresoFindUniqueArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ingreso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ingresoFindUniqueOrThrowArgs} args - Arguments to find a Ingreso
     * @example
     * // Get one Ingreso
     * const ingreso = await prisma.ingreso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ingresoFindUniqueOrThrowArgs>(args: SelectSubset<T, ingresoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ingreso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ingresoFindFirstArgs} args - Arguments to find a Ingreso
     * @example
     * // Get one Ingreso
     * const ingreso = await prisma.ingreso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ingresoFindFirstArgs>(args?: SelectSubset<T, ingresoFindFirstArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ingreso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ingresoFindFirstOrThrowArgs} args - Arguments to find a Ingreso
     * @example
     * // Get one Ingreso
     * const ingreso = await prisma.ingreso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ingresoFindFirstOrThrowArgs>(args?: SelectSubset<T, ingresoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ingresos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ingresoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ingresos
     * const ingresos = await prisma.ingreso.findMany()
     * 
     * // Get first 10 Ingresos
     * const ingresos = await prisma.ingreso.findMany({ take: 10 })
     * 
     * // Only select the `ingresoid`
     * const ingresoWithIngresoidOnly = await prisma.ingreso.findMany({ select: { ingresoid: true } })
     * 
     */
    findMany<T extends ingresoFindManyArgs>(args?: SelectSubset<T, ingresoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ingreso.
     * @param {ingresoCreateArgs} args - Arguments to create a Ingreso.
     * @example
     * // Create one Ingreso
     * const Ingreso = await prisma.ingreso.create({
     *   data: {
     *     // ... data to create a Ingreso
     *   }
     * })
     * 
     */
    create<T extends ingresoCreateArgs>(args: SelectSubset<T, ingresoCreateArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ingresos.
     * @param {ingresoCreateManyArgs} args - Arguments to create many Ingresos.
     * @example
     * // Create many Ingresos
     * const ingreso = await prisma.ingreso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ingresoCreateManyArgs>(args?: SelectSubset<T, ingresoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ingresos and returns the data saved in the database.
     * @param {ingresoCreateManyAndReturnArgs} args - Arguments to create many Ingresos.
     * @example
     * // Create many Ingresos
     * const ingreso = await prisma.ingreso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ingresos and only return the `ingresoid`
     * const ingresoWithIngresoidOnly = await prisma.ingreso.createManyAndReturn({
     *   select: { ingresoid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ingresoCreateManyAndReturnArgs>(args?: SelectSubset<T, ingresoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ingreso.
     * @param {ingresoDeleteArgs} args - Arguments to delete one Ingreso.
     * @example
     * // Delete one Ingreso
     * const Ingreso = await prisma.ingreso.delete({
     *   where: {
     *     // ... filter to delete one Ingreso
     *   }
     * })
     * 
     */
    delete<T extends ingresoDeleteArgs>(args: SelectSubset<T, ingresoDeleteArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ingreso.
     * @param {ingresoUpdateArgs} args - Arguments to update one Ingreso.
     * @example
     * // Update one Ingreso
     * const ingreso = await prisma.ingreso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ingresoUpdateArgs>(args: SelectSubset<T, ingresoUpdateArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ingresos.
     * @param {ingresoDeleteManyArgs} args - Arguments to filter Ingresos to delete.
     * @example
     * // Delete a few Ingresos
     * const { count } = await prisma.ingreso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ingresoDeleteManyArgs>(args?: SelectSubset<T, ingresoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ingresos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ingresoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ingresos
     * const ingreso = await prisma.ingreso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ingresoUpdateManyArgs>(args: SelectSubset<T, ingresoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ingresos and returns the data updated in the database.
     * @param {ingresoUpdateManyAndReturnArgs} args - Arguments to update many Ingresos.
     * @example
     * // Update many Ingresos
     * const ingreso = await prisma.ingreso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ingresos and only return the `ingresoid`
     * const ingresoWithIngresoidOnly = await prisma.ingreso.updateManyAndReturn({
     *   select: { ingresoid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ingresoUpdateManyAndReturnArgs>(args: SelectSubset<T, ingresoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ingreso.
     * @param {ingresoUpsertArgs} args - Arguments to update or create a Ingreso.
     * @example
     * // Update or create a Ingreso
     * const ingreso = await prisma.ingreso.upsert({
     *   create: {
     *     // ... data to create a Ingreso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ingreso we want to update
     *   }
     * })
     */
    upsert<T extends ingresoUpsertArgs>(args: SelectSubset<T, ingresoUpsertArgs<ExtArgs>>): Prisma__ingresoClient<$Result.GetResult<Prisma.$ingresoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ingresos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ingresoCountArgs} args - Arguments to filter Ingresos to count.
     * @example
     * // Count the number of Ingresos
     * const count = await prisma.ingreso.count({
     *   where: {
     *     // ... the filter for the Ingresos we want to count
     *   }
     * })
    **/
    count<T extends ingresoCountArgs>(
      args?: Subset<T, ingresoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IngresoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ingreso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IngresoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IngresoAggregateArgs>(args: Subset<T, IngresoAggregateArgs>): Prisma.PrismaPromise<GetIngresoAggregateType<T>>

    /**
     * Group by Ingreso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ingresoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ingresoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ingresoGroupByArgs['orderBy'] }
        : { orderBy?: ingresoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ingresoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIngresoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ingreso model
   */
  readonly fields: ingresoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ingreso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ingresoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ingreso$clienteArgs<ExtArgs> = {}>(args?: Subset<T, ingreso$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ingreso model
   */ 
  interface ingresoFieldRefs {
    readonly ingresoid: FieldRef<"ingreso", 'Int'>
    readonly clienteid: FieldRef<"ingreso", 'Int'>
    readonly monto: FieldRef<"ingreso", 'Decimal'>
    readonly fecha: FieldRef<"ingreso", 'DateTime'>
    readonly cuponid: FieldRef<"ingreso", 'Int'>
    readonly metododepago: FieldRef<"ingreso", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ingreso findUnique
   */
  export type ingresoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * Filter, which ingreso to fetch.
     */
    where: ingresoWhereUniqueInput
  }

  /**
   * ingreso findUniqueOrThrow
   */
  export type ingresoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * Filter, which ingreso to fetch.
     */
    where: ingresoWhereUniqueInput
  }

  /**
   * ingreso findFirst
   */
  export type ingresoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * Filter, which ingreso to fetch.
     */
    where?: ingresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ingresos to fetch.
     */
    orderBy?: ingresoOrderByWithRelationInput | ingresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ingresos.
     */
    cursor?: ingresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ingresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ingresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ingresos.
     */
    distinct?: IngresoScalarFieldEnum | IngresoScalarFieldEnum[]
  }

  /**
   * ingreso findFirstOrThrow
   */
  export type ingresoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * Filter, which ingreso to fetch.
     */
    where?: ingresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ingresos to fetch.
     */
    orderBy?: ingresoOrderByWithRelationInput | ingresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ingresos.
     */
    cursor?: ingresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ingresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ingresos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ingresos.
     */
    distinct?: IngresoScalarFieldEnum | IngresoScalarFieldEnum[]
  }

  /**
   * ingreso findMany
   */
  export type ingresoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * Filter, which ingresos to fetch.
     */
    where?: ingresoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ingresos to fetch.
     */
    orderBy?: ingresoOrderByWithRelationInput | ingresoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ingresos.
     */
    cursor?: ingresoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ingresos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ingresos.
     */
    skip?: number
    distinct?: IngresoScalarFieldEnum | IngresoScalarFieldEnum[]
  }

  /**
   * ingreso create
   */
  export type ingresoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * The data needed to create a ingreso.
     */
    data?: XOR<ingresoCreateInput, ingresoUncheckedCreateInput>
  }

  /**
   * ingreso createMany
   */
  export type ingresoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ingresos.
     */
    data: ingresoCreateManyInput | ingresoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ingreso createManyAndReturn
   */
  export type ingresoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * The data used to create many ingresos.
     */
    data: ingresoCreateManyInput | ingresoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ingreso update
   */
  export type ingresoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * The data needed to update a ingreso.
     */
    data: XOR<ingresoUpdateInput, ingresoUncheckedUpdateInput>
    /**
     * Choose, which ingreso to update.
     */
    where: ingresoWhereUniqueInput
  }

  /**
   * ingreso updateMany
   */
  export type ingresoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ingresos.
     */
    data: XOR<ingresoUpdateManyMutationInput, ingresoUncheckedUpdateManyInput>
    /**
     * Filter which ingresos to update
     */
    where?: ingresoWhereInput
    /**
     * Limit how many ingresos to update.
     */
    limit?: number
  }

  /**
   * ingreso updateManyAndReturn
   */
  export type ingresoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * The data used to update ingresos.
     */
    data: XOR<ingresoUpdateManyMutationInput, ingresoUncheckedUpdateManyInput>
    /**
     * Filter which ingresos to update
     */
    where?: ingresoWhereInput
    /**
     * Limit how many ingresos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ingreso upsert
   */
  export type ingresoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * The filter to search for the ingreso to update in case it exists.
     */
    where: ingresoWhereUniqueInput
    /**
     * In case the ingreso found by the `where` argument doesn't exist, create a new ingreso with this data.
     */
    create: XOR<ingresoCreateInput, ingresoUncheckedCreateInput>
    /**
     * In case the ingreso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ingresoUpdateInput, ingresoUncheckedUpdateInput>
  }

  /**
   * ingreso delete
   */
  export type ingresoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
    /**
     * Filter which ingreso to delete.
     */
    where: ingresoWhereUniqueInput
  }

  /**
   * ingreso deleteMany
   */
  export type ingresoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ingresos to delete
     */
    where?: ingresoWhereInput
    /**
     * Limit how many ingresos to delete.
     */
    limit?: number
  }

  /**
   * ingreso.cliente
   */
  export type ingreso$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * ingreso without action
   */
  export type ingresoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ingreso
     */
    select?: ingresoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ingreso
     */
    omit?: ingresoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ingresoInclude<ExtArgs> | null
  }


  /**
   * Model juego
   */

  export type AggregateJuego = {
    _count: JuegoCountAggregateOutputType | null
    _avg: JuegoAvgAggregateOutputType | null
    _sum: JuegoSumAggregateOutputType | null
    _min: JuegoMinAggregateOutputType | null
    _max: JuegoMaxAggregateOutputType | null
  }

  export type JuegoAvgAggregateOutputType = {
    juegoid: number | null
  }

  export type JuegoSumAggregateOutputType = {
    juegoid: number | null
  }

  export type JuegoMinAggregateOutputType = {
    juegoid: number | null
    nombre: string | null
    tipo: string | null
    estado: string | null
  }

  export type JuegoMaxAggregateOutputType = {
    juegoid: number | null
    nombre: string | null
    tipo: string | null
    estado: string | null
  }

  export type JuegoCountAggregateOutputType = {
    juegoid: number
    nombre: number
    tipo: number
    estado: number
    _all: number
  }


  export type JuegoAvgAggregateInputType = {
    juegoid?: true
  }

  export type JuegoSumAggregateInputType = {
    juegoid?: true
  }

  export type JuegoMinAggregateInputType = {
    juegoid?: true
    nombre?: true
    tipo?: true
    estado?: true
  }

  export type JuegoMaxAggregateInputType = {
    juegoid?: true
    nombre?: true
    tipo?: true
    estado?: true
  }

  export type JuegoCountAggregateInputType = {
    juegoid?: true
    nombre?: true
    tipo?: true
    estado?: true
    _all?: true
  }

  export type JuegoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which juego to aggregate.
     */
    where?: juegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of juegos to fetch.
     */
    orderBy?: juegoOrderByWithRelationInput | juegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: juegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` juegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` juegos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned juegos
    **/
    _count?: true | JuegoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JuegoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JuegoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JuegoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JuegoMaxAggregateInputType
  }

  export type GetJuegoAggregateType<T extends JuegoAggregateArgs> = {
        [P in keyof T & keyof AggregateJuego]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJuego[P]>
      : GetScalarType<T[P], AggregateJuego[P]>
  }




  export type juegoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: juegoWhereInput
    orderBy?: juegoOrderByWithAggregationInput | juegoOrderByWithAggregationInput[]
    by: JuegoScalarFieldEnum[] | JuegoScalarFieldEnum
    having?: juegoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JuegoCountAggregateInputType | true
    _avg?: JuegoAvgAggregateInputType
    _sum?: JuegoSumAggregateInputType
    _min?: JuegoMinAggregateInputType
    _max?: JuegoMaxAggregateInputType
  }

  export type JuegoGroupByOutputType = {
    juegoid: number
    nombre: string | null
    tipo: string | null
    estado: string | null
    _count: JuegoCountAggregateOutputType | null
    _avg: JuegoAvgAggregateOutputType | null
    _sum: JuegoSumAggregateOutputType | null
    _min: JuegoMinAggregateOutputType | null
    _max: JuegoMaxAggregateOutputType | null
  }

  type GetJuegoGroupByPayload<T extends juegoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JuegoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JuegoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JuegoGroupByOutputType[P]>
            : GetScalarType<T[P], JuegoGroupByOutputType[P]>
        }
      >
    >


  export type juegoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    juegoid?: boolean
    nombre?: boolean
    tipo?: boolean
    estado?: boolean
  }, ExtArgs["result"]["juego"]>

  export type juegoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    juegoid?: boolean
    nombre?: boolean
    tipo?: boolean
    estado?: boolean
  }, ExtArgs["result"]["juego"]>

  export type juegoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    juegoid?: boolean
    nombre?: boolean
    tipo?: boolean
    estado?: boolean
  }, ExtArgs["result"]["juego"]>

  export type juegoSelectScalar = {
    juegoid?: boolean
    nombre?: boolean
    tipo?: boolean
    estado?: boolean
  }

  export type juegoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"juegoid" | "nombre" | "tipo" | "estado", ExtArgs["result"]["juego"]>

  export type $juegoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "juego"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      juegoid: number
      nombre: string | null
      tipo: string | null
      estado: string | null
    }, ExtArgs["result"]["juego"]>
    composites: {}
  }

  type juegoGetPayload<S extends boolean | null | undefined | juegoDefaultArgs> = $Result.GetResult<Prisma.$juegoPayload, S>

  type juegoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<juegoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JuegoCountAggregateInputType | true
    }

  export interface juegoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['juego'], meta: { name: 'juego' } }
    /**
     * Find zero or one Juego that matches the filter.
     * @param {juegoFindUniqueArgs} args - Arguments to find a Juego
     * @example
     * // Get one Juego
     * const juego = await prisma.juego.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends juegoFindUniqueArgs>(args: SelectSubset<T, juegoFindUniqueArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Juego that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {juegoFindUniqueOrThrowArgs} args - Arguments to find a Juego
     * @example
     * // Get one Juego
     * const juego = await prisma.juego.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends juegoFindUniqueOrThrowArgs>(args: SelectSubset<T, juegoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Juego that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {juegoFindFirstArgs} args - Arguments to find a Juego
     * @example
     * // Get one Juego
     * const juego = await prisma.juego.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends juegoFindFirstArgs>(args?: SelectSubset<T, juegoFindFirstArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Juego that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {juegoFindFirstOrThrowArgs} args - Arguments to find a Juego
     * @example
     * // Get one Juego
     * const juego = await prisma.juego.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends juegoFindFirstOrThrowArgs>(args?: SelectSubset<T, juegoFindFirstOrThrowArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Juegos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {juegoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Juegos
     * const juegos = await prisma.juego.findMany()
     * 
     * // Get first 10 Juegos
     * const juegos = await prisma.juego.findMany({ take: 10 })
     * 
     * // Only select the `juegoid`
     * const juegoWithJuegoidOnly = await prisma.juego.findMany({ select: { juegoid: true } })
     * 
     */
    findMany<T extends juegoFindManyArgs>(args?: SelectSubset<T, juegoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Juego.
     * @param {juegoCreateArgs} args - Arguments to create a Juego.
     * @example
     * // Create one Juego
     * const Juego = await prisma.juego.create({
     *   data: {
     *     // ... data to create a Juego
     *   }
     * })
     * 
     */
    create<T extends juegoCreateArgs>(args: SelectSubset<T, juegoCreateArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Juegos.
     * @param {juegoCreateManyArgs} args - Arguments to create many Juegos.
     * @example
     * // Create many Juegos
     * const juego = await prisma.juego.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends juegoCreateManyArgs>(args?: SelectSubset<T, juegoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Juegos and returns the data saved in the database.
     * @param {juegoCreateManyAndReturnArgs} args - Arguments to create many Juegos.
     * @example
     * // Create many Juegos
     * const juego = await prisma.juego.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Juegos and only return the `juegoid`
     * const juegoWithJuegoidOnly = await prisma.juego.createManyAndReturn({
     *   select: { juegoid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends juegoCreateManyAndReturnArgs>(args?: SelectSubset<T, juegoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Juego.
     * @param {juegoDeleteArgs} args - Arguments to delete one Juego.
     * @example
     * // Delete one Juego
     * const Juego = await prisma.juego.delete({
     *   where: {
     *     // ... filter to delete one Juego
     *   }
     * })
     * 
     */
    delete<T extends juegoDeleteArgs>(args: SelectSubset<T, juegoDeleteArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Juego.
     * @param {juegoUpdateArgs} args - Arguments to update one Juego.
     * @example
     * // Update one Juego
     * const juego = await prisma.juego.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends juegoUpdateArgs>(args: SelectSubset<T, juegoUpdateArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Juegos.
     * @param {juegoDeleteManyArgs} args - Arguments to filter Juegos to delete.
     * @example
     * // Delete a few Juegos
     * const { count } = await prisma.juego.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends juegoDeleteManyArgs>(args?: SelectSubset<T, juegoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Juegos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {juegoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Juegos
     * const juego = await prisma.juego.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends juegoUpdateManyArgs>(args: SelectSubset<T, juegoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Juegos and returns the data updated in the database.
     * @param {juegoUpdateManyAndReturnArgs} args - Arguments to update many Juegos.
     * @example
     * // Update many Juegos
     * const juego = await prisma.juego.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Juegos and only return the `juegoid`
     * const juegoWithJuegoidOnly = await prisma.juego.updateManyAndReturn({
     *   select: { juegoid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends juegoUpdateManyAndReturnArgs>(args: SelectSubset<T, juegoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Juego.
     * @param {juegoUpsertArgs} args - Arguments to update or create a Juego.
     * @example
     * // Update or create a Juego
     * const juego = await prisma.juego.upsert({
     *   create: {
     *     // ... data to create a Juego
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Juego we want to update
     *   }
     * })
     */
    upsert<T extends juegoUpsertArgs>(args: SelectSubset<T, juegoUpsertArgs<ExtArgs>>): Prisma__juegoClient<$Result.GetResult<Prisma.$juegoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Juegos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {juegoCountArgs} args - Arguments to filter Juegos to count.
     * @example
     * // Count the number of Juegos
     * const count = await prisma.juego.count({
     *   where: {
     *     // ... the filter for the Juegos we want to count
     *   }
     * })
    **/
    count<T extends juegoCountArgs>(
      args?: Subset<T, juegoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JuegoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Juego.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JuegoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JuegoAggregateArgs>(args: Subset<T, JuegoAggregateArgs>): Prisma.PrismaPromise<GetJuegoAggregateType<T>>

    /**
     * Group by Juego.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {juegoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends juegoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: juegoGroupByArgs['orderBy'] }
        : { orderBy?: juegoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, juegoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJuegoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the juego model
   */
  readonly fields: juegoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for juego.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__juegoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the juego model
   */ 
  interface juegoFieldRefs {
    readonly juegoid: FieldRef<"juego", 'Int'>
    readonly nombre: FieldRef<"juego", 'String'>
    readonly tipo: FieldRef<"juego", 'String'>
    readonly estado: FieldRef<"juego", 'String'>
  }
    

  // Custom InputTypes
  /**
   * juego findUnique
   */
  export type juegoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * Filter, which juego to fetch.
     */
    where: juegoWhereUniqueInput
  }

  /**
   * juego findUniqueOrThrow
   */
  export type juegoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * Filter, which juego to fetch.
     */
    where: juegoWhereUniqueInput
  }

  /**
   * juego findFirst
   */
  export type juegoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * Filter, which juego to fetch.
     */
    where?: juegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of juegos to fetch.
     */
    orderBy?: juegoOrderByWithRelationInput | juegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for juegos.
     */
    cursor?: juegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` juegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` juegos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of juegos.
     */
    distinct?: JuegoScalarFieldEnum | JuegoScalarFieldEnum[]
  }

  /**
   * juego findFirstOrThrow
   */
  export type juegoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * Filter, which juego to fetch.
     */
    where?: juegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of juegos to fetch.
     */
    orderBy?: juegoOrderByWithRelationInput | juegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for juegos.
     */
    cursor?: juegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` juegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` juegos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of juegos.
     */
    distinct?: JuegoScalarFieldEnum | JuegoScalarFieldEnum[]
  }

  /**
   * juego findMany
   */
  export type juegoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * Filter, which juegos to fetch.
     */
    where?: juegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of juegos to fetch.
     */
    orderBy?: juegoOrderByWithRelationInput | juegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing juegos.
     */
    cursor?: juegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` juegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` juegos.
     */
    skip?: number
    distinct?: JuegoScalarFieldEnum | JuegoScalarFieldEnum[]
  }

  /**
   * juego create
   */
  export type juegoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * The data needed to create a juego.
     */
    data?: XOR<juegoCreateInput, juegoUncheckedCreateInput>
  }

  /**
   * juego createMany
   */
  export type juegoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many juegos.
     */
    data: juegoCreateManyInput | juegoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * juego createManyAndReturn
   */
  export type juegoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * The data used to create many juegos.
     */
    data: juegoCreateManyInput | juegoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * juego update
   */
  export type juegoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * The data needed to update a juego.
     */
    data: XOR<juegoUpdateInput, juegoUncheckedUpdateInput>
    /**
     * Choose, which juego to update.
     */
    where: juegoWhereUniqueInput
  }

  /**
   * juego updateMany
   */
  export type juegoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update juegos.
     */
    data: XOR<juegoUpdateManyMutationInput, juegoUncheckedUpdateManyInput>
    /**
     * Filter which juegos to update
     */
    where?: juegoWhereInput
    /**
     * Limit how many juegos to update.
     */
    limit?: number
  }

  /**
   * juego updateManyAndReturn
   */
  export type juegoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * The data used to update juegos.
     */
    data: XOR<juegoUpdateManyMutationInput, juegoUncheckedUpdateManyInput>
    /**
     * Filter which juegos to update
     */
    where?: juegoWhereInput
    /**
     * Limit how many juegos to update.
     */
    limit?: number
  }

  /**
   * juego upsert
   */
  export type juegoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * The filter to search for the juego to update in case it exists.
     */
    where: juegoWhereUniqueInput
    /**
     * In case the juego found by the `where` argument doesn't exist, create a new juego with this data.
     */
    create: XOR<juegoCreateInput, juegoUncheckedCreateInput>
    /**
     * In case the juego was found with the provided `where` argument, update it with this data.
     */
    update: XOR<juegoUpdateInput, juegoUncheckedUpdateInput>
  }

  /**
   * juego delete
   */
  export type juegoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
    /**
     * Filter which juego to delete.
     */
    where: juegoWhereUniqueInput
  }

  /**
   * juego deleteMany
   */
  export type juegoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which juegos to delete
     */
    where?: juegoWhereInput
    /**
     * Limit how many juegos to delete.
     */
    limit?: number
  }

  /**
   * juego without action
   */
  export type juegoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the juego
     */
    select?: juegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the juego
     */
    omit?: juegoOmit<ExtArgs> | null
  }


  /**
   * Model jugada
   */

  export type AggregateJugada = {
    _count: JugadaCountAggregateOutputType | null
    _avg: JugadaAvgAggregateOutputType | null
    _sum: JugadaSumAggregateOutputType | null
    _min: JugadaMinAggregateOutputType | null
    _max: JugadaMaxAggregateOutputType | null
  }

  export type JugadaAvgAggregateOutputType = {
    jugadaid: number | null
    clienteid: number | null
    gananciaperdida: number | null
    apuesta: number | null
    hora: number | null
    partidaid: number | null
  }

  export type JugadaSumAggregateOutputType = {
    jugadaid: number | null
    clienteid: number | null
    gananciaperdida: number | null
    apuesta: number | null
    hora: number | null
    partidaid: number | null
  }

  export type JugadaMinAggregateOutputType = {
    jugadaid: number | null
    clienteid: number | null
    fecha: Date | null
    gananciaperdida: number | null
    apuesta: number | null
    hora: number | null
    partidaid: number | null
  }

  export type JugadaMaxAggregateOutputType = {
    jugadaid: number | null
    clienteid: number | null
    fecha: Date | null
    gananciaperdida: number | null
    apuesta: number | null
    hora: number | null
    partidaid: number | null
  }

  export type JugadaCountAggregateOutputType = {
    jugadaid: number
    clienteid: number
    fecha: number
    gananciaperdida: number
    apuesta: number
    hora: number
    partidaid: number
    _all: number
  }


  export type JugadaAvgAggregateInputType = {
    jugadaid?: true
    clienteid?: true
    gananciaperdida?: true
    apuesta?: true
    hora?: true
    partidaid?: true
  }

  export type JugadaSumAggregateInputType = {
    jugadaid?: true
    clienteid?: true
    gananciaperdida?: true
    apuesta?: true
    hora?: true
    partidaid?: true
  }

  export type JugadaMinAggregateInputType = {
    jugadaid?: true
    clienteid?: true
    fecha?: true
    gananciaperdida?: true
    apuesta?: true
    hora?: true
    partidaid?: true
  }

  export type JugadaMaxAggregateInputType = {
    jugadaid?: true
    clienteid?: true
    fecha?: true
    gananciaperdida?: true
    apuesta?: true
    hora?: true
    partidaid?: true
  }

  export type JugadaCountAggregateInputType = {
    jugadaid?: true
    clienteid?: true
    fecha?: true
    gananciaperdida?: true
    apuesta?: true
    hora?: true
    partidaid?: true
    _all?: true
  }

  export type JugadaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which jugada to aggregate.
     */
    where?: jugadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jugadas to fetch.
     */
    orderBy?: jugadaOrderByWithRelationInput | jugadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: jugadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jugadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jugadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned jugadas
    **/
    _count?: true | JugadaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JugadaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JugadaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JugadaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JugadaMaxAggregateInputType
  }

  export type GetJugadaAggregateType<T extends JugadaAggregateArgs> = {
        [P in keyof T & keyof AggregateJugada]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJugada[P]>
      : GetScalarType<T[P], AggregateJugada[P]>
  }




  export type jugadaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: jugadaWhereInput
    orderBy?: jugadaOrderByWithAggregationInput | jugadaOrderByWithAggregationInput[]
    by: JugadaScalarFieldEnum[] | JugadaScalarFieldEnum
    having?: jugadaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JugadaCountAggregateInputType | true
    _avg?: JugadaAvgAggregateInputType
    _sum?: JugadaSumAggregateInputType
    _min?: JugadaMinAggregateInputType
    _max?: JugadaMaxAggregateInputType
  }

  export type JugadaGroupByOutputType = {
    jugadaid: number
    clienteid: number | null
    fecha: Date | null
    gananciaperdida: number | null
    apuesta: number | null
    hora: number | null
    partidaid: number | null
    _count: JugadaCountAggregateOutputType | null
    _avg: JugadaAvgAggregateOutputType | null
    _sum: JugadaSumAggregateOutputType | null
    _min: JugadaMinAggregateOutputType | null
    _max: JugadaMaxAggregateOutputType | null
  }

  type GetJugadaGroupByPayload<T extends jugadaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JugadaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JugadaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JugadaGroupByOutputType[P]>
            : GetScalarType<T[P], JugadaGroupByOutputType[P]>
        }
      >
    >


  export type jugadaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    jugadaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
    hora?: boolean
    partidaid?: boolean
    cliente?: boolean | jugada$clienteArgs<ExtArgs>
    partida?: boolean | jugada$partidaArgs<ExtArgs>
  }, ExtArgs["result"]["jugada"]>

  export type jugadaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    jugadaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
    hora?: boolean
    partidaid?: boolean
    cliente?: boolean | jugada$clienteArgs<ExtArgs>
    partida?: boolean | jugada$partidaArgs<ExtArgs>
  }, ExtArgs["result"]["jugada"]>

  export type jugadaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    jugadaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
    hora?: boolean
    partidaid?: boolean
    cliente?: boolean | jugada$clienteArgs<ExtArgs>
    partida?: boolean | jugada$partidaArgs<ExtArgs>
  }, ExtArgs["result"]["jugada"]>

  export type jugadaSelectScalar = {
    jugadaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
    hora?: boolean
    partidaid?: boolean
  }

  export type jugadaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"jugadaid" | "clienteid" | "fecha" | "gananciaperdida" | "apuesta" | "hora" | "partidaid", ExtArgs["result"]["jugada"]>
  export type jugadaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | jugada$clienteArgs<ExtArgs>
    partida?: boolean | jugada$partidaArgs<ExtArgs>
  }
  export type jugadaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | jugada$clienteArgs<ExtArgs>
    partida?: boolean | jugada$partidaArgs<ExtArgs>
  }
  export type jugadaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | jugada$clienteArgs<ExtArgs>
    partida?: boolean | jugada$partidaArgs<ExtArgs>
  }

  export type $jugadaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "jugada"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs> | null
      partida: Prisma.$partidaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      jugadaid: number
      clienteid: number | null
      fecha: Date | null
      gananciaperdida: number | null
      apuesta: number | null
      hora: number | null
      partidaid: number | null
    }, ExtArgs["result"]["jugada"]>
    composites: {}
  }

  type jugadaGetPayload<S extends boolean | null | undefined | jugadaDefaultArgs> = $Result.GetResult<Prisma.$jugadaPayload, S>

  type jugadaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<jugadaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JugadaCountAggregateInputType | true
    }

  export interface jugadaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['jugada'], meta: { name: 'jugada' } }
    /**
     * Find zero or one Jugada that matches the filter.
     * @param {jugadaFindUniqueArgs} args - Arguments to find a Jugada
     * @example
     * // Get one Jugada
     * const jugada = await prisma.jugada.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends jugadaFindUniqueArgs>(args: SelectSubset<T, jugadaFindUniqueArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Jugada that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {jugadaFindUniqueOrThrowArgs} args - Arguments to find a Jugada
     * @example
     * // Get one Jugada
     * const jugada = await prisma.jugada.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends jugadaFindUniqueOrThrowArgs>(args: SelectSubset<T, jugadaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Jugada that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jugadaFindFirstArgs} args - Arguments to find a Jugada
     * @example
     * // Get one Jugada
     * const jugada = await prisma.jugada.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends jugadaFindFirstArgs>(args?: SelectSubset<T, jugadaFindFirstArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Jugada that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jugadaFindFirstOrThrowArgs} args - Arguments to find a Jugada
     * @example
     * // Get one Jugada
     * const jugada = await prisma.jugada.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends jugadaFindFirstOrThrowArgs>(args?: SelectSubset<T, jugadaFindFirstOrThrowArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Jugadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jugadaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Jugadas
     * const jugadas = await prisma.jugada.findMany()
     * 
     * // Get first 10 Jugadas
     * const jugadas = await prisma.jugada.findMany({ take: 10 })
     * 
     * // Only select the `jugadaid`
     * const jugadaWithJugadaidOnly = await prisma.jugada.findMany({ select: { jugadaid: true } })
     * 
     */
    findMany<T extends jugadaFindManyArgs>(args?: SelectSubset<T, jugadaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Jugada.
     * @param {jugadaCreateArgs} args - Arguments to create a Jugada.
     * @example
     * // Create one Jugada
     * const Jugada = await prisma.jugada.create({
     *   data: {
     *     // ... data to create a Jugada
     *   }
     * })
     * 
     */
    create<T extends jugadaCreateArgs>(args: SelectSubset<T, jugadaCreateArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Jugadas.
     * @param {jugadaCreateManyArgs} args - Arguments to create many Jugadas.
     * @example
     * // Create many Jugadas
     * const jugada = await prisma.jugada.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends jugadaCreateManyArgs>(args?: SelectSubset<T, jugadaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Jugadas and returns the data saved in the database.
     * @param {jugadaCreateManyAndReturnArgs} args - Arguments to create many Jugadas.
     * @example
     * // Create many Jugadas
     * const jugada = await prisma.jugada.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Jugadas and only return the `jugadaid`
     * const jugadaWithJugadaidOnly = await prisma.jugada.createManyAndReturn({
     *   select: { jugadaid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends jugadaCreateManyAndReturnArgs>(args?: SelectSubset<T, jugadaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Jugada.
     * @param {jugadaDeleteArgs} args - Arguments to delete one Jugada.
     * @example
     * // Delete one Jugada
     * const Jugada = await prisma.jugada.delete({
     *   where: {
     *     // ... filter to delete one Jugada
     *   }
     * })
     * 
     */
    delete<T extends jugadaDeleteArgs>(args: SelectSubset<T, jugadaDeleteArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Jugada.
     * @param {jugadaUpdateArgs} args - Arguments to update one Jugada.
     * @example
     * // Update one Jugada
     * const jugada = await prisma.jugada.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends jugadaUpdateArgs>(args: SelectSubset<T, jugadaUpdateArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Jugadas.
     * @param {jugadaDeleteManyArgs} args - Arguments to filter Jugadas to delete.
     * @example
     * // Delete a few Jugadas
     * const { count } = await prisma.jugada.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends jugadaDeleteManyArgs>(args?: SelectSubset<T, jugadaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jugadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jugadaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Jugadas
     * const jugada = await prisma.jugada.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends jugadaUpdateManyArgs>(args: SelectSubset<T, jugadaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jugadas and returns the data updated in the database.
     * @param {jugadaUpdateManyAndReturnArgs} args - Arguments to update many Jugadas.
     * @example
     * // Update many Jugadas
     * const jugada = await prisma.jugada.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Jugadas and only return the `jugadaid`
     * const jugadaWithJugadaidOnly = await prisma.jugada.updateManyAndReturn({
     *   select: { jugadaid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends jugadaUpdateManyAndReturnArgs>(args: SelectSubset<T, jugadaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Jugada.
     * @param {jugadaUpsertArgs} args - Arguments to update or create a Jugada.
     * @example
     * // Update or create a Jugada
     * const jugada = await prisma.jugada.upsert({
     *   create: {
     *     // ... data to create a Jugada
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Jugada we want to update
     *   }
     * })
     */
    upsert<T extends jugadaUpsertArgs>(args: SelectSubset<T, jugadaUpsertArgs<ExtArgs>>): Prisma__jugadaClient<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Jugadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jugadaCountArgs} args - Arguments to filter Jugadas to count.
     * @example
     * // Count the number of Jugadas
     * const count = await prisma.jugada.count({
     *   where: {
     *     // ... the filter for the Jugadas we want to count
     *   }
     * })
    **/
    count<T extends jugadaCountArgs>(
      args?: Subset<T, jugadaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JugadaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Jugada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JugadaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JugadaAggregateArgs>(args: Subset<T, JugadaAggregateArgs>): Prisma.PrismaPromise<GetJugadaAggregateType<T>>

    /**
     * Group by Jugada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jugadaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends jugadaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: jugadaGroupByArgs['orderBy'] }
        : { orderBy?: jugadaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, jugadaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJugadaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the jugada model
   */
  readonly fields: jugadaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for jugada.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__jugadaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends jugada$clienteArgs<ExtArgs> = {}>(args?: Subset<T, jugada$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    partida<T extends jugada$partidaArgs<ExtArgs> = {}>(args?: Subset<T, jugada$partidaArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the jugada model
   */ 
  interface jugadaFieldRefs {
    readonly jugadaid: FieldRef<"jugada", 'Int'>
    readonly clienteid: FieldRef<"jugada", 'Int'>
    readonly fecha: FieldRef<"jugada", 'DateTime'>
    readonly gananciaperdida: FieldRef<"jugada", 'Int'>
    readonly apuesta: FieldRef<"jugada", 'Int'>
    readonly hora: FieldRef<"jugada", 'Int'>
    readonly partidaid: FieldRef<"jugada", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * jugada findUnique
   */
  export type jugadaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * Filter, which jugada to fetch.
     */
    where: jugadaWhereUniqueInput
  }

  /**
   * jugada findUniqueOrThrow
   */
  export type jugadaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * Filter, which jugada to fetch.
     */
    where: jugadaWhereUniqueInput
  }

  /**
   * jugada findFirst
   */
  export type jugadaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * Filter, which jugada to fetch.
     */
    where?: jugadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jugadas to fetch.
     */
    orderBy?: jugadaOrderByWithRelationInput | jugadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for jugadas.
     */
    cursor?: jugadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jugadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jugadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of jugadas.
     */
    distinct?: JugadaScalarFieldEnum | JugadaScalarFieldEnum[]
  }

  /**
   * jugada findFirstOrThrow
   */
  export type jugadaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * Filter, which jugada to fetch.
     */
    where?: jugadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jugadas to fetch.
     */
    orderBy?: jugadaOrderByWithRelationInput | jugadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for jugadas.
     */
    cursor?: jugadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jugadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jugadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of jugadas.
     */
    distinct?: JugadaScalarFieldEnum | JugadaScalarFieldEnum[]
  }

  /**
   * jugada findMany
   */
  export type jugadaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * Filter, which jugadas to fetch.
     */
    where?: jugadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jugadas to fetch.
     */
    orderBy?: jugadaOrderByWithRelationInput | jugadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing jugadas.
     */
    cursor?: jugadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jugadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jugadas.
     */
    skip?: number
    distinct?: JugadaScalarFieldEnum | JugadaScalarFieldEnum[]
  }

  /**
   * jugada create
   */
  export type jugadaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * The data needed to create a jugada.
     */
    data?: XOR<jugadaCreateInput, jugadaUncheckedCreateInput>
  }

  /**
   * jugada createMany
   */
  export type jugadaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many jugadas.
     */
    data: jugadaCreateManyInput | jugadaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * jugada createManyAndReturn
   */
  export type jugadaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * The data used to create many jugadas.
     */
    data: jugadaCreateManyInput | jugadaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * jugada update
   */
  export type jugadaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * The data needed to update a jugada.
     */
    data: XOR<jugadaUpdateInput, jugadaUncheckedUpdateInput>
    /**
     * Choose, which jugada to update.
     */
    where: jugadaWhereUniqueInput
  }

  /**
   * jugada updateMany
   */
  export type jugadaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update jugadas.
     */
    data: XOR<jugadaUpdateManyMutationInput, jugadaUncheckedUpdateManyInput>
    /**
     * Filter which jugadas to update
     */
    where?: jugadaWhereInput
    /**
     * Limit how many jugadas to update.
     */
    limit?: number
  }

  /**
   * jugada updateManyAndReturn
   */
  export type jugadaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * The data used to update jugadas.
     */
    data: XOR<jugadaUpdateManyMutationInput, jugadaUncheckedUpdateManyInput>
    /**
     * Filter which jugadas to update
     */
    where?: jugadaWhereInput
    /**
     * Limit how many jugadas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * jugada upsert
   */
  export type jugadaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * The filter to search for the jugada to update in case it exists.
     */
    where: jugadaWhereUniqueInput
    /**
     * In case the jugada found by the `where` argument doesn't exist, create a new jugada with this data.
     */
    create: XOR<jugadaCreateInput, jugadaUncheckedCreateInput>
    /**
     * In case the jugada was found with the provided `where` argument, update it with this data.
     */
    update: XOR<jugadaUpdateInput, jugadaUncheckedUpdateInput>
  }

  /**
   * jugada delete
   */
  export type jugadaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    /**
     * Filter which jugada to delete.
     */
    where: jugadaWhereUniqueInput
  }

  /**
   * jugada deleteMany
   */
  export type jugadaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which jugadas to delete
     */
    where?: jugadaWhereInput
    /**
     * Limit how many jugadas to delete.
     */
    limit?: number
  }

  /**
   * jugada.cliente
   */
  export type jugada$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * jugada.partida
   */
  export type jugada$partidaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    where?: partidaWhereInput
  }

  /**
   * jugada without action
   */
  export type jugadaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
  }


  /**
   * Model limitehorario
   */

  export type AggregateLimitehorario = {
    _count: LimitehorarioCountAggregateOutputType | null
    _avg: LimitehorarioAvgAggregateOutputType | null
    _sum: LimitehorarioSumAggregateOutputType | null
    _min: LimitehorarioMinAggregateOutputType | null
    _max: LimitehorarioMaxAggregateOutputType | null
  }

  export type LimitehorarioAvgAggregateOutputType = {
    clienteid: number | null
    limitediario: number | null
    limitesemanal: number | null
    limitemensual: number | null
  }

  export type LimitehorarioSumAggregateOutputType = {
    clienteid: number | null
    limitediario: number | null
    limitesemanal: number | null
    limitemensual: number | null
  }

  export type LimitehorarioMinAggregateOutputType = {
    clienteid: number | null
    limitediario: number | null
    limitesemanal: number | null
    limitemensual: number | null
  }

  export type LimitehorarioMaxAggregateOutputType = {
    clienteid: number | null
    limitediario: number | null
    limitesemanal: number | null
    limitemensual: number | null
  }

  export type LimitehorarioCountAggregateOutputType = {
    clienteid: number
    limitediario: number
    limitesemanal: number
    limitemensual: number
    _all: number
  }


  export type LimitehorarioAvgAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitehorarioSumAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitehorarioMinAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitehorarioMaxAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitehorarioCountAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
    _all?: true
  }

  export type LimitehorarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which limitehorario to aggregate.
     */
    where?: limitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitehorarios to fetch.
     */
    orderBy?: limitehorarioOrderByWithRelationInput | limitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: limitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned limitehorarios
    **/
    _count?: true | LimitehorarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LimitehorarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LimitehorarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LimitehorarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LimitehorarioMaxAggregateInputType
  }

  export type GetLimitehorarioAggregateType<T extends LimitehorarioAggregateArgs> = {
        [P in keyof T & keyof AggregateLimitehorario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLimitehorario[P]>
      : GetScalarType<T[P], AggregateLimitehorario[P]>
  }




  export type limitehorarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: limitehorarioWhereInput
    orderBy?: limitehorarioOrderByWithAggregationInput | limitehorarioOrderByWithAggregationInput[]
    by: LimitehorarioScalarFieldEnum[] | LimitehorarioScalarFieldEnum
    having?: limitehorarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LimitehorarioCountAggregateInputType | true
    _avg?: LimitehorarioAvgAggregateInputType
    _sum?: LimitehorarioSumAggregateInputType
    _min?: LimitehorarioMinAggregateInputType
    _max?: LimitehorarioMaxAggregateInputType
  }

  export type LimitehorarioGroupByOutputType = {
    clienteid: number
    limitediario: number | null
    limitesemanal: number | null
    limitemensual: number | null
    _count: LimitehorarioCountAggregateOutputType | null
    _avg: LimitehorarioAvgAggregateOutputType | null
    _sum: LimitehorarioSumAggregateOutputType | null
    _min: LimitehorarioMinAggregateOutputType | null
    _max: LimitehorarioMaxAggregateOutputType | null
  }

  type GetLimitehorarioGroupByPayload<T extends limitehorarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LimitehorarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LimitehorarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LimitehorarioGroupByOutputType[P]>
            : GetScalarType<T[P], LimitehorarioGroupByOutputType[P]>
        }
      >
    >


  export type limitehorarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["limitehorario"]>

  export type limitehorarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["limitehorario"]>

  export type limitehorarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["limitehorario"]>

  export type limitehorarioSelectScalar = {
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
  }

  export type limitehorarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"clienteid" | "limitediario" | "limitesemanal" | "limitemensual", ExtArgs["result"]["limitehorario"]>
  export type limitehorarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type limitehorarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type limitehorarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }

  export type $limitehorarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "limitehorario"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteid: number
      limitediario: number | null
      limitesemanal: number | null
      limitemensual: number | null
    }, ExtArgs["result"]["limitehorario"]>
    composites: {}
  }

  type limitehorarioGetPayload<S extends boolean | null | undefined | limitehorarioDefaultArgs> = $Result.GetResult<Prisma.$limitehorarioPayload, S>

  type limitehorarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<limitehorarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LimitehorarioCountAggregateInputType | true
    }

  export interface limitehorarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['limitehorario'], meta: { name: 'limitehorario' } }
    /**
     * Find zero or one Limitehorario that matches the filter.
     * @param {limitehorarioFindUniqueArgs} args - Arguments to find a Limitehorario
     * @example
     * // Get one Limitehorario
     * const limitehorario = await prisma.limitehorario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends limitehorarioFindUniqueArgs>(args: SelectSubset<T, limitehorarioFindUniqueArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Limitehorario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {limitehorarioFindUniqueOrThrowArgs} args - Arguments to find a Limitehorario
     * @example
     * // Get one Limitehorario
     * const limitehorario = await prisma.limitehorario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends limitehorarioFindUniqueOrThrowArgs>(args: SelectSubset<T, limitehorarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Limitehorario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitehorarioFindFirstArgs} args - Arguments to find a Limitehorario
     * @example
     * // Get one Limitehorario
     * const limitehorario = await prisma.limitehorario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends limitehorarioFindFirstArgs>(args?: SelectSubset<T, limitehorarioFindFirstArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Limitehorario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitehorarioFindFirstOrThrowArgs} args - Arguments to find a Limitehorario
     * @example
     * // Get one Limitehorario
     * const limitehorario = await prisma.limitehorario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends limitehorarioFindFirstOrThrowArgs>(args?: SelectSubset<T, limitehorarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Limitehorarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitehorarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Limitehorarios
     * const limitehorarios = await prisma.limitehorario.findMany()
     * 
     * // Get first 10 Limitehorarios
     * const limitehorarios = await prisma.limitehorario.findMany({ take: 10 })
     * 
     * // Only select the `clienteid`
     * const limitehorarioWithClienteidOnly = await prisma.limitehorario.findMany({ select: { clienteid: true } })
     * 
     */
    findMany<T extends limitehorarioFindManyArgs>(args?: SelectSubset<T, limitehorarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Limitehorario.
     * @param {limitehorarioCreateArgs} args - Arguments to create a Limitehorario.
     * @example
     * // Create one Limitehorario
     * const Limitehorario = await prisma.limitehorario.create({
     *   data: {
     *     // ... data to create a Limitehorario
     *   }
     * })
     * 
     */
    create<T extends limitehorarioCreateArgs>(args: SelectSubset<T, limitehorarioCreateArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Limitehorarios.
     * @param {limitehorarioCreateManyArgs} args - Arguments to create many Limitehorarios.
     * @example
     * // Create many Limitehorarios
     * const limitehorario = await prisma.limitehorario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends limitehorarioCreateManyArgs>(args?: SelectSubset<T, limitehorarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Limitehorarios and returns the data saved in the database.
     * @param {limitehorarioCreateManyAndReturnArgs} args - Arguments to create many Limitehorarios.
     * @example
     * // Create many Limitehorarios
     * const limitehorario = await prisma.limitehorario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Limitehorarios and only return the `clienteid`
     * const limitehorarioWithClienteidOnly = await prisma.limitehorario.createManyAndReturn({
     *   select: { clienteid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends limitehorarioCreateManyAndReturnArgs>(args?: SelectSubset<T, limitehorarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Limitehorario.
     * @param {limitehorarioDeleteArgs} args - Arguments to delete one Limitehorario.
     * @example
     * // Delete one Limitehorario
     * const Limitehorario = await prisma.limitehorario.delete({
     *   where: {
     *     // ... filter to delete one Limitehorario
     *   }
     * })
     * 
     */
    delete<T extends limitehorarioDeleteArgs>(args: SelectSubset<T, limitehorarioDeleteArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Limitehorario.
     * @param {limitehorarioUpdateArgs} args - Arguments to update one Limitehorario.
     * @example
     * // Update one Limitehorario
     * const limitehorario = await prisma.limitehorario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends limitehorarioUpdateArgs>(args: SelectSubset<T, limitehorarioUpdateArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Limitehorarios.
     * @param {limitehorarioDeleteManyArgs} args - Arguments to filter Limitehorarios to delete.
     * @example
     * // Delete a few Limitehorarios
     * const { count } = await prisma.limitehorario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends limitehorarioDeleteManyArgs>(args?: SelectSubset<T, limitehorarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Limitehorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitehorarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Limitehorarios
     * const limitehorario = await prisma.limitehorario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends limitehorarioUpdateManyArgs>(args: SelectSubset<T, limitehorarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Limitehorarios and returns the data updated in the database.
     * @param {limitehorarioUpdateManyAndReturnArgs} args - Arguments to update many Limitehorarios.
     * @example
     * // Update many Limitehorarios
     * const limitehorario = await prisma.limitehorario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Limitehorarios and only return the `clienteid`
     * const limitehorarioWithClienteidOnly = await prisma.limitehorario.updateManyAndReturn({
     *   select: { clienteid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends limitehorarioUpdateManyAndReturnArgs>(args: SelectSubset<T, limitehorarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Limitehorario.
     * @param {limitehorarioUpsertArgs} args - Arguments to update or create a Limitehorario.
     * @example
     * // Update or create a Limitehorario
     * const limitehorario = await prisma.limitehorario.upsert({
     *   create: {
     *     // ... data to create a Limitehorario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Limitehorario we want to update
     *   }
     * })
     */
    upsert<T extends limitehorarioUpsertArgs>(args: SelectSubset<T, limitehorarioUpsertArgs<ExtArgs>>): Prisma__limitehorarioClient<$Result.GetResult<Prisma.$limitehorarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Limitehorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitehorarioCountArgs} args - Arguments to filter Limitehorarios to count.
     * @example
     * // Count the number of Limitehorarios
     * const count = await prisma.limitehorario.count({
     *   where: {
     *     // ... the filter for the Limitehorarios we want to count
     *   }
     * })
    **/
    count<T extends limitehorarioCountArgs>(
      args?: Subset<T, limitehorarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LimitehorarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Limitehorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LimitehorarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LimitehorarioAggregateArgs>(args: Subset<T, LimitehorarioAggregateArgs>): Prisma.PrismaPromise<GetLimitehorarioAggregateType<T>>

    /**
     * Group by Limitehorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitehorarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends limitehorarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: limitehorarioGroupByArgs['orderBy'] }
        : { orderBy?: limitehorarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, limitehorarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLimitehorarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the limitehorario model
   */
  readonly fields: limitehorarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for limitehorario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__limitehorarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends clienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clienteDefaultArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the limitehorario model
   */ 
  interface limitehorarioFieldRefs {
    readonly clienteid: FieldRef<"limitehorario", 'Int'>
    readonly limitediario: FieldRef<"limitehorario", 'Int'>
    readonly limitesemanal: FieldRef<"limitehorario", 'Int'>
    readonly limitemensual: FieldRef<"limitehorario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * limitehorario findUnique
   */
  export type limitehorarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which limitehorario to fetch.
     */
    where: limitehorarioWhereUniqueInput
  }

  /**
   * limitehorario findUniqueOrThrow
   */
  export type limitehorarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which limitehorario to fetch.
     */
    where: limitehorarioWhereUniqueInput
  }

  /**
   * limitehorario findFirst
   */
  export type limitehorarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which limitehorario to fetch.
     */
    where?: limitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitehorarios to fetch.
     */
    orderBy?: limitehorarioOrderByWithRelationInput | limitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for limitehorarios.
     */
    cursor?: limitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of limitehorarios.
     */
    distinct?: LimitehorarioScalarFieldEnum | LimitehorarioScalarFieldEnum[]
  }

  /**
   * limitehorario findFirstOrThrow
   */
  export type limitehorarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which limitehorario to fetch.
     */
    where?: limitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitehorarios to fetch.
     */
    orderBy?: limitehorarioOrderByWithRelationInput | limitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for limitehorarios.
     */
    cursor?: limitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitehorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of limitehorarios.
     */
    distinct?: LimitehorarioScalarFieldEnum | LimitehorarioScalarFieldEnum[]
  }

  /**
   * limitehorario findMany
   */
  export type limitehorarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * Filter, which limitehorarios to fetch.
     */
    where?: limitehorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitehorarios to fetch.
     */
    orderBy?: limitehorarioOrderByWithRelationInput | limitehorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing limitehorarios.
     */
    cursor?: limitehorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitehorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitehorarios.
     */
    skip?: number
    distinct?: LimitehorarioScalarFieldEnum | LimitehorarioScalarFieldEnum[]
  }

  /**
   * limitehorario create
   */
  export type limitehorarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * The data needed to create a limitehorario.
     */
    data: XOR<limitehorarioCreateInput, limitehorarioUncheckedCreateInput>
  }

  /**
   * limitehorario createMany
   */
  export type limitehorarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many limitehorarios.
     */
    data: limitehorarioCreateManyInput | limitehorarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * limitehorario createManyAndReturn
   */
  export type limitehorarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * The data used to create many limitehorarios.
     */
    data: limitehorarioCreateManyInput | limitehorarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * limitehorario update
   */
  export type limitehorarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * The data needed to update a limitehorario.
     */
    data: XOR<limitehorarioUpdateInput, limitehorarioUncheckedUpdateInput>
    /**
     * Choose, which limitehorario to update.
     */
    where: limitehorarioWhereUniqueInput
  }

  /**
   * limitehorario updateMany
   */
  export type limitehorarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update limitehorarios.
     */
    data: XOR<limitehorarioUpdateManyMutationInput, limitehorarioUncheckedUpdateManyInput>
    /**
     * Filter which limitehorarios to update
     */
    where?: limitehorarioWhereInput
    /**
     * Limit how many limitehorarios to update.
     */
    limit?: number
  }

  /**
   * limitehorario updateManyAndReturn
   */
  export type limitehorarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * The data used to update limitehorarios.
     */
    data: XOR<limitehorarioUpdateManyMutationInput, limitehorarioUncheckedUpdateManyInput>
    /**
     * Filter which limitehorarios to update
     */
    where?: limitehorarioWhereInput
    /**
     * Limit how many limitehorarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * limitehorario upsert
   */
  export type limitehorarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * The filter to search for the limitehorario to update in case it exists.
     */
    where: limitehorarioWhereUniqueInput
    /**
     * In case the limitehorario found by the `where` argument doesn't exist, create a new limitehorario with this data.
     */
    create: XOR<limitehorarioCreateInput, limitehorarioUncheckedCreateInput>
    /**
     * In case the limitehorario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<limitehorarioUpdateInput, limitehorarioUncheckedUpdateInput>
  }

  /**
   * limitehorario delete
   */
  export type limitehorarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
    /**
     * Filter which limitehorario to delete.
     */
    where: limitehorarioWhereUniqueInput
  }

  /**
   * limitehorario deleteMany
   */
  export type limitehorarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which limitehorarios to delete
     */
    where?: limitehorarioWhereInput
    /**
     * Limit how many limitehorarios to delete.
     */
    limit?: number
  }

  /**
   * limitehorario without action
   */
  export type limitehorarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitehorario
     */
    select?: limitehorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitehorario
     */
    omit?: limitehorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitehorarioInclude<ExtArgs> | null
  }


  /**
   * Model limitemonetario
   */

  export type AggregateLimitemonetario = {
    _count: LimitemonetarioCountAggregateOutputType | null
    _avg: LimitemonetarioAvgAggregateOutputType | null
    _sum: LimitemonetarioSumAggregateOutputType | null
    _min: LimitemonetarioMinAggregateOutputType | null
    _max: LimitemonetarioMaxAggregateOutputType | null
  }

  export type LimitemonetarioAvgAggregateOutputType = {
    clienteid: number | null
    limitediario: Decimal | null
    limitesemanal: Decimal | null
    limitemensual: Decimal | null
  }

  export type LimitemonetarioSumAggregateOutputType = {
    clienteid: number | null
    limitediario: Decimal | null
    limitesemanal: Decimal | null
    limitemensual: Decimal | null
  }

  export type LimitemonetarioMinAggregateOutputType = {
    clienteid: number | null
    limitediario: Decimal | null
    limitesemanal: Decimal | null
    limitemensual: Decimal | null
  }

  export type LimitemonetarioMaxAggregateOutputType = {
    clienteid: number | null
    limitediario: Decimal | null
    limitesemanal: Decimal | null
    limitemensual: Decimal | null
  }

  export type LimitemonetarioCountAggregateOutputType = {
    clienteid: number
    limitediario: number
    limitesemanal: number
    limitemensual: number
    _all: number
  }


  export type LimitemonetarioAvgAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitemonetarioSumAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitemonetarioMinAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitemonetarioMaxAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
  }

  export type LimitemonetarioCountAggregateInputType = {
    clienteid?: true
    limitediario?: true
    limitesemanal?: true
    limitemensual?: true
    _all?: true
  }

  export type LimitemonetarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which limitemonetario to aggregate.
     */
    where?: limitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitemonetarios to fetch.
     */
    orderBy?: limitemonetarioOrderByWithRelationInput | limitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: limitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitemonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned limitemonetarios
    **/
    _count?: true | LimitemonetarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LimitemonetarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LimitemonetarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LimitemonetarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LimitemonetarioMaxAggregateInputType
  }

  export type GetLimitemonetarioAggregateType<T extends LimitemonetarioAggregateArgs> = {
        [P in keyof T & keyof AggregateLimitemonetario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLimitemonetario[P]>
      : GetScalarType<T[P], AggregateLimitemonetario[P]>
  }




  export type limitemonetarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: limitemonetarioWhereInput
    orderBy?: limitemonetarioOrderByWithAggregationInput | limitemonetarioOrderByWithAggregationInput[]
    by: LimitemonetarioScalarFieldEnum[] | LimitemonetarioScalarFieldEnum
    having?: limitemonetarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LimitemonetarioCountAggregateInputType | true
    _avg?: LimitemonetarioAvgAggregateInputType
    _sum?: LimitemonetarioSumAggregateInputType
    _min?: LimitemonetarioMinAggregateInputType
    _max?: LimitemonetarioMaxAggregateInputType
  }

  export type LimitemonetarioGroupByOutputType = {
    clienteid: number
    limitediario: Decimal | null
    limitesemanal: Decimal | null
    limitemensual: Decimal | null
    _count: LimitemonetarioCountAggregateOutputType | null
    _avg: LimitemonetarioAvgAggregateOutputType | null
    _sum: LimitemonetarioSumAggregateOutputType | null
    _min: LimitemonetarioMinAggregateOutputType | null
    _max: LimitemonetarioMaxAggregateOutputType | null
  }

  type GetLimitemonetarioGroupByPayload<T extends limitemonetarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LimitemonetarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LimitemonetarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LimitemonetarioGroupByOutputType[P]>
            : GetScalarType<T[P], LimitemonetarioGroupByOutputType[P]>
        }
      >
    >


  export type limitemonetarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["limitemonetario"]>

  export type limitemonetarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["limitemonetario"]>

  export type limitemonetarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["limitemonetario"]>

  export type limitemonetarioSelectScalar = {
    clienteid?: boolean
    limitediario?: boolean
    limitesemanal?: boolean
    limitemensual?: boolean
  }

  export type limitemonetarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"clienteid" | "limitediario" | "limitesemanal" | "limitemensual", ExtArgs["result"]["limitemonetario"]>
  export type limitemonetarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type limitemonetarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type limitemonetarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }

  export type $limitemonetarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "limitemonetario"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteid: number
      limitediario: Prisma.Decimal | null
      limitesemanal: Prisma.Decimal | null
      limitemensual: Prisma.Decimal | null
    }, ExtArgs["result"]["limitemonetario"]>
    composites: {}
  }

  type limitemonetarioGetPayload<S extends boolean | null | undefined | limitemonetarioDefaultArgs> = $Result.GetResult<Prisma.$limitemonetarioPayload, S>

  type limitemonetarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<limitemonetarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LimitemonetarioCountAggregateInputType | true
    }

  export interface limitemonetarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['limitemonetario'], meta: { name: 'limitemonetario' } }
    /**
     * Find zero or one Limitemonetario that matches the filter.
     * @param {limitemonetarioFindUniqueArgs} args - Arguments to find a Limitemonetario
     * @example
     * // Get one Limitemonetario
     * const limitemonetario = await prisma.limitemonetario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends limitemonetarioFindUniqueArgs>(args: SelectSubset<T, limitemonetarioFindUniqueArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Limitemonetario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {limitemonetarioFindUniqueOrThrowArgs} args - Arguments to find a Limitemonetario
     * @example
     * // Get one Limitemonetario
     * const limitemonetario = await prisma.limitemonetario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends limitemonetarioFindUniqueOrThrowArgs>(args: SelectSubset<T, limitemonetarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Limitemonetario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitemonetarioFindFirstArgs} args - Arguments to find a Limitemonetario
     * @example
     * // Get one Limitemonetario
     * const limitemonetario = await prisma.limitemonetario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends limitemonetarioFindFirstArgs>(args?: SelectSubset<T, limitemonetarioFindFirstArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Limitemonetario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitemonetarioFindFirstOrThrowArgs} args - Arguments to find a Limitemonetario
     * @example
     * // Get one Limitemonetario
     * const limitemonetario = await prisma.limitemonetario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends limitemonetarioFindFirstOrThrowArgs>(args?: SelectSubset<T, limitemonetarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Limitemonetarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitemonetarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Limitemonetarios
     * const limitemonetarios = await prisma.limitemonetario.findMany()
     * 
     * // Get first 10 Limitemonetarios
     * const limitemonetarios = await prisma.limitemonetario.findMany({ take: 10 })
     * 
     * // Only select the `clienteid`
     * const limitemonetarioWithClienteidOnly = await prisma.limitemonetario.findMany({ select: { clienteid: true } })
     * 
     */
    findMany<T extends limitemonetarioFindManyArgs>(args?: SelectSubset<T, limitemonetarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Limitemonetario.
     * @param {limitemonetarioCreateArgs} args - Arguments to create a Limitemonetario.
     * @example
     * // Create one Limitemonetario
     * const Limitemonetario = await prisma.limitemonetario.create({
     *   data: {
     *     // ... data to create a Limitemonetario
     *   }
     * })
     * 
     */
    create<T extends limitemonetarioCreateArgs>(args: SelectSubset<T, limitemonetarioCreateArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Limitemonetarios.
     * @param {limitemonetarioCreateManyArgs} args - Arguments to create many Limitemonetarios.
     * @example
     * // Create many Limitemonetarios
     * const limitemonetario = await prisma.limitemonetario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends limitemonetarioCreateManyArgs>(args?: SelectSubset<T, limitemonetarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Limitemonetarios and returns the data saved in the database.
     * @param {limitemonetarioCreateManyAndReturnArgs} args - Arguments to create many Limitemonetarios.
     * @example
     * // Create many Limitemonetarios
     * const limitemonetario = await prisma.limitemonetario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Limitemonetarios and only return the `clienteid`
     * const limitemonetarioWithClienteidOnly = await prisma.limitemonetario.createManyAndReturn({
     *   select: { clienteid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends limitemonetarioCreateManyAndReturnArgs>(args?: SelectSubset<T, limitemonetarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Limitemonetario.
     * @param {limitemonetarioDeleteArgs} args - Arguments to delete one Limitemonetario.
     * @example
     * // Delete one Limitemonetario
     * const Limitemonetario = await prisma.limitemonetario.delete({
     *   where: {
     *     // ... filter to delete one Limitemonetario
     *   }
     * })
     * 
     */
    delete<T extends limitemonetarioDeleteArgs>(args: SelectSubset<T, limitemonetarioDeleteArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Limitemonetario.
     * @param {limitemonetarioUpdateArgs} args - Arguments to update one Limitemonetario.
     * @example
     * // Update one Limitemonetario
     * const limitemonetario = await prisma.limitemonetario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends limitemonetarioUpdateArgs>(args: SelectSubset<T, limitemonetarioUpdateArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Limitemonetarios.
     * @param {limitemonetarioDeleteManyArgs} args - Arguments to filter Limitemonetarios to delete.
     * @example
     * // Delete a few Limitemonetarios
     * const { count } = await prisma.limitemonetario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends limitemonetarioDeleteManyArgs>(args?: SelectSubset<T, limitemonetarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Limitemonetarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitemonetarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Limitemonetarios
     * const limitemonetario = await prisma.limitemonetario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends limitemonetarioUpdateManyArgs>(args: SelectSubset<T, limitemonetarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Limitemonetarios and returns the data updated in the database.
     * @param {limitemonetarioUpdateManyAndReturnArgs} args - Arguments to update many Limitemonetarios.
     * @example
     * // Update many Limitemonetarios
     * const limitemonetario = await prisma.limitemonetario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Limitemonetarios and only return the `clienteid`
     * const limitemonetarioWithClienteidOnly = await prisma.limitemonetario.updateManyAndReturn({
     *   select: { clienteid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends limitemonetarioUpdateManyAndReturnArgs>(args: SelectSubset<T, limitemonetarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Limitemonetario.
     * @param {limitemonetarioUpsertArgs} args - Arguments to update or create a Limitemonetario.
     * @example
     * // Update or create a Limitemonetario
     * const limitemonetario = await prisma.limitemonetario.upsert({
     *   create: {
     *     // ... data to create a Limitemonetario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Limitemonetario we want to update
     *   }
     * })
     */
    upsert<T extends limitemonetarioUpsertArgs>(args: SelectSubset<T, limitemonetarioUpsertArgs<ExtArgs>>): Prisma__limitemonetarioClient<$Result.GetResult<Prisma.$limitemonetarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Limitemonetarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitemonetarioCountArgs} args - Arguments to filter Limitemonetarios to count.
     * @example
     * // Count the number of Limitemonetarios
     * const count = await prisma.limitemonetario.count({
     *   where: {
     *     // ... the filter for the Limitemonetarios we want to count
     *   }
     * })
    **/
    count<T extends limitemonetarioCountArgs>(
      args?: Subset<T, limitemonetarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LimitemonetarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Limitemonetario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LimitemonetarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LimitemonetarioAggregateArgs>(args: Subset<T, LimitemonetarioAggregateArgs>): Prisma.PrismaPromise<GetLimitemonetarioAggregateType<T>>

    /**
     * Group by Limitemonetario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {limitemonetarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends limitemonetarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: limitemonetarioGroupByArgs['orderBy'] }
        : { orderBy?: limitemonetarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, limitemonetarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLimitemonetarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the limitemonetario model
   */
  readonly fields: limitemonetarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for limitemonetario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__limitemonetarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends clienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clienteDefaultArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the limitemonetario model
   */ 
  interface limitemonetarioFieldRefs {
    readonly clienteid: FieldRef<"limitemonetario", 'Int'>
    readonly limitediario: FieldRef<"limitemonetario", 'Decimal'>
    readonly limitesemanal: FieldRef<"limitemonetario", 'Decimal'>
    readonly limitemensual: FieldRef<"limitemonetario", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * limitemonetario findUnique
   */
  export type limitemonetarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which limitemonetario to fetch.
     */
    where: limitemonetarioWhereUniqueInput
  }

  /**
   * limitemonetario findUniqueOrThrow
   */
  export type limitemonetarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which limitemonetario to fetch.
     */
    where: limitemonetarioWhereUniqueInput
  }

  /**
   * limitemonetario findFirst
   */
  export type limitemonetarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which limitemonetario to fetch.
     */
    where?: limitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitemonetarios to fetch.
     */
    orderBy?: limitemonetarioOrderByWithRelationInput | limitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for limitemonetarios.
     */
    cursor?: limitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitemonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of limitemonetarios.
     */
    distinct?: LimitemonetarioScalarFieldEnum | LimitemonetarioScalarFieldEnum[]
  }

  /**
   * limitemonetario findFirstOrThrow
   */
  export type limitemonetarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which limitemonetario to fetch.
     */
    where?: limitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitemonetarios to fetch.
     */
    orderBy?: limitemonetarioOrderByWithRelationInput | limitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for limitemonetarios.
     */
    cursor?: limitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitemonetarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of limitemonetarios.
     */
    distinct?: LimitemonetarioScalarFieldEnum | LimitemonetarioScalarFieldEnum[]
  }

  /**
   * limitemonetario findMany
   */
  export type limitemonetarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * Filter, which limitemonetarios to fetch.
     */
    where?: limitemonetarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of limitemonetarios to fetch.
     */
    orderBy?: limitemonetarioOrderByWithRelationInput | limitemonetarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing limitemonetarios.
     */
    cursor?: limitemonetarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` limitemonetarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` limitemonetarios.
     */
    skip?: number
    distinct?: LimitemonetarioScalarFieldEnum | LimitemonetarioScalarFieldEnum[]
  }

  /**
   * limitemonetario create
   */
  export type limitemonetarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * The data needed to create a limitemonetario.
     */
    data: XOR<limitemonetarioCreateInput, limitemonetarioUncheckedCreateInput>
  }

  /**
   * limitemonetario createMany
   */
  export type limitemonetarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many limitemonetarios.
     */
    data: limitemonetarioCreateManyInput | limitemonetarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * limitemonetario createManyAndReturn
   */
  export type limitemonetarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * The data used to create many limitemonetarios.
     */
    data: limitemonetarioCreateManyInput | limitemonetarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * limitemonetario update
   */
  export type limitemonetarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * The data needed to update a limitemonetario.
     */
    data: XOR<limitemonetarioUpdateInput, limitemonetarioUncheckedUpdateInput>
    /**
     * Choose, which limitemonetario to update.
     */
    where: limitemonetarioWhereUniqueInput
  }

  /**
   * limitemonetario updateMany
   */
  export type limitemonetarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update limitemonetarios.
     */
    data: XOR<limitemonetarioUpdateManyMutationInput, limitemonetarioUncheckedUpdateManyInput>
    /**
     * Filter which limitemonetarios to update
     */
    where?: limitemonetarioWhereInput
    /**
     * Limit how many limitemonetarios to update.
     */
    limit?: number
  }

  /**
   * limitemonetario updateManyAndReturn
   */
  export type limitemonetarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * The data used to update limitemonetarios.
     */
    data: XOR<limitemonetarioUpdateManyMutationInput, limitemonetarioUncheckedUpdateManyInput>
    /**
     * Filter which limitemonetarios to update
     */
    where?: limitemonetarioWhereInput
    /**
     * Limit how many limitemonetarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * limitemonetario upsert
   */
  export type limitemonetarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * The filter to search for the limitemonetario to update in case it exists.
     */
    where: limitemonetarioWhereUniqueInput
    /**
     * In case the limitemonetario found by the `where` argument doesn't exist, create a new limitemonetario with this data.
     */
    create: XOR<limitemonetarioCreateInput, limitemonetarioUncheckedCreateInput>
    /**
     * In case the limitemonetario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<limitemonetarioUpdateInput, limitemonetarioUncheckedUpdateInput>
  }

  /**
   * limitemonetario delete
   */
  export type limitemonetarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
    /**
     * Filter which limitemonetario to delete.
     */
    where: limitemonetarioWhereUniqueInput
  }

  /**
   * limitemonetario deleteMany
   */
  export type limitemonetarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which limitemonetarios to delete
     */
    where?: limitemonetarioWhereInput
    /**
     * Limit how many limitemonetarios to delete.
     */
    limit?: number
  }

  /**
   * limitemonetario without action
   */
  export type limitemonetarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the limitemonetario
     */
    select?: limitemonetarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the limitemonetario
     */
    omit?: limitemonetarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: limitemonetarioInclude<ExtArgs> | null
  }


  /**
   * Model mensajes
   */

  export type AggregateMensajes = {
    _count: MensajesCountAggregateOutputType | null
    _avg: MensajesAvgAggregateOutputType | null
    _sum: MensajesSumAggregateOutputType | null
    _min: MensajesMinAggregateOutputType | null
    _max: MensajesMaxAggregateOutputType | null
  }

  export type MensajesAvgAggregateOutputType = {
    ticketid: number | null
  }

  export type MensajesSumAggregateOutputType = {
    ticketid: number | null
  }

  export type MensajesMinAggregateOutputType = {
    ticketid: number | null
    mensaje: string | null
  }

  export type MensajesMaxAggregateOutputType = {
    ticketid: number | null
    mensaje: string | null
  }

  export type MensajesCountAggregateOutputType = {
    ticketid: number
    mensaje: number
    _all: number
  }


  export type MensajesAvgAggregateInputType = {
    ticketid?: true
  }

  export type MensajesSumAggregateInputType = {
    ticketid?: true
  }

  export type MensajesMinAggregateInputType = {
    ticketid?: true
    mensaje?: true
  }

  export type MensajesMaxAggregateInputType = {
    ticketid?: true
    mensaje?: true
  }

  export type MensajesCountAggregateInputType = {
    ticketid?: true
    mensaje?: true
    _all?: true
  }

  export type MensajesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mensajes to aggregate.
     */
    where?: mensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mensajes to fetch.
     */
    orderBy?: mensajesOrderByWithRelationInput | mensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mensajes
    **/
    _count?: true | MensajesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MensajesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MensajesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MensajesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MensajesMaxAggregateInputType
  }

  export type GetMensajesAggregateType<T extends MensajesAggregateArgs> = {
        [P in keyof T & keyof AggregateMensajes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMensajes[P]>
      : GetScalarType<T[P], AggregateMensajes[P]>
  }




  export type mensajesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mensajesWhereInput
    orderBy?: mensajesOrderByWithAggregationInput | mensajesOrderByWithAggregationInput[]
    by: MensajesScalarFieldEnum[] | MensajesScalarFieldEnum
    having?: mensajesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MensajesCountAggregateInputType | true
    _avg?: MensajesAvgAggregateInputType
    _sum?: MensajesSumAggregateInputType
    _min?: MensajesMinAggregateInputType
    _max?: MensajesMaxAggregateInputType
  }

  export type MensajesGroupByOutputType = {
    ticketid: number
    mensaje: string | null
    _count: MensajesCountAggregateOutputType | null
    _avg: MensajesAvgAggregateOutputType | null
    _sum: MensajesSumAggregateOutputType | null
    _min: MensajesMinAggregateOutputType | null
    _max: MensajesMaxAggregateOutputType | null
  }

  type GetMensajesGroupByPayload<T extends mensajesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MensajesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MensajesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MensajesGroupByOutputType[P]>
            : GetScalarType<T[P], MensajesGroupByOutputType[P]>
        }
      >
    >


  export type mensajesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketid?: boolean
    mensaje?: boolean
    tickets?: boolean | ticketsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensajes"]>

  export type mensajesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketid?: boolean
    mensaje?: boolean
    tickets?: boolean | ticketsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensajes"]>

  export type mensajesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketid?: boolean
    mensaje?: boolean
    tickets?: boolean | ticketsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensajes"]>

  export type mensajesSelectScalar = {
    ticketid?: boolean
    mensaje?: boolean
  }

  export type mensajesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ticketid" | "mensaje", ExtArgs["result"]["mensajes"]>
  export type mensajesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tickets?: boolean | ticketsDefaultArgs<ExtArgs>
  }
  export type mensajesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tickets?: boolean | ticketsDefaultArgs<ExtArgs>
  }
  export type mensajesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tickets?: boolean | ticketsDefaultArgs<ExtArgs>
  }

  export type $mensajesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mensajes"
    objects: {
      tickets: Prisma.$ticketsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ticketid: number
      mensaje: string | null
    }, ExtArgs["result"]["mensajes"]>
    composites: {}
  }

  type mensajesGetPayload<S extends boolean | null | undefined | mensajesDefaultArgs> = $Result.GetResult<Prisma.$mensajesPayload, S>

  type mensajesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mensajesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MensajesCountAggregateInputType | true
    }

  export interface mensajesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mensajes'], meta: { name: 'mensajes' } }
    /**
     * Find zero or one Mensajes that matches the filter.
     * @param {mensajesFindUniqueArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mensajesFindUniqueArgs>(args: SelectSubset<T, mensajesFindUniqueArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mensajes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mensajesFindUniqueOrThrowArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mensajesFindUniqueOrThrowArgs>(args: SelectSubset<T, mensajesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mensajesFindFirstArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mensajesFindFirstArgs>(args?: SelectSubset<T, mensajesFindFirstArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensajes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mensajesFindFirstOrThrowArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mensajesFindFirstOrThrowArgs>(args?: SelectSubset<T, mensajesFindFirstOrThrowArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mensajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mensajesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mensajes
     * const mensajes = await prisma.mensajes.findMany()
     * 
     * // Get first 10 Mensajes
     * const mensajes = await prisma.mensajes.findMany({ take: 10 })
     * 
     * // Only select the `ticketid`
     * const mensajesWithTicketidOnly = await prisma.mensajes.findMany({ select: { ticketid: true } })
     * 
     */
    findMany<T extends mensajesFindManyArgs>(args?: SelectSubset<T, mensajesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mensajes.
     * @param {mensajesCreateArgs} args - Arguments to create a Mensajes.
     * @example
     * // Create one Mensajes
     * const Mensajes = await prisma.mensajes.create({
     *   data: {
     *     // ... data to create a Mensajes
     *   }
     * })
     * 
     */
    create<T extends mensajesCreateArgs>(args: SelectSubset<T, mensajesCreateArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mensajes.
     * @param {mensajesCreateManyArgs} args - Arguments to create many Mensajes.
     * @example
     * // Create many Mensajes
     * const mensajes = await prisma.mensajes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mensajesCreateManyArgs>(args?: SelectSubset<T, mensajesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mensajes and returns the data saved in the database.
     * @param {mensajesCreateManyAndReturnArgs} args - Arguments to create many Mensajes.
     * @example
     * // Create many Mensajes
     * const mensajes = await prisma.mensajes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mensajes and only return the `ticketid`
     * const mensajesWithTicketidOnly = await prisma.mensajes.createManyAndReturn({
     *   select: { ticketid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mensajesCreateManyAndReturnArgs>(args?: SelectSubset<T, mensajesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mensajes.
     * @param {mensajesDeleteArgs} args - Arguments to delete one Mensajes.
     * @example
     * // Delete one Mensajes
     * const Mensajes = await prisma.mensajes.delete({
     *   where: {
     *     // ... filter to delete one Mensajes
     *   }
     * })
     * 
     */
    delete<T extends mensajesDeleteArgs>(args: SelectSubset<T, mensajesDeleteArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mensajes.
     * @param {mensajesUpdateArgs} args - Arguments to update one Mensajes.
     * @example
     * // Update one Mensajes
     * const mensajes = await prisma.mensajes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mensajesUpdateArgs>(args: SelectSubset<T, mensajesUpdateArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mensajes.
     * @param {mensajesDeleteManyArgs} args - Arguments to filter Mensajes to delete.
     * @example
     * // Delete a few Mensajes
     * const { count } = await prisma.mensajes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mensajesDeleteManyArgs>(args?: SelectSubset<T, mensajesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mensajesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mensajes
     * const mensajes = await prisma.mensajes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mensajesUpdateManyArgs>(args: SelectSubset<T, mensajesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mensajes and returns the data updated in the database.
     * @param {mensajesUpdateManyAndReturnArgs} args - Arguments to update many Mensajes.
     * @example
     * // Update many Mensajes
     * const mensajes = await prisma.mensajes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mensajes and only return the `ticketid`
     * const mensajesWithTicketidOnly = await prisma.mensajes.updateManyAndReturn({
     *   select: { ticketid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mensajesUpdateManyAndReturnArgs>(args: SelectSubset<T, mensajesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mensajes.
     * @param {mensajesUpsertArgs} args - Arguments to update or create a Mensajes.
     * @example
     * // Update or create a Mensajes
     * const mensajes = await prisma.mensajes.upsert({
     *   create: {
     *     // ... data to create a Mensajes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mensajes we want to update
     *   }
     * })
     */
    upsert<T extends mensajesUpsertArgs>(args: SelectSubset<T, mensajesUpsertArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mensajesCountArgs} args - Arguments to filter Mensajes to count.
     * @example
     * // Count the number of Mensajes
     * const count = await prisma.mensajes.count({
     *   where: {
     *     // ... the filter for the Mensajes we want to count
     *   }
     * })
    **/
    count<T extends mensajesCountArgs>(
      args?: Subset<T, mensajesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MensajesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MensajesAggregateArgs>(args: Subset<T, MensajesAggregateArgs>): Prisma.PrismaPromise<GetMensajesAggregateType<T>>

    /**
     * Group by Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mensajesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mensajesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mensajesGroupByArgs['orderBy'] }
        : { orderBy?: mensajesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mensajesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMensajesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mensajes model
   */
  readonly fields: mensajesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mensajes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mensajesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tickets<T extends ticketsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ticketsDefaultArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mensajes model
   */ 
  interface mensajesFieldRefs {
    readonly ticketid: FieldRef<"mensajes", 'Int'>
    readonly mensaje: FieldRef<"mensajes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * mensajes findUnique
   */
  export type mensajesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * Filter, which mensajes to fetch.
     */
    where: mensajesWhereUniqueInput
  }

  /**
   * mensajes findUniqueOrThrow
   */
  export type mensajesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * Filter, which mensajes to fetch.
     */
    where: mensajesWhereUniqueInput
  }

  /**
   * mensajes findFirst
   */
  export type mensajesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * Filter, which mensajes to fetch.
     */
    where?: mensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mensajes to fetch.
     */
    orderBy?: mensajesOrderByWithRelationInput | mensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mensajes.
     */
    cursor?: mensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mensajes.
     */
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * mensajes findFirstOrThrow
   */
  export type mensajesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * Filter, which mensajes to fetch.
     */
    where?: mensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mensajes to fetch.
     */
    orderBy?: mensajesOrderByWithRelationInput | mensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mensajes.
     */
    cursor?: mensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mensajes.
     */
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * mensajes findMany
   */
  export type mensajesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * Filter, which mensajes to fetch.
     */
    where?: mensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mensajes to fetch.
     */
    orderBy?: mensajesOrderByWithRelationInput | mensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mensajes.
     */
    cursor?: mensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mensajes.
     */
    skip?: number
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * mensajes create
   */
  export type mensajesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * The data needed to create a mensajes.
     */
    data: XOR<mensajesCreateInput, mensajesUncheckedCreateInput>
  }

  /**
   * mensajes createMany
   */
  export type mensajesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mensajes.
     */
    data: mensajesCreateManyInput | mensajesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mensajes createManyAndReturn
   */
  export type mensajesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * The data used to create many mensajes.
     */
    data: mensajesCreateManyInput | mensajesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mensajes update
   */
  export type mensajesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * The data needed to update a mensajes.
     */
    data: XOR<mensajesUpdateInput, mensajesUncheckedUpdateInput>
    /**
     * Choose, which mensajes to update.
     */
    where: mensajesWhereUniqueInput
  }

  /**
   * mensajes updateMany
   */
  export type mensajesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mensajes.
     */
    data: XOR<mensajesUpdateManyMutationInput, mensajesUncheckedUpdateManyInput>
    /**
     * Filter which mensajes to update
     */
    where?: mensajesWhereInput
    /**
     * Limit how many mensajes to update.
     */
    limit?: number
  }

  /**
   * mensajes updateManyAndReturn
   */
  export type mensajesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * The data used to update mensajes.
     */
    data: XOR<mensajesUpdateManyMutationInput, mensajesUncheckedUpdateManyInput>
    /**
     * Filter which mensajes to update
     */
    where?: mensajesWhereInput
    /**
     * Limit how many mensajes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mensajes upsert
   */
  export type mensajesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * The filter to search for the mensajes to update in case it exists.
     */
    where: mensajesWhereUniqueInput
    /**
     * In case the mensajes found by the `where` argument doesn't exist, create a new mensajes with this data.
     */
    create: XOR<mensajesCreateInput, mensajesUncheckedCreateInput>
    /**
     * In case the mensajes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mensajesUpdateInput, mensajesUncheckedUpdateInput>
  }

  /**
   * mensajes delete
   */
  export type mensajesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    /**
     * Filter which mensajes to delete.
     */
    where: mensajesWhereUniqueInput
  }

  /**
   * mensajes deleteMany
   */
  export type mensajesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mensajes to delete
     */
    where?: mensajesWhereInput
    /**
     * Limit how many mensajes to delete.
     */
    limit?: number
  }

  /**
   * mensajes without action
   */
  export type mensajesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
  }


  /**
   * Model partida
   */

  export type AggregatePartida = {
    _count: PartidaCountAggregateOutputType | null
    _avg: PartidaAvgAggregateOutputType | null
    _sum: PartidaSumAggregateOutputType | null
    _min: PartidaMinAggregateOutputType | null
    _max: PartidaMaxAggregateOutputType | null
  }

  export type PartidaAvgAggregateOutputType = {
    partidaid: number | null
    clienteid: number | null
    gananciaperdida: number | null
    apuesta: number | null
  }

  export type PartidaSumAggregateOutputType = {
    partidaid: number | null
    clienteid: number | null
    gananciaperdida: number | null
    apuesta: number | null
  }

  export type PartidaMinAggregateOutputType = {
    partidaid: number | null
    clienteid: number | null
    fecha: Date | null
    gananciaperdida: number | null
    apuesta: number | null
  }

  export type PartidaMaxAggregateOutputType = {
    partidaid: number | null
    clienteid: number | null
    fecha: Date | null
    gananciaperdida: number | null
    apuesta: number | null
  }

  export type PartidaCountAggregateOutputType = {
    partidaid: number
    clienteid: number
    fecha: number
    gananciaperdida: number
    apuesta: number
    _all: number
  }


  export type PartidaAvgAggregateInputType = {
    partidaid?: true
    clienteid?: true
    gananciaperdida?: true
    apuesta?: true
  }

  export type PartidaSumAggregateInputType = {
    partidaid?: true
    clienteid?: true
    gananciaperdida?: true
    apuesta?: true
  }

  export type PartidaMinAggregateInputType = {
    partidaid?: true
    clienteid?: true
    fecha?: true
    gananciaperdida?: true
    apuesta?: true
  }

  export type PartidaMaxAggregateInputType = {
    partidaid?: true
    clienteid?: true
    fecha?: true
    gananciaperdida?: true
    apuesta?: true
  }

  export type PartidaCountAggregateInputType = {
    partidaid?: true
    clienteid?: true
    fecha?: true
    gananciaperdida?: true
    apuesta?: true
    _all?: true
  }

  export type PartidaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which partida to aggregate.
     */
    where?: partidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partidas to fetch.
     */
    orderBy?: partidaOrderByWithRelationInput | partidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: partidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned partidas
    **/
    _count?: true | PartidaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PartidaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PartidaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PartidaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PartidaMaxAggregateInputType
  }

  export type GetPartidaAggregateType<T extends PartidaAggregateArgs> = {
        [P in keyof T & keyof AggregatePartida]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePartida[P]>
      : GetScalarType<T[P], AggregatePartida[P]>
  }




  export type partidaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: partidaWhereInput
    orderBy?: partidaOrderByWithAggregationInput | partidaOrderByWithAggregationInput[]
    by: PartidaScalarFieldEnum[] | PartidaScalarFieldEnum
    having?: partidaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PartidaCountAggregateInputType | true
    _avg?: PartidaAvgAggregateInputType
    _sum?: PartidaSumAggregateInputType
    _min?: PartidaMinAggregateInputType
    _max?: PartidaMaxAggregateInputType
  }

  export type PartidaGroupByOutputType = {
    partidaid: number
    clienteid: number | null
    fecha: Date | null
    gananciaperdida: number | null
    apuesta: number | null
    _count: PartidaCountAggregateOutputType | null
    _avg: PartidaAvgAggregateOutputType | null
    _sum: PartidaSumAggregateOutputType | null
    _min: PartidaMinAggregateOutputType | null
    _max: PartidaMaxAggregateOutputType | null
  }

  type GetPartidaGroupByPayload<T extends partidaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PartidaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PartidaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PartidaGroupByOutputType[P]>
            : GetScalarType<T[P], PartidaGroupByOutputType[P]>
        }
      >
    >


  export type partidaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    partidaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
    jugada?: boolean | partida$jugadaArgs<ExtArgs>
    cliente?: boolean | partida$clienteArgs<ExtArgs>
    _count?: boolean | PartidaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["partida"]>

  export type partidaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    partidaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
    cliente?: boolean | partida$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["partida"]>

  export type partidaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    partidaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
    cliente?: boolean | partida$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["partida"]>

  export type partidaSelectScalar = {
    partidaid?: boolean
    clienteid?: boolean
    fecha?: boolean
    gananciaperdida?: boolean
    apuesta?: boolean
  }

  export type partidaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"partidaid" | "clienteid" | "fecha" | "gananciaperdida" | "apuesta", ExtArgs["result"]["partida"]>
  export type partidaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    jugada?: boolean | partida$jugadaArgs<ExtArgs>
    cliente?: boolean | partida$clienteArgs<ExtArgs>
    _count?: boolean | PartidaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type partidaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | partida$clienteArgs<ExtArgs>
  }
  export type partidaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | partida$clienteArgs<ExtArgs>
  }

  export type $partidaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "partida"
    objects: {
      jugada: Prisma.$jugadaPayload<ExtArgs>[]
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      partidaid: number
      clienteid: number | null
      fecha: Date | null
      gananciaperdida: number | null
      apuesta: number | null
    }, ExtArgs["result"]["partida"]>
    composites: {}
  }

  type partidaGetPayload<S extends boolean | null | undefined | partidaDefaultArgs> = $Result.GetResult<Prisma.$partidaPayload, S>

  type partidaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<partidaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PartidaCountAggregateInputType | true
    }

  export interface partidaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['partida'], meta: { name: 'partida' } }
    /**
     * Find zero or one Partida that matches the filter.
     * @param {partidaFindUniqueArgs} args - Arguments to find a Partida
     * @example
     * // Get one Partida
     * const partida = await prisma.partida.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends partidaFindUniqueArgs>(args: SelectSubset<T, partidaFindUniqueArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Partida that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {partidaFindUniqueOrThrowArgs} args - Arguments to find a Partida
     * @example
     * // Get one Partida
     * const partida = await prisma.partida.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends partidaFindUniqueOrThrowArgs>(args: SelectSubset<T, partidaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Partida that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partidaFindFirstArgs} args - Arguments to find a Partida
     * @example
     * // Get one Partida
     * const partida = await prisma.partida.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends partidaFindFirstArgs>(args?: SelectSubset<T, partidaFindFirstArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Partida that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partidaFindFirstOrThrowArgs} args - Arguments to find a Partida
     * @example
     * // Get one Partida
     * const partida = await prisma.partida.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends partidaFindFirstOrThrowArgs>(args?: SelectSubset<T, partidaFindFirstOrThrowArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Partidas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partidaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Partidas
     * const partidas = await prisma.partida.findMany()
     * 
     * // Get first 10 Partidas
     * const partidas = await prisma.partida.findMany({ take: 10 })
     * 
     * // Only select the `partidaid`
     * const partidaWithPartidaidOnly = await prisma.partida.findMany({ select: { partidaid: true } })
     * 
     */
    findMany<T extends partidaFindManyArgs>(args?: SelectSubset<T, partidaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Partida.
     * @param {partidaCreateArgs} args - Arguments to create a Partida.
     * @example
     * // Create one Partida
     * const Partida = await prisma.partida.create({
     *   data: {
     *     // ... data to create a Partida
     *   }
     * })
     * 
     */
    create<T extends partidaCreateArgs>(args: SelectSubset<T, partidaCreateArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Partidas.
     * @param {partidaCreateManyArgs} args - Arguments to create many Partidas.
     * @example
     * // Create many Partidas
     * const partida = await prisma.partida.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends partidaCreateManyArgs>(args?: SelectSubset<T, partidaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Partidas and returns the data saved in the database.
     * @param {partidaCreateManyAndReturnArgs} args - Arguments to create many Partidas.
     * @example
     * // Create many Partidas
     * const partida = await prisma.partida.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Partidas and only return the `partidaid`
     * const partidaWithPartidaidOnly = await prisma.partida.createManyAndReturn({
     *   select: { partidaid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends partidaCreateManyAndReturnArgs>(args?: SelectSubset<T, partidaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Partida.
     * @param {partidaDeleteArgs} args - Arguments to delete one Partida.
     * @example
     * // Delete one Partida
     * const Partida = await prisma.partida.delete({
     *   where: {
     *     // ... filter to delete one Partida
     *   }
     * })
     * 
     */
    delete<T extends partidaDeleteArgs>(args: SelectSubset<T, partidaDeleteArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Partida.
     * @param {partidaUpdateArgs} args - Arguments to update one Partida.
     * @example
     * // Update one Partida
     * const partida = await prisma.partida.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends partidaUpdateArgs>(args: SelectSubset<T, partidaUpdateArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Partidas.
     * @param {partidaDeleteManyArgs} args - Arguments to filter Partidas to delete.
     * @example
     * // Delete a few Partidas
     * const { count } = await prisma.partida.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends partidaDeleteManyArgs>(args?: SelectSubset<T, partidaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Partidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partidaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Partidas
     * const partida = await prisma.partida.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends partidaUpdateManyArgs>(args: SelectSubset<T, partidaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Partidas and returns the data updated in the database.
     * @param {partidaUpdateManyAndReturnArgs} args - Arguments to update many Partidas.
     * @example
     * // Update many Partidas
     * const partida = await prisma.partida.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Partidas and only return the `partidaid`
     * const partidaWithPartidaidOnly = await prisma.partida.updateManyAndReturn({
     *   select: { partidaid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends partidaUpdateManyAndReturnArgs>(args: SelectSubset<T, partidaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Partida.
     * @param {partidaUpsertArgs} args - Arguments to update or create a Partida.
     * @example
     * // Update or create a Partida
     * const partida = await prisma.partida.upsert({
     *   create: {
     *     // ... data to create a Partida
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Partida we want to update
     *   }
     * })
     */
    upsert<T extends partidaUpsertArgs>(args: SelectSubset<T, partidaUpsertArgs<ExtArgs>>): Prisma__partidaClient<$Result.GetResult<Prisma.$partidaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Partidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partidaCountArgs} args - Arguments to filter Partidas to count.
     * @example
     * // Count the number of Partidas
     * const count = await prisma.partida.count({
     *   where: {
     *     // ... the filter for the Partidas we want to count
     *   }
     * })
    **/
    count<T extends partidaCountArgs>(
      args?: Subset<T, partidaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PartidaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Partida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PartidaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PartidaAggregateArgs>(args: Subset<T, PartidaAggregateArgs>): Prisma.PrismaPromise<GetPartidaAggregateType<T>>

    /**
     * Group by Partida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {partidaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends partidaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: partidaGroupByArgs['orderBy'] }
        : { orderBy?: partidaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, partidaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPartidaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the partida model
   */
  readonly fields: partidaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for partida.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__partidaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    jugada<T extends partida$jugadaArgs<ExtArgs> = {}>(args?: Subset<T, partida$jugadaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jugadaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cliente<T extends partida$clienteArgs<ExtArgs> = {}>(args?: Subset<T, partida$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the partida model
   */ 
  interface partidaFieldRefs {
    readonly partidaid: FieldRef<"partida", 'Int'>
    readonly clienteid: FieldRef<"partida", 'Int'>
    readonly fecha: FieldRef<"partida", 'DateTime'>
    readonly gananciaperdida: FieldRef<"partida", 'Int'>
    readonly apuesta: FieldRef<"partida", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * partida findUnique
   */
  export type partidaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * Filter, which partida to fetch.
     */
    where: partidaWhereUniqueInput
  }

  /**
   * partida findUniqueOrThrow
   */
  export type partidaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * Filter, which partida to fetch.
     */
    where: partidaWhereUniqueInput
  }

  /**
   * partida findFirst
   */
  export type partidaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * Filter, which partida to fetch.
     */
    where?: partidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partidas to fetch.
     */
    orderBy?: partidaOrderByWithRelationInput | partidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for partidas.
     */
    cursor?: partidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of partidas.
     */
    distinct?: PartidaScalarFieldEnum | PartidaScalarFieldEnum[]
  }

  /**
   * partida findFirstOrThrow
   */
  export type partidaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * Filter, which partida to fetch.
     */
    where?: partidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partidas to fetch.
     */
    orderBy?: partidaOrderByWithRelationInput | partidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for partidas.
     */
    cursor?: partidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of partidas.
     */
    distinct?: PartidaScalarFieldEnum | PartidaScalarFieldEnum[]
  }

  /**
   * partida findMany
   */
  export type partidaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * Filter, which partidas to fetch.
     */
    where?: partidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of partidas to fetch.
     */
    orderBy?: partidaOrderByWithRelationInput | partidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing partidas.
     */
    cursor?: partidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` partidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` partidas.
     */
    skip?: number
    distinct?: PartidaScalarFieldEnum | PartidaScalarFieldEnum[]
  }

  /**
   * partida create
   */
  export type partidaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * The data needed to create a partida.
     */
    data?: XOR<partidaCreateInput, partidaUncheckedCreateInput>
  }

  /**
   * partida createMany
   */
  export type partidaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many partidas.
     */
    data: partidaCreateManyInput | partidaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * partida createManyAndReturn
   */
  export type partidaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * The data used to create many partidas.
     */
    data: partidaCreateManyInput | partidaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * partida update
   */
  export type partidaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * The data needed to update a partida.
     */
    data: XOR<partidaUpdateInput, partidaUncheckedUpdateInput>
    /**
     * Choose, which partida to update.
     */
    where: partidaWhereUniqueInput
  }

  /**
   * partida updateMany
   */
  export type partidaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update partidas.
     */
    data: XOR<partidaUpdateManyMutationInput, partidaUncheckedUpdateManyInput>
    /**
     * Filter which partidas to update
     */
    where?: partidaWhereInput
    /**
     * Limit how many partidas to update.
     */
    limit?: number
  }

  /**
   * partida updateManyAndReturn
   */
  export type partidaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * The data used to update partidas.
     */
    data: XOR<partidaUpdateManyMutationInput, partidaUncheckedUpdateManyInput>
    /**
     * Filter which partidas to update
     */
    where?: partidaWhereInput
    /**
     * Limit how many partidas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * partida upsert
   */
  export type partidaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * The filter to search for the partida to update in case it exists.
     */
    where: partidaWhereUniqueInput
    /**
     * In case the partida found by the `where` argument doesn't exist, create a new partida with this data.
     */
    create: XOR<partidaCreateInput, partidaUncheckedCreateInput>
    /**
     * In case the partida was found with the provided `where` argument, update it with this data.
     */
    update: XOR<partidaUpdateInput, partidaUncheckedUpdateInput>
  }

  /**
   * partida delete
   */
  export type partidaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
    /**
     * Filter which partida to delete.
     */
    where: partidaWhereUniqueInput
  }

  /**
   * partida deleteMany
   */
  export type partidaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which partidas to delete
     */
    where?: partidaWhereInput
    /**
     * Limit how many partidas to delete.
     */
    limit?: number
  }

  /**
   * partida.jugada
   */
  export type partida$jugadaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jugada
     */
    select?: jugadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jugada
     */
    omit?: jugadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: jugadaInclude<ExtArgs> | null
    where?: jugadaWhereInput
    orderBy?: jugadaOrderByWithRelationInput | jugadaOrderByWithRelationInput[]
    cursor?: jugadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JugadaScalarFieldEnum | JugadaScalarFieldEnum[]
  }

  /**
   * partida.cliente
   */
  export type partida$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * partida without action
   */
  export type partidaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the partida
     */
    select?: partidaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the partida
     */
    omit?: partidaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: partidaInclude<ExtArgs> | null
  }


  /**
   * Model pausa
   */

  export type AggregatePausa = {
    _count: PausaCountAggregateOutputType | null
    _avg: PausaAvgAggregateOutputType | null
    _sum: PausaSumAggregateOutputType | null
    _min: PausaMinAggregateOutputType | null
    _max: PausaMaxAggregateOutputType | null
  }

  export type PausaAvgAggregateOutputType = {
    clienteid: number | null
    duracion: number | null
  }

  export type PausaSumAggregateOutputType = {
    clienteid: number | null
    duracion: number | null
  }

  export type PausaMinAggregateOutputType = {
    clienteid: number | null
    fechainicio: Date | null
    fechafin: Date | null
    duracion: number | null
  }

  export type PausaMaxAggregateOutputType = {
    clienteid: number | null
    fechainicio: Date | null
    fechafin: Date | null
    duracion: number | null
  }

  export type PausaCountAggregateOutputType = {
    clienteid: number
    fechainicio: number
    fechafin: number
    duracion: number
    _all: number
  }


  export type PausaAvgAggregateInputType = {
    clienteid?: true
    duracion?: true
  }

  export type PausaSumAggregateInputType = {
    clienteid?: true
    duracion?: true
  }

  export type PausaMinAggregateInputType = {
    clienteid?: true
    fechainicio?: true
    fechafin?: true
    duracion?: true
  }

  export type PausaMaxAggregateInputType = {
    clienteid?: true
    fechainicio?: true
    fechafin?: true
    duracion?: true
  }

  export type PausaCountAggregateInputType = {
    clienteid?: true
    fechainicio?: true
    fechafin?: true
    duracion?: true
    _all?: true
  }

  export type PausaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pausa to aggregate.
     */
    where?: pausaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pausas to fetch.
     */
    orderBy?: pausaOrderByWithRelationInput | pausaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pausaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pausas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pausas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pausas
    **/
    _count?: true | PausaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PausaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PausaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PausaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PausaMaxAggregateInputType
  }

  export type GetPausaAggregateType<T extends PausaAggregateArgs> = {
        [P in keyof T & keyof AggregatePausa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePausa[P]>
      : GetScalarType<T[P], AggregatePausa[P]>
  }




  export type pausaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pausaWhereInput
    orderBy?: pausaOrderByWithAggregationInput | pausaOrderByWithAggregationInput[]
    by: PausaScalarFieldEnum[] | PausaScalarFieldEnum
    having?: pausaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PausaCountAggregateInputType | true
    _avg?: PausaAvgAggregateInputType
    _sum?: PausaSumAggregateInputType
    _min?: PausaMinAggregateInputType
    _max?: PausaMaxAggregateInputType
  }

  export type PausaGroupByOutputType = {
    clienteid: number
    fechainicio: Date | null
    fechafin: Date | null
    duracion: number | null
    _count: PausaCountAggregateOutputType | null
    _avg: PausaAvgAggregateOutputType | null
    _sum: PausaSumAggregateOutputType | null
    _min: PausaMinAggregateOutputType | null
    _max: PausaMaxAggregateOutputType | null
  }

  type GetPausaGroupByPayload<T extends pausaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PausaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PausaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PausaGroupByOutputType[P]>
            : GetScalarType<T[P], PausaGroupByOutputType[P]>
        }
      >
    >


  export type pausaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pausa"]>

  export type pausaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pausa"]>

  export type pausaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pausa"]>

  export type pausaSelectScalar = {
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
  }

  export type pausaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"clienteid" | "fechainicio" | "fechafin" | "duracion", ExtArgs["result"]["pausa"]>
  export type pausaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type pausaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type pausaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }

  export type $pausaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pausa"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteid: number
      fechainicio: Date | null
      fechafin: Date | null
      duracion: number | null
    }, ExtArgs["result"]["pausa"]>
    composites: {}
  }

  type pausaGetPayload<S extends boolean | null | undefined | pausaDefaultArgs> = $Result.GetResult<Prisma.$pausaPayload, S>

  type pausaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pausaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PausaCountAggregateInputType | true
    }

  export interface pausaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pausa'], meta: { name: 'pausa' } }
    /**
     * Find zero or one Pausa that matches the filter.
     * @param {pausaFindUniqueArgs} args - Arguments to find a Pausa
     * @example
     * // Get one Pausa
     * const pausa = await prisma.pausa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pausaFindUniqueArgs>(args: SelectSubset<T, pausaFindUniqueArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pausa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pausaFindUniqueOrThrowArgs} args - Arguments to find a Pausa
     * @example
     * // Get one Pausa
     * const pausa = await prisma.pausa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pausaFindUniqueOrThrowArgs>(args: SelectSubset<T, pausaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pausa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pausaFindFirstArgs} args - Arguments to find a Pausa
     * @example
     * // Get one Pausa
     * const pausa = await prisma.pausa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pausaFindFirstArgs>(args?: SelectSubset<T, pausaFindFirstArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pausa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pausaFindFirstOrThrowArgs} args - Arguments to find a Pausa
     * @example
     * // Get one Pausa
     * const pausa = await prisma.pausa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pausaFindFirstOrThrowArgs>(args?: SelectSubset<T, pausaFindFirstOrThrowArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pausas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pausaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pausas
     * const pausas = await prisma.pausa.findMany()
     * 
     * // Get first 10 Pausas
     * const pausas = await prisma.pausa.findMany({ take: 10 })
     * 
     * // Only select the `clienteid`
     * const pausaWithClienteidOnly = await prisma.pausa.findMany({ select: { clienteid: true } })
     * 
     */
    findMany<T extends pausaFindManyArgs>(args?: SelectSubset<T, pausaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pausa.
     * @param {pausaCreateArgs} args - Arguments to create a Pausa.
     * @example
     * // Create one Pausa
     * const Pausa = await prisma.pausa.create({
     *   data: {
     *     // ... data to create a Pausa
     *   }
     * })
     * 
     */
    create<T extends pausaCreateArgs>(args: SelectSubset<T, pausaCreateArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pausas.
     * @param {pausaCreateManyArgs} args - Arguments to create many Pausas.
     * @example
     * // Create many Pausas
     * const pausa = await prisma.pausa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pausaCreateManyArgs>(args?: SelectSubset<T, pausaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pausas and returns the data saved in the database.
     * @param {pausaCreateManyAndReturnArgs} args - Arguments to create many Pausas.
     * @example
     * // Create many Pausas
     * const pausa = await prisma.pausa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pausas and only return the `clienteid`
     * const pausaWithClienteidOnly = await prisma.pausa.createManyAndReturn({
     *   select: { clienteid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pausaCreateManyAndReturnArgs>(args?: SelectSubset<T, pausaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pausa.
     * @param {pausaDeleteArgs} args - Arguments to delete one Pausa.
     * @example
     * // Delete one Pausa
     * const Pausa = await prisma.pausa.delete({
     *   where: {
     *     // ... filter to delete one Pausa
     *   }
     * })
     * 
     */
    delete<T extends pausaDeleteArgs>(args: SelectSubset<T, pausaDeleteArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pausa.
     * @param {pausaUpdateArgs} args - Arguments to update one Pausa.
     * @example
     * // Update one Pausa
     * const pausa = await prisma.pausa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pausaUpdateArgs>(args: SelectSubset<T, pausaUpdateArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pausas.
     * @param {pausaDeleteManyArgs} args - Arguments to filter Pausas to delete.
     * @example
     * // Delete a few Pausas
     * const { count } = await prisma.pausa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pausaDeleteManyArgs>(args?: SelectSubset<T, pausaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pausas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pausaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pausas
     * const pausa = await prisma.pausa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pausaUpdateManyArgs>(args: SelectSubset<T, pausaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pausas and returns the data updated in the database.
     * @param {pausaUpdateManyAndReturnArgs} args - Arguments to update many Pausas.
     * @example
     * // Update many Pausas
     * const pausa = await prisma.pausa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pausas and only return the `clienteid`
     * const pausaWithClienteidOnly = await prisma.pausa.updateManyAndReturn({
     *   select: { clienteid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pausaUpdateManyAndReturnArgs>(args: SelectSubset<T, pausaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pausa.
     * @param {pausaUpsertArgs} args - Arguments to update or create a Pausa.
     * @example
     * // Update or create a Pausa
     * const pausa = await prisma.pausa.upsert({
     *   create: {
     *     // ... data to create a Pausa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pausa we want to update
     *   }
     * })
     */
    upsert<T extends pausaUpsertArgs>(args: SelectSubset<T, pausaUpsertArgs<ExtArgs>>): Prisma__pausaClient<$Result.GetResult<Prisma.$pausaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pausas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pausaCountArgs} args - Arguments to filter Pausas to count.
     * @example
     * // Count the number of Pausas
     * const count = await prisma.pausa.count({
     *   where: {
     *     // ... the filter for the Pausas we want to count
     *   }
     * })
    **/
    count<T extends pausaCountArgs>(
      args?: Subset<T, pausaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PausaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pausa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PausaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PausaAggregateArgs>(args: Subset<T, PausaAggregateArgs>): Prisma.PrismaPromise<GetPausaAggregateType<T>>

    /**
     * Group by Pausa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pausaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pausaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pausaGroupByArgs['orderBy'] }
        : { orderBy?: pausaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pausaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPausaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pausa model
   */
  readonly fields: pausaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pausa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pausaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends clienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clienteDefaultArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pausa model
   */ 
  interface pausaFieldRefs {
    readonly clienteid: FieldRef<"pausa", 'Int'>
    readonly fechainicio: FieldRef<"pausa", 'DateTime'>
    readonly fechafin: FieldRef<"pausa", 'DateTime'>
    readonly duracion: FieldRef<"pausa", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * pausa findUnique
   */
  export type pausaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * Filter, which pausa to fetch.
     */
    where: pausaWhereUniqueInput
  }

  /**
   * pausa findUniqueOrThrow
   */
  export type pausaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * Filter, which pausa to fetch.
     */
    where: pausaWhereUniqueInput
  }

  /**
   * pausa findFirst
   */
  export type pausaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * Filter, which pausa to fetch.
     */
    where?: pausaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pausas to fetch.
     */
    orderBy?: pausaOrderByWithRelationInput | pausaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pausas.
     */
    cursor?: pausaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pausas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pausas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pausas.
     */
    distinct?: PausaScalarFieldEnum | PausaScalarFieldEnum[]
  }

  /**
   * pausa findFirstOrThrow
   */
  export type pausaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * Filter, which pausa to fetch.
     */
    where?: pausaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pausas to fetch.
     */
    orderBy?: pausaOrderByWithRelationInput | pausaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pausas.
     */
    cursor?: pausaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pausas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pausas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pausas.
     */
    distinct?: PausaScalarFieldEnum | PausaScalarFieldEnum[]
  }

  /**
   * pausa findMany
   */
  export type pausaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * Filter, which pausas to fetch.
     */
    where?: pausaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pausas to fetch.
     */
    orderBy?: pausaOrderByWithRelationInput | pausaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pausas.
     */
    cursor?: pausaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pausas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pausas.
     */
    skip?: number
    distinct?: PausaScalarFieldEnum | PausaScalarFieldEnum[]
  }

  /**
   * pausa create
   */
  export type pausaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * The data needed to create a pausa.
     */
    data: XOR<pausaCreateInput, pausaUncheckedCreateInput>
  }

  /**
   * pausa createMany
   */
  export type pausaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pausas.
     */
    data: pausaCreateManyInput | pausaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pausa createManyAndReturn
   */
  export type pausaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * The data used to create many pausas.
     */
    data: pausaCreateManyInput | pausaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pausa update
   */
  export type pausaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * The data needed to update a pausa.
     */
    data: XOR<pausaUpdateInput, pausaUncheckedUpdateInput>
    /**
     * Choose, which pausa to update.
     */
    where: pausaWhereUniqueInput
  }

  /**
   * pausa updateMany
   */
  export type pausaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pausas.
     */
    data: XOR<pausaUpdateManyMutationInput, pausaUncheckedUpdateManyInput>
    /**
     * Filter which pausas to update
     */
    where?: pausaWhereInput
    /**
     * Limit how many pausas to update.
     */
    limit?: number
  }

  /**
   * pausa updateManyAndReturn
   */
  export type pausaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * The data used to update pausas.
     */
    data: XOR<pausaUpdateManyMutationInput, pausaUncheckedUpdateManyInput>
    /**
     * Filter which pausas to update
     */
    where?: pausaWhereInput
    /**
     * Limit how many pausas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pausa upsert
   */
  export type pausaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * The filter to search for the pausa to update in case it exists.
     */
    where: pausaWhereUniqueInput
    /**
     * In case the pausa found by the `where` argument doesn't exist, create a new pausa with this data.
     */
    create: XOR<pausaCreateInput, pausaUncheckedCreateInput>
    /**
     * In case the pausa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pausaUpdateInput, pausaUncheckedUpdateInput>
  }

  /**
   * pausa delete
   */
  export type pausaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
    /**
     * Filter which pausa to delete.
     */
    where: pausaWhereUniqueInput
  }

  /**
   * pausa deleteMany
   */
  export type pausaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pausas to delete
     */
    where?: pausaWhereInput
    /**
     * Limit how many pausas to delete.
     */
    limit?: number
  }

  /**
   * pausa without action
   */
  export type pausaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pausa
     */
    select?: pausaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pausa
     */
    omit?: pausaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pausaInclude<ExtArgs> | null
  }


  /**
   * Model promocion
   */

  export type AggregatePromocion = {
    _count: PromocionCountAggregateOutputType | null
    _avg: PromocionAvgAggregateOutputType | null
    _sum: PromocionSumAggregateOutputType | null
    _min: PromocionMinAggregateOutputType | null
    _max: PromocionMaxAggregateOutputType | null
  }

  export type PromocionAvgAggregateOutputType = {
    promocionid: number | null
    cantidadusos: number | null
    mincarga: Decimal | null
    maxcarga: Decimal | null
  }

  export type PromocionSumAggregateOutputType = {
    promocionid: number | null
    cantidadusos: number | null
    mincarga: Decimal | null
    maxcarga: Decimal | null
  }

  export type PromocionMinAggregateOutputType = {
    promocionid: number | null
    tipo: string | null
    descripcion: string | null
    fechainicio: Date | null
    fechafin: Date | null
    cantidadusos: number | null
    mincarga: Decimal | null
    maxcarga: Decimal | null
  }

  export type PromocionMaxAggregateOutputType = {
    promocionid: number | null
    tipo: string | null
    descripcion: string | null
    fechainicio: Date | null
    fechafin: Date | null
    cantidadusos: number | null
    mincarga: Decimal | null
    maxcarga: Decimal | null
  }

  export type PromocionCountAggregateOutputType = {
    promocionid: number
    tipo: number
    descripcion: number
    fechainicio: number
    fechafin: number
    cantidadusos: number
    mincarga: number
    maxcarga: number
    _all: number
  }


  export type PromocionAvgAggregateInputType = {
    promocionid?: true
    cantidadusos?: true
    mincarga?: true
    maxcarga?: true
  }

  export type PromocionSumAggregateInputType = {
    promocionid?: true
    cantidadusos?: true
    mincarga?: true
    maxcarga?: true
  }

  export type PromocionMinAggregateInputType = {
    promocionid?: true
    tipo?: true
    descripcion?: true
    fechainicio?: true
    fechafin?: true
    cantidadusos?: true
    mincarga?: true
    maxcarga?: true
  }

  export type PromocionMaxAggregateInputType = {
    promocionid?: true
    tipo?: true
    descripcion?: true
    fechainicio?: true
    fechafin?: true
    cantidadusos?: true
    mincarga?: true
    maxcarga?: true
  }

  export type PromocionCountAggregateInputType = {
    promocionid?: true
    tipo?: true
    descripcion?: true
    fechainicio?: true
    fechafin?: true
    cantidadusos?: true
    mincarga?: true
    maxcarga?: true
    _all?: true
  }

  export type PromocionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promocion to aggregate.
     */
    where?: promocionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocions to fetch.
     */
    orderBy?: promocionOrderByWithRelationInput | promocionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: promocionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned promocions
    **/
    _count?: true | PromocionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromocionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromocionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromocionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromocionMaxAggregateInputType
  }

  export type GetPromocionAggregateType<T extends PromocionAggregateArgs> = {
        [P in keyof T & keyof AggregatePromocion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromocion[P]>
      : GetScalarType<T[P], AggregatePromocion[P]>
  }




  export type promocionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promocionWhereInput
    orderBy?: promocionOrderByWithAggregationInput | promocionOrderByWithAggregationInput[]
    by: PromocionScalarFieldEnum[] | PromocionScalarFieldEnum
    having?: promocionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromocionCountAggregateInputType | true
    _avg?: PromocionAvgAggregateInputType
    _sum?: PromocionSumAggregateInputType
    _min?: PromocionMinAggregateInputType
    _max?: PromocionMaxAggregateInputType
  }

  export type PromocionGroupByOutputType = {
    promocionid: number
    tipo: string | null
    descripcion: string | null
    fechainicio: Date | null
    fechafin: Date | null
    cantidadusos: number | null
    mincarga: Decimal | null
    maxcarga: Decimal | null
    _count: PromocionCountAggregateOutputType | null
    _avg: PromocionAvgAggregateOutputType | null
    _sum: PromocionSumAggregateOutputType | null
    _min: PromocionMinAggregateOutputType | null
    _max: PromocionMaxAggregateOutputType | null
  }

  type GetPromocionGroupByPayload<T extends promocionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromocionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromocionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromocionGroupByOutputType[P]>
            : GetScalarType<T[P], PromocionGroupByOutputType[P]>
        }
      >
    >


  export type promocionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    promocionid?: boolean
    tipo?: boolean
    descripcion?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    cantidadusos?: boolean
    mincarga?: boolean
    maxcarga?: boolean
  }, ExtArgs["result"]["promocion"]>

  export type promocionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    promocionid?: boolean
    tipo?: boolean
    descripcion?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    cantidadusos?: boolean
    mincarga?: boolean
    maxcarga?: boolean
  }, ExtArgs["result"]["promocion"]>

  export type promocionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    promocionid?: boolean
    tipo?: boolean
    descripcion?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    cantidadusos?: boolean
    mincarga?: boolean
    maxcarga?: boolean
  }, ExtArgs["result"]["promocion"]>

  export type promocionSelectScalar = {
    promocionid?: boolean
    tipo?: boolean
    descripcion?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    cantidadusos?: boolean
    mincarga?: boolean
    maxcarga?: boolean
  }

  export type promocionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"promocionid" | "tipo" | "descripcion" | "fechainicio" | "fechafin" | "cantidadusos" | "mincarga" | "maxcarga", ExtArgs["result"]["promocion"]>

  export type $promocionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "promocion"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      promocionid: number
      tipo: string | null
      descripcion: string | null
      fechainicio: Date | null
      fechafin: Date | null
      cantidadusos: number | null
      mincarga: Prisma.Decimal | null
      maxcarga: Prisma.Decimal | null
    }, ExtArgs["result"]["promocion"]>
    composites: {}
  }

  type promocionGetPayload<S extends boolean | null | undefined | promocionDefaultArgs> = $Result.GetResult<Prisma.$promocionPayload, S>

  type promocionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<promocionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromocionCountAggregateInputType | true
    }

  export interface promocionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['promocion'], meta: { name: 'promocion' } }
    /**
     * Find zero or one Promocion that matches the filter.
     * @param {promocionFindUniqueArgs} args - Arguments to find a Promocion
     * @example
     * // Get one Promocion
     * const promocion = await prisma.promocion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends promocionFindUniqueArgs>(args: SelectSubset<T, promocionFindUniqueArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promocion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {promocionFindUniqueOrThrowArgs} args - Arguments to find a Promocion
     * @example
     * // Get one Promocion
     * const promocion = await prisma.promocion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends promocionFindUniqueOrThrowArgs>(args: SelectSubset<T, promocionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promocion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionFindFirstArgs} args - Arguments to find a Promocion
     * @example
     * // Get one Promocion
     * const promocion = await prisma.promocion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends promocionFindFirstArgs>(args?: SelectSubset<T, promocionFindFirstArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promocion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionFindFirstOrThrowArgs} args - Arguments to find a Promocion
     * @example
     * // Get one Promocion
     * const promocion = await prisma.promocion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends promocionFindFirstOrThrowArgs>(args?: SelectSubset<T, promocionFindFirstOrThrowArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promocions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promocions
     * const promocions = await prisma.promocion.findMany()
     * 
     * // Get first 10 Promocions
     * const promocions = await prisma.promocion.findMany({ take: 10 })
     * 
     * // Only select the `promocionid`
     * const promocionWithPromocionidOnly = await prisma.promocion.findMany({ select: { promocionid: true } })
     * 
     */
    findMany<T extends promocionFindManyArgs>(args?: SelectSubset<T, promocionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promocion.
     * @param {promocionCreateArgs} args - Arguments to create a Promocion.
     * @example
     * // Create one Promocion
     * const Promocion = await prisma.promocion.create({
     *   data: {
     *     // ... data to create a Promocion
     *   }
     * })
     * 
     */
    create<T extends promocionCreateArgs>(args: SelectSubset<T, promocionCreateArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promocions.
     * @param {promocionCreateManyArgs} args - Arguments to create many Promocions.
     * @example
     * // Create many Promocions
     * const promocion = await prisma.promocion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends promocionCreateManyArgs>(args?: SelectSubset<T, promocionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promocions and returns the data saved in the database.
     * @param {promocionCreateManyAndReturnArgs} args - Arguments to create many Promocions.
     * @example
     * // Create many Promocions
     * const promocion = await prisma.promocion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promocions and only return the `promocionid`
     * const promocionWithPromocionidOnly = await prisma.promocion.createManyAndReturn({
     *   select: { promocionid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends promocionCreateManyAndReturnArgs>(args?: SelectSubset<T, promocionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Promocion.
     * @param {promocionDeleteArgs} args - Arguments to delete one Promocion.
     * @example
     * // Delete one Promocion
     * const Promocion = await prisma.promocion.delete({
     *   where: {
     *     // ... filter to delete one Promocion
     *   }
     * })
     * 
     */
    delete<T extends promocionDeleteArgs>(args: SelectSubset<T, promocionDeleteArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promocion.
     * @param {promocionUpdateArgs} args - Arguments to update one Promocion.
     * @example
     * // Update one Promocion
     * const promocion = await prisma.promocion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends promocionUpdateArgs>(args: SelectSubset<T, promocionUpdateArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promocions.
     * @param {promocionDeleteManyArgs} args - Arguments to filter Promocions to delete.
     * @example
     * // Delete a few Promocions
     * const { count } = await prisma.promocion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends promocionDeleteManyArgs>(args?: SelectSubset<T, promocionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promocions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promocions
     * const promocion = await prisma.promocion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends promocionUpdateManyArgs>(args: SelectSubset<T, promocionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promocions and returns the data updated in the database.
     * @param {promocionUpdateManyAndReturnArgs} args - Arguments to update many Promocions.
     * @example
     * // Update many Promocions
     * const promocion = await prisma.promocion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Promocions and only return the `promocionid`
     * const promocionWithPromocionidOnly = await prisma.promocion.updateManyAndReturn({
     *   select: { promocionid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends promocionUpdateManyAndReturnArgs>(args: SelectSubset<T, promocionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Promocion.
     * @param {promocionUpsertArgs} args - Arguments to update or create a Promocion.
     * @example
     * // Update or create a Promocion
     * const promocion = await prisma.promocion.upsert({
     *   create: {
     *     // ... data to create a Promocion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promocion we want to update
     *   }
     * })
     */
    upsert<T extends promocionUpsertArgs>(args: SelectSubset<T, promocionUpsertArgs<ExtArgs>>): Prisma__promocionClient<$Result.GetResult<Prisma.$promocionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promocions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionCountArgs} args - Arguments to filter Promocions to count.
     * @example
     * // Count the number of Promocions
     * const count = await prisma.promocion.count({
     *   where: {
     *     // ... the filter for the Promocions we want to count
     *   }
     * })
    **/
    count<T extends promocionCountArgs>(
      args?: Subset<T, promocionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromocionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promocion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromocionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromocionAggregateArgs>(args: Subset<T, PromocionAggregateArgs>): Prisma.PrismaPromise<GetPromocionAggregateType<T>>

    /**
     * Group by Promocion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promocionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends promocionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: promocionGroupByArgs['orderBy'] }
        : { orderBy?: promocionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, promocionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromocionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the promocion model
   */
  readonly fields: promocionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for promocion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__promocionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the promocion model
   */ 
  interface promocionFieldRefs {
    readonly promocionid: FieldRef<"promocion", 'Int'>
    readonly tipo: FieldRef<"promocion", 'String'>
    readonly descripcion: FieldRef<"promocion", 'String'>
    readonly fechainicio: FieldRef<"promocion", 'DateTime'>
    readonly fechafin: FieldRef<"promocion", 'DateTime'>
    readonly cantidadusos: FieldRef<"promocion", 'Int'>
    readonly mincarga: FieldRef<"promocion", 'Decimal'>
    readonly maxcarga: FieldRef<"promocion", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * promocion findUnique
   */
  export type promocionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * Filter, which promocion to fetch.
     */
    where: promocionWhereUniqueInput
  }

  /**
   * promocion findUniqueOrThrow
   */
  export type promocionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * Filter, which promocion to fetch.
     */
    where: promocionWhereUniqueInput
  }

  /**
   * promocion findFirst
   */
  export type promocionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * Filter, which promocion to fetch.
     */
    where?: promocionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocions to fetch.
     */
    orderBy?: promocionOrderByWithRelationInput | promocionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promocions.
     */
    cursor?: promocionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promocions.
     */
    distinct?: PromocionScalarFieldEnum | PromocionScalarFieldEnum[]
  }

  /**
   * promocion findFirstOrThrow
   */
  export type promocionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * Filter, which promocion to fetch.
     */
    where?: promocionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocions to fetch.
     */
    orderBy?: promocionOrderByWithRelationInput | promocionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promocions.
     */
    cursor?: promocionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promocions.
     */
    distinct?: PromocionScalarFieldEnum | PromocionScalarFieldEnum[]
  }

  /**
   * promocion findMany
   */
  export type promocionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * Filter, which promocions to fetch.
     */
    where?: promocionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promocions to fetch.
     */
    orderBy?: promocionOrderByWithRelationInput | promocionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing promocions.
     */
    cursor?: promocionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promocions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promocions.
     */
    skip?: number
    distinct?: PromocionScalarFieldEnum | PromocionScalarFieldEnum[]
  }

  /**
   * promocion create
   */
  export type promocionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * The data needed to create a promocion.
     */
    data?: XOR<promocionCreateInput, promocionUncheckedCreateInput>
  }

  /**
   * promocion createMany
   */
  export type promocionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many promocions.
     */
    data: promocionCreateManyInput | promocionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promocion createManyAndReturn
   */
  export type promocionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * The data used to create many promocions.
     */
    data: promocionCreateManyInput | promocionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promocion update
   */
  export type promocionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * The data needed to update a promocion.
     */
    data: XOR<promocionUpdateInput, promocionUncheckedUpdateInput>
    /**
     * Choose, which promocion to update.
     */
    where: promocionWhereUniqueInput
  }

  /**
   * promocion updateMany
   */
  export type promocionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update promocions.
     */
    data: XOR<promocionUpdateManyMutationInput, promocionUncheckedUpdateManyInput>
    /**
     * Filter which promocions to update
     */
    where?: promocionWhereInput
    /**
     * Limit how many promocions to update.
     */
    limit?: number
  }

  /**
   * promocion updateManyAndReturn
   */
  export type promocionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * The data used to update promocions.
     */
    data: XOR<promocionUpdateManyMutationInput, promocionUncheckedUpdateManyInput>
    /**
     * Filter which promocions to update
     */
    where?: promocionWhereInput
    /**
     * Limit how many promocions to update.
     */
    limit?: number
  }

  /**
   * promocion upsert
   */
  export type promocionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * The filter to search for the promocion to update in case it exists.
     */
    where: promocionWhereUniqueInput
    /**
     * In case the promocion found by the `where` argument doesn't exist, create a new promocion with this data.
     */
    create: XOR<promocionCreateInput, promocionUncheckedCreateInput>
    /**
     * In case the promocion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<promocionUpdateInput, promocionUncheckedUpdateInput>
  }

  /**
   * promocion delete
   */
  export type promocionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
    /**
     * Filter which promocion to delete.
     */
    where: promocionWhereUniqueInput
  }

  /**
   * promocion deleteMany
   */
  export type promocionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promocions to delete
     */
    where?: promocionWhereInput
    /**
     * Limit how many promocions to delete.
     */
    limit?: number
  }

  /**
   * promocion without action
   */
  export type promocionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promocion
     */
    select?: promocionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promocion
     */
    omit?: promocionOmit<ExtArgs> | null
  }


  /**
   * Model suspendidos
   */

  export type AggregateSuspendidos = {
    _count: SuspendidosCountAggregateOutputType | null
    _avg: SuspendidosAvgAggregateOutputType | null
    _sum: SuspendidosSumAggregateOutputType | null
    _min: SuspendidosMinAggregateOutputType | null
    _max: SuspendidosMaxAggregateOutputType | null
  }

  export type SuspendidosAvgAggregateOutputType = {
    suspendidoid: number | null
    clienteid: number | null
    duracion: number | null
    adminid: number | null
  }

  export type SuspendidosSumAggregateOutputType = {
    suspendidoid: number | null
    clienteid: number | null
    duracion: number | null
    adminid: number | null
  }

  export type SuspendidosMinAggregateOutputType = {
    suspendidoid: number | null
    clienteid: number | null
    fechainicio: Date | null
    fechafin: Date | null
    duracion: number | null
    adminid: number | null
    razon: string | null
  }

  export type SuspendidosMaxAggregateOutputType = {
    suspendidoid: number | null
    clienteid: number | null
    fechainicio: Date | null
    fechafin: Date | null
    duracion: number | null
    adminid: number | null
    razon: string | null
  }

  export type SuspendidosCountAggregateOutputType = {
    suspendidoid: number
    clienteid: number
    fechainicio: number
    fechafin: number
    duracion: number
    adminid: number
    razon: number
    _all: number
  }


  export type SuspendidosAvgAggregateInputType = {
    suspendidoid?: true
    clienteid?: true
    duracion?: true
    adminid?: true
  }

  export type SuspendidosSumAggregateInputType = {
    suspendidoid?: true
    clienteid?: true
    duracion?: true
    adminid?: true
  }

  export type SuspendidosMinAggregateInputType = {
    suspendidoid?: true
    clienteid?: true
    fechainicio?: true
    fechafin?: true
    duracion?: true
    adminid?: true
    razon?: true
  }

  export type SuspendidosMaxAggregateInputType = {
    suspendidoid?: true
    clienteid?: true
    fechainicio?: true
    fechafin?: true
    duracion?: true
    adminid?: true
    razon?: true
  }

  export type SuspendidosCountAggregateInputType = {
    suspendidoid?: true
    clienteid?: true
    fechainicio?: true
    fechafin?: true
    duracion?: true
    adminid?: true
    razon?: true
    _all?: true
  }

  export type SuspendidosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which suspendidos to aggregate.
     */
    where?: suspendidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suspendidos to fetch.
     */
    orderBy?: suspendidosOrderByWithRelationInput | suspendidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: suspendidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suspendidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suspendidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned suspendidos
    **/
    _count?: true | SuspendidosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SuspendidosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SuspendidosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SuspendidosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SuspendidosMaxAggregateInputType
  }

  export type GetSuspendidosAggregateType<T extends SuspendidosAggregateArgs> = {
        [P in keyof T & keyof AggregateSuspendidos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSuspendidos[P]>
      : GetScalarType<T[P], AggregateSuspendidos[P]>
  }




  export type suspendidosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: suspendidosWhereInput
    orderBy?: suspendidosOrderByWithAggregationInput | suspendidosOrderByWithAggregationInput[]
    by: SuspendidosScalarFieldEnum[] | SuspendidosScalarFieldEnum
    having?: suspendidosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SuspendidosCountAggregateInputType | true
    _avg?: SuspendidosAvgAggregateInputType
    _sum?: SuspendidosSumAggregateInputType
    _min?: SuspendidosMinAggregateInputType
    _max?: SuspendidosMaxAggregateInputType
  }

  export type SuspendidosGroupByOutputType = {
    suspendidoid: number
    clienteid: number | null
    fechainicio: Date | null
    fechafin: Date | null
    duracion: number | null
    adminid: number | null
    razon: string | null
    _count: SuspendidosCountAggregateOutputType | null
    _avg: SuspendidosAvgAggregateOutputType | null
    _sum: SuspendidosSumAggregateOutputType | null
    _min: SuspendidosMinAggregateOutputType | null
    _max: SuspendidosMaxAggregateOutputType | null
  }

  type GetSuspendidosGroupByPayload<T extends suspendidosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SuspendidosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SuspendidosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SuspendidosGroupByOutputType[P]>
            : GetScalarType<T[P], SuspendidosGroupByOutputType[P]>
        }
      >
    >


  export type suspendidosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    suspendidoid?: boolean
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
    adminid?: boolean
    razon?: boolean
    administrador?: boolean | suspendidos$administradorArgs<ExtArgs>
    cliente?: boolean | suspendidos$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["suspendidos"]>

  export type suspendidosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    suspendidoid?: boolean
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
    adminid?: boolean
    razon?: boolean
    administrador?: boolean | suspendidos$administradorArgs<ExtArgs>
    cliente?: boolean | suspendidos$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["suspendidos"]>

  export type suspendidosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    suspendidoid?: boolean
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
    adminid?: boolean
    razon?: boolean
    administrador?: boolean | suspendidos$administradorArgs<ExtArgs>
    cliente?: boolean | suspendidos$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["suspendidos"]>

  export type suspendidosSelectScalar = {
    suspendidoid?: boolean
    clienteid?: boolean
    fechainicio?: boolean
    fechafin?: boolean
    duracion?: boolean
    adminid?: boolean
    razon?: boolean
  }

  export type suspendidosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"suspendidoid" | "clienteid" | "fechainicio" | "fechafin" | "duracion" | "adminid" | "razon", ExtArgs["result"]["suspendidos"]>
  export type suspendidosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | suspendidos$administradorArgs<ExtArgs>
    cliente?: boolean | suspendidos$clienteArgs<ExtArgs>
  }
  export type suspendidosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | suspendidos$administradorArgs<ExtArgs>
    cliente?: boolean | suspendidos$clienteArgs<ExtArgs>
  }
  export type suspendidosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | suspendidos$administradorArgs<ExtArgs>
    cliente?: boolean | suspendidos$clienteArgs<ExtArgs>
  }

  export type $suspendidosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "suspendidos"
    objects: {
      administrador: Prisma.$administradorPayload<ExtArgs> | null
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      suspendidoid: number
      clienteid: number | null
      fechainicio: Date | null
      fechafin: Date | null
      duracion: number | null
      adminid: number | null
      razon: string | null
    }, ExtArgs["result"]["suspendidos"]>
    composites: {}
  }

  type suspendidosGetPayload<S extends boolean | null | undefined | suspendidosDefaultArgs> = $Result.GetResult<Prisma.$suspendidosPayload, S>

  type suspendidosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<suspendidosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SuspendidosCountAggregateInputType | true
    }

  export interface suspendidosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['suspendidos'], meta: { name: 'suspendidos' } }
    /**
     * Find zero or one Suspendidos that matches the filter.
     * @param {suspendidosFindUniqueArgs} args - Arguments to find a Suspendidos
     * @example
     * // Get one Suspendidos
     * const suspendidos = await prisma.suspendidos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends suspendidosFindUniqueArgs>(args: SelectSubset<T, suspendidosFindUniqueArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Suspendidos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {suspendidosFindUniqueOrThrowArgs} args - Arguments to find a Suspendidos
     * @example
     * // Get one Suspendidos
     * const suspendidos = await prisma.suspendidos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends suspendidosFindUniqueOrThrowArgs>(args: SelectSubset<T, suspendidosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Suspendidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suspendidosFindFirstArgs} args - Arguments to find a Suspendidos
     * @example
     * // Get one Suspendidos
     * const suspendidos = await prisma.suspendidos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends suspendidosFindFirstArgs>(args?: SelectSubset<T, suspendidosFindFirstArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Suspendidos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suspendidosFindFirstOrThrowArgs} args - Arguments to find a Suspendidos
     * @example
     * // Get one Suspendidos
     * const suspendidos = await prisma.suspendidos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends suspendidosFindFirstOrThrowArgs>(args?: SelectSubset<T, suspendidosFindFirstOrThrowArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Suspendidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suspendidosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Suspendidos
     * const suspendidos = await prisma.suspendidos.findMany()
     * 
     * // Get first 10 Suspendidos
     * const suspendidos = await prisma.suspendidos.findMany({ take: 10 })
     * 
     * // Only select the `suspendidoid`
     * const suspendidosWithSuspendidoidOnly = await prisma.suspendidos.findMany({ select: { suspendidoid: true } })
     * 
     */
    findMany<T extends suspendidosFindManyArgs>(args?: SelectSubset<T, suspendidosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Suspendidos.
     * @param {suspendidosCreateArgs} args - Arguments to create a Suspendidos.
     * @example
     * // Create one Suspendidos
     * const Suspendidos = await prisma.suspendidos.create({
     *   data: {
     *     // ... data to create a Suspendidos
     *   }
     * })
     * 
     */
    create<T extends suspendidosCreateArgs>(args: SelectSubset<T, suspendidosCreateArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Suspendidos.
     * @param {suspendidosCreateManyArgs} args - Arguments to create many Suspendidos.
     * @example
     * // Create many Suspendidos
     * const suspendidos = await prisma.suspendidos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends suspendidosCreateManyArgs>(args?: SelectSubset<T, suspendidosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Suspendidos and returns the data saved in the database.
     * @param {suspendidosCreateManyAndReturnArgs} args - Arguments to create many Suspendidos.
     * @example
     * // Create many Suspendidos
     * const suspendidos = await prisma.suspendidos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Suspendidos and only return the `suspendidoid`
     * const suspendidosWithSuspendidoidOnly = await prisma.suspendidos.createManyAndReturn({
     *   select: { suspendidoid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends suspendidosCreateManyAndReturnArgs>(args?: SelectSubset<T, suspendidosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Suspendidos.
     * @param {suspendidosDeleteArgs} args - Arguments to delete one Suspendidos.
     * @example
     * // Delete one Suspendidos
     * const Suspendidos = await prisma.suspendidos.delete({
     *   where: {
     *     // ... filter to delete one Suspendidos
     *   }
     * })
     * 
     */
    delete<T extends suspendidosDeleteArgs>(args: SelectSubset<T, suspendidosDeleteArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Suspendidos.
     * @param {suspendidosUpdateArgs} args - Arguments to update one Suspendidos.
     * @example
     * // Update one Suspendidos
     * const suspendidos = await prisma.suspendidos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends suspendidosUpdateArgs>(args: SelectSubset<T, suspendidosUpdateArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Suspendidos.
     * @param {suspendidosDeleteManyArgs} args - Arguments to filter Suspendidos to delete.
     * @example
     * // Delete a few Suspendidos
     * const { count } = await prisma.suspendidos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends suspendidosDeleteManyArgs>(args?: SelectSubset<T, suspendidosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suspendidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suspendidosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Suspendidos
     * const suspendidos = await prisma.suspendidos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends suspendidosUpdateManyArgs>(args: SelectSubset<T, suspendidosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suspendidos and returns the data updated in the database.
     * @param {suspendidosUpdateManyAndReturnArgs} args - Arguments to update many Suspendidos.
     * @example
     * // Update many Suspendidos
     * const suspendidos = await prisma.suspendidos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Suspendidos and only return the `suspendidoid`
     * const suspendidosWithSuspendidoidOnly = await prisma.suspendidos.updateManyAndReturn({
     *   select: { suspendidoid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends suspendidosUpdateManyAndReturnArgs>(args: SelectSubset<T, suspendidosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Suspendidos.
     * @param {suspendidosUpsertArgs} args - Arguments to update or create a Suspendidos.
     * @example
     * // Update or create a Suspendidos
     * const suspendidos = await prisma.suspendidos.upsert({
     *   create: {
     *     // ... data to create a Suspendidos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Suspendidos we want to update
     *   }
     * })
     */
    upsert<T extends suspendidosUpsertArgs>(args: SelectSubset<T, suspendidosUpsertArgs<ExtArgs>>): Prisma__suspendidosClient<$Result.GetResult<Prisma.$suspendidosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Suspendidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suspendidosCountArgs} args - Arguments to filter Suspendidos to count.
     * @example
     * // Count the number of Suspendidos
     * const count = await prisma.suspendidos.count({
     *   where: {
     *     // ... the filter for the Suspendidos we want to count
     *   }
     * })
    **/
    count<T extends suspendidosCountArgs>(
      args?: Subset<T, suspendidosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SuspendidosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Suspendidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SuspendidosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SuspendidosAggregateArgs>(args: Subset<T, SuspendidosAggregateArgs>): Prisma.PrismaPromise<GetSuspendidosAggregateType<T>>

    /**
     * Group by Suspendidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {suspendidosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends suspendidosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: suspendidosGroupByArgs['orderBy'] }
        : { orderBy?: suspendidosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, suspendidosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSuspendidosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the suspendidos model
   */
  readonly fields: suspendidosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for suspendidos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__suspendidosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    administrador<T extends suspendidos$administradorArgs<ExtArgs> = {}>(args?: Subset<T, suspendidos$administradorArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cliente<T extends suspendidos$clienteArgs<ExtArgs> = {}>(args?: Subset<T, suspendidos$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the suspendidos model
   */ 
  interface suspendidosFieldRefs {
    readonly suspendidoid: FieldRef<"suspendidos", 'Int'>
    readonly clienteid: FieldRef<"suspendidos", 'Int'>
    readonly fechainicio: FieldRef<"suspendidos", 'DateTime'>
    readonly fechafin: FieldRef<"suspendidos", 'DateTime'>
    readonly duracion: FieldRef<"suspendidos", 'Int'>
    readonly adminid: FieldRef<"suspendidos", 'Int'>
    readonly razon: FieldRef<"suspendidos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * suspendidos findUnique
   */
  export type suspendidosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * Filter, which suspendidos to fetch.
     */
    where: suspendidosWhereUniqueInput
  }

  /**
   * suspendidos findUniqueOrThrow
   */
  export type suspendidosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * Filter, which suspendidos to fetch.
     */
    where: suspendidosWhereUniqueInput
  }

  /**
   * suspendidos findFirst
   */
  export type suspendidosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * Filter, which suspendidos to fetch.
     */
    where?: suspendidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suspendidos to fetch.
     */
    orderBy?: suspendidosOrderByWithRelationInput | suspendidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for suspendidos.
     */
    cursor?: suspendidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suspendidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suspendidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of suspendidos.
     */
    distinct?: SuspendidosScalarFieldEnum | SuspendidosScalarFieldEnum[]
  }

  /**
   * suspendidos findFirstOrThrow
   */
  export type suspendidosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * Filter, which suspendidos to fetch.
     */
    where?: suspendidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suspendidos to fetch.
     */
    orderBy?: suspendidosOrderByWithRelationInput | suspendidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for suspendidos.
     */
    cursor?: suspendidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suspendidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suspendidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of suspendidos.
     */
    distinct?: SuspendidosScalarFieldEnum | SuspendidosScalarFieldEnum[]
  }

  /**
   * suspendidos findMany
   */
  export type suspendidosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * Filter, which suspendidos to fetch.
     */
    where?: suspendidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of suspendidos to fetch.
     */
    orderBy?: suspendidosOrderByWithRelationInput | suspendidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing suspendidos.
     */
    cursor?: suspendidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` suspendidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` suspendidos.
     */
    skip?: number
    distinct?: SuspendidosScalarFieldEnum | SuspendidosScalarFieldEnum[]
  }

  /**
   * suspendidos create
   */
  export type suspendidosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * The data needed to create a suspendidos.
     */
    data?: XOR<suspendidosCreateInput, suspendidosUncheckedCreateInput>
  }

  /**
   * suspendidos createMany
   */
  export type suspendidosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many suspendidos.
     */
    data: suspendidosCreateManyInput | suspendidosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * suspendidos createManyAndReturn
   */
  export type suspendidosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * The data used to create many suspendidos.
     */
    data: suspendidosCreateManyInput | suspendidosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * suspendidos update
   */
  export type suspendidosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * The data needed to update a suspendidos.
     */
    data: XOR<suspendidosUpdateInput, suspendidosUncheckedUpdateInput>
    /**
     * Choose, which suspendidos to update.
     */
    where: suspendidosWhereUniqueInput
  }

  /**
   * suspendidos updateMany
   */
  export type suspendidosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update suspendidos.
     */
    data: XOR<suspendidosUpdateManyMutationInput, suspendidosUncheckedUpdateManyInput>
    /**
     * Filter which suspendidos to update
     */
    where?: suspendidosWhereInput
    /**
     * Limit how many suspendidos to update.
     */
    limit?: number
  }

  /**
   * suspendidos updateManyAndReturn
   */
  export type suspendidosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * The data used to update suspendidos.
     */
    data: XOR<suspendidosUpdateManyMutationInput, suspendidosUncheckedUpdateManyInput>
    /**
     * Filter which suspendidos to update
     */
    where?: suspendidosWhereInput
    /**
     * Limit how many suspendidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * suspendidos upsert
   */
  export type suspendidosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * The filter to search for the suspendidos to update in case it exists.
     */
    where: suspendidosWhereUniqueInput
    /**
     * In case the suspendidos found by the `where` argument doesn't exist, create a new suspendidos with this data.
     */
    create: XOR<suspendidosCreateInput, suspendidosUncheckedCreateInput>
    /**
     * In case the suspendidos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<suspendidosUpdateInput, suspendidosUncheckedUpdateInput>
  }

  /**
   * suspendidos delete
   */
  export type suspendidosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
    /**
     * Filter which suspendidos to delete.
     */
    where: suspendidosWhereUniqueInput
  }

  /**
   * suspendidos deleteMany
   */
  export type suspendidosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which suspendidos to delete
     */
    where?: suspendidosWhereInput
    /**
     * Limit how many suspendidos to delete.
     */
    limit?: number
  }

  /**
   * suspendidos.administrador
   */
  export type suspendidos$administradorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    where?: administradorWhereInput
  }

  /**
   * suspendidos.cliente
   */
  export type suspendidos$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * suspendidos without action
   */
  export type suspendidosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the suspendidos
     */
    select?: suspendidosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the suspendidos
     */
    omit?: suspendidosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: suspendidosInclude<ExtArgs> | null
  }


  /**
   * Model tickets
   */

  export type AggregateTickets = {
    _count: TicketsCountAggregateOutputType | null
    _avg: TicketsAvgAggregateOutputType | null
    _sum: TicketsSumAggregateOutputType | null
    _min: TicketsMinAggregateOutputType | null
    _max: TicketsMaxAggregateOutputType | null
  }

  export type TicketsAvgAggregateOutputType = {
    ticketid: number | null
    clienteid: number | null
    idadmin: number | null
  }

  export type TicketsSumAggregateOutputType = {
    ticketid: number | null
    clienteid: number | null
    idadmin: number | null
  }

  export type TicketsMinAggregateOutputType = {
    ticketid: number | null
    clienteid: number | null
    problema: string | null
    resuelto: boolean | null
    idadmin: number | null
  }

  export type TicketsMaxAggregateOutputType = {
    ticketid: number | null
    clienteid: number | null
    problema: string | null
    resuelto: boolean | null
    idadmin: number | null
  }

  export type TicketsCountAggregateOutputType = {
    ticketid: number
    clienteid: number
    problema: number
    resuelto: number
    idadmin: number
    _all: number
  }


  export type TicketsAvgAggregateInputType = {
    ticketid?: true
    clienteid?: true
    idadmin?: true
  }

  export type TicketsSumAggregateInputType = {
    ticketid?: true
    clienteid?: true
    idadmin?: true
  }

  export type TicketsMinAggregateInputType = {
    ticketid?: true
    clienteid?: true
    problema?: true
    resuelto?: true
    idadmin?: true
  }

  export type TicketsMaxAggregateInputType = {
    ticketid?: true
    clienteid?: true
    problema?: true
    resuelto?: true
    idadmin?: true
  }

  export type TicketsCountAggregateInputType = {
    ticketid?: true
    clienteid?: true
    problema?: true
    resuelto?: true
    idadmin?: true
    _all?: true
  }

  export type TicketsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tickets to aggregate.
     */
    where?: ticketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketsOrderByWithRelationInput | ticketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ticketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tickets
    **/
    _count?: true | TicketsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketsMaxAggregateInputType
  }

  export type GetTicketsAggregateType<T extends TicketsAggregateArgs> = {
        [P in keyof T & keyof AggregateTickets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTickets[P]>
      : GetScalarType<T[P], AggregateTickets[P]>
  }




  export type ticketsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ticketsWhereInput
    orderBy?: ticketsOrderByWithAggregationInput | ticketsOrderByWithAggregationInput[]
    by: TicketsScalarFieldEnum[] | TicketsScalarFieldEnum
    having?: ticketsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketsCountAggregateInputType | true
    _avg?: TicketsAvgAggregateInputType
    _sum?: TicketsSumAggregateInputType
    _min?: TicketsMinAggregateInputType
    _max?: TicketsMaxAggregateInputType
  }

  export type TicketsGroupByOutputType = {
    ticketid: number
    clienteid: number | null
    problema: string | null
    resuelto: boolean | null
    idadmin: number | null
    _count: TicketsCountAggregateOutputType | null
    _avg: TicketsAvgAggregateOutputType | null
    _sum: TicketsSumAggregateOutputType | null
    _min: TicketsMinAggregateOutputType | null
    _max: TicketsMaxAggregateOutputType | null
  }

  type GetTicketsGroupByPayload<T extends ticketsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketsGroupByOutputType[P]>
            : GetScalarType<T[P], TicketsGroupByOutputType[P]>
        }
      >
    >


  export type ticketsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketid?: boolean
    clienteid?: boolean
    problema?: boolean
    resuelto?: boolean
    idadmin?: boolean
    mensajes?: boolean | tickets$mensajesArgs<ExtArgs>
    cliente?: boolean | tickets$clienteArgs<ExtArgs>
    administrador?: boolean | tickets$administradorArgs<ExtArgs>
  }, ExtArgs["result"]["tickets"]>

  export type ticketsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketid?: boolean
    clienteid?: boolean
    problema?: boolean
    resuelto?: boolean
    idadmin?: boolean
    cliente?: boolean | tickets$clienteArgs<ExtArgs>
    administrador?: boolean | tickets$administradorArgs<ExtArgs>
  }, ExtArgs["result"]["tickets"]>

  export type ticketsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ticketid?: boolean
    clienteid?: boolean
    problema?: boolean
    resuelto?: boolean
    idadmin?: boolean
    cliente?: boolean | tickets$clienteArgs<ExtArgs>
    administrador?: boolean | tickets$administradorArgs<ExtArgs>
  }, ExtArgs["result"]["tickets"]>

  export type ticketsSelectScalar = {
    ticketid?: boolean
    clienteid?: boolean
    problema?: boolean
    resuelto?: boolean
    idadmin?: boolean
  }

  export type ticketsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ticketid" | "clienteid" | "problema" | "resuelto" | "idadmin", ExtArgs["result"]["tickets"]>
  export type ticketsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mensajes?: boolean | tickets$mensajesArgs<ExtArgs>
    cliente?: boolean | tickets$clienteArgs<ExtArgs>
    administrador?: boolean | tickets$administradorArgs<ExtArgs>
  }
  export type ticketsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | tickets$clienteArgs<ExtArgs>
    administrador?: boolean | tickets$administradorArgs<ExtArgs>
  }
  export type ticketsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | tickets$clienteArgs<ExtArgs>
    administrador?: boolean | tickets$administradorArgs<ExtArgs>
  }

  export type $ticketsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tickets"
    objects: {
      mensajes: Prisma.$mensajesPayload<ExtArgs> | null
      cliente: Prisma.$clientePayload<ExtArgs> | null
      administrador: Prisma.$administradorPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      ticketid: number
      clienteid: number | null
      problema: string | null
      resuelto: boolean | null
      idadmin: number | null
    }, ExtArgs["result"]["tickets"]>
    composites: {}
  }

  type ticketsGetPayload<S extends boolean | null | undefined | ticketsDefaultArgs> = $Result.GetResult<Prisma.$ticketsPayload, S>

  type ticketsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ticketsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketsCountAggregateInputType | true
    }

  export interface ticketsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tickets'], meta: { name: 'tickets' } }
    /**
     * Find zero or one Tickets that matches the filter.
     * @param {ticketsFindUniqueArgs} args - Arguments to find a Tickets
     * @example
     * // Get one Tickets
     * const tickets = await prisma.tickets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ticketsFindUniqueArgs>(args: SelectSubset<T, ticketsFindUniqueArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tickets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ticketsFindUniqueOrThrowArgs} args - Arguments to find a Tickets
     * @example
     * // Get one Tickets
     * const tickets = await prisma.tickets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ticketsFindUniqueOrThrowArgs>(args: SelectSubset<T, ticketsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketsFindFirstArgs} args - Arguments to find a Tickets
     * @example
     * // Get one Tickets
     * const tickets = await prisma.tickets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ticketsFindFirstArgs>(args?: SelectSubset<T, ticketsFindFirstArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tickets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketsFindFirstOrThrowArgs} args - Arguments to find a Tickets
     * @example
     * // Get one Tickets
     * const tickets = await prisma.tickets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ticketsFindFirstOrThrowArgs>(args?: SelectSubset<T, ticketsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tickets
     * const tickets = await prisma.tickets.findMany()
     * 
     * // Get first 10 Tickets
     * const tickets = await prisma.tickets.findMany({ take: 10 })
     * 
     * // Only select the `ticketid`
     * const ticketsWithTicketidOnly = await prisma.tickets.findMany({ select: { ticketid: true } })
     * 
     */
    findMany<T extends ticketsFindManyArgs>(args?: SelectSubset<T, ticketsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tickets.
     * @param {ticketsCreateArgs} args - Arguments to create a Tickets.
     * @example
     * // Create one Tickets
     * const Tickets = await prisma.tickets.create({
     *   data: {
     *     // ... data to create a Tickets
     *   }
     * })
     * 
     */
    create<T extends ticketsCreateArgs>(args: SelectSubset<T, ticketsCreateArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tickets.
     * @param {ticketsCreateManyArgs} args - Arguments to create many Tickets.
     * @example
     * // Create many Tickets
     * const tickets = await prisma.tickets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ticketsCreateManyArgs>(args?: SelectSubset<T, ticketsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tickets and returns the data saved in the database.
     * @param {ticketsCreateManyAndReturnArgs} args - Arguments to create many Tickets.
     * @example
     * // Create many Tickets
     * const tickets = await prisma.tickets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tickets and only return the `ticketid`
     * const ticketsWithTicketidOnly = await prisma.tickets.createManyAndReturn({
     *   select: { ticketid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ticketsCreateManyAndReturnArgs>(args?: SelectSubset<T, ticketsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tickets.
     * @param {ticketsDeleteArgs} args - Arguments to delete one Tickets.
     * @example
     * // Delete one Tickets
     * const Tickets = await prisma.tickets.delete({
     *   where: {
     *     // ... filter to delete one Tickets
     *   }
     * })
     * 
     */
    delete<T extends ticketsDeleteArgs>(args: SelectSubset<T, ticketsDeleteArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tickets.
     * @param {ticketsUpdateArgs} args - Arguments to update one Tickets.
     * @example
     * // Update one Tickets
     * const tickets = await prisma.tickets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ticketsUpdateArgs>(args: SelectSubset<T, ticketsUpdateArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tickets.
     * @param {ticketsDeleteManyArgs} args - Arguments to filter Tickets to delete.
     * @example
     * // Delete a few Tickets
     * const { count } = await prisma.tickets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ticketsDeleteManyArgs>(args?: SelectSubset<T, ticketsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tickets
     * const tickets = await prisma.tickets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ticketsUpdateManyArgs>(args: SelectSubset<T, ticketsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets and returns the data updated in the database.
     * @param {ticketsUpdateManyAndReturnArgs} args - Arguments to update many Tickets.
     * @example
     * // Update many Tickets
     * const tickets = await prisma.tickets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tickets and only return the `ticketid`
     * const ticketsWithTicketidOnly = await prisma.tickets.updateManyAndReturn({
     *   select: { ticketid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ticketsUpdateManyAndReturnArgs>(args: SelectSubset<T, ticketsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tickets.
     * @param {ticketsUpsertArgs} args - Arguments to update or create a Tickets.
     * @example
     * // Update or create a Tickets
     * const tickets = await prisma.tickets.upsert({
     *   create: {
     *     // ... data to create a Tickets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tickets we want to update
     *   }
     * })
     */
    upsert<T extends ticketsUpsertArgs>(args: SelectSubset<T, ticketsUpsertArgs<ExtArgs>>): Prisma__ticketsClient<$Result.GetResult<Prisma.$ticketsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketsCountArgs} args - Arguments to filter Tickets to count.
     * @example
     * // Count the number of Tickets
     * const count = await prisma.tickets.count({
     *   where: {
     *     // ... the filter for the Tickets we want to count
     *   }
     * })
    **/
    count<T extends ticketsCountArgs>(
      args?: Subset<T, ticketsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketsAggregateArgs>(args: Subset<T, TicketsAggregateArgs>): Prisma.PrismaPromise<GetTicketsAggregateType<T>>

    /**
     * Group by Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ticketsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ticketsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ticketsGroupByArgs['orderBy'] }
        : { orderBy?: ticketsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ticketsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tickets model
   */
  readonly fields: ticketsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tickets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ticketsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mensajes<T extends tickets$mensajesArgs<ExtArgs> = {}>(args?: Subset<T, tickets$mensajesArgs<ExtArgs>>): Prisma__mensajesClient<$Result.GetResult<Prisma.$mensajesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cliente<T extends tickets$clienteArgs<ExtArgs> = {}>(args?: Subset<T, tickets$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    administrador<T extends tickets$administradorArgs<ExtArgs> = {}>(args?: Subset<T, tickets$administradorArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tickets model
   */ 
  interface ticketsFieldRefs {
    readonly ticketid: FieldRef<"tickets", 'Int'>
    readonly clienteid: FieldRef<"tickets", 'Int'>
    readonly problema: FieldRef<"tickets", 'String'>
    readonly resuelto: FieldRef<"tickets", 'Boolean'>
    readonly idadmin: FieldRef<"tickets", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tickets findUnique
   */
  export type ticketsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * Filter, which tickets to fetch.
     */
    where: ticketsWhereUniqueInput
  }

  /**
   * tickets findUniqueOrThrow
   */
  export type ticketsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * Filter, which tickets to fetch.
     */
    where: ticketsWhereUniqueInput
  }

  /**
   * tickets findFirst
   */
  export type ticketsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * Filter, which tickets to fetch.
     */
    where?: ticketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketsOrderByWithRelationInput | ticketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tickets.
     */
    cursor?: ticketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tickets.
     */
    distinct?: TicketsScalarFieldEnum | TicketsScalarFieldEnum[]
  }

  /**
   * tickets findFirstOrThrow
   */
  export type ticketsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * Filter, which tickets to fetch.
     */
    where?: ticketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketsOrderByWithRelationInput | ticketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tickets.
     */
    cursor?: ticketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tickets.
     */
    distinct?: TicketsScalarFieldEnum | TicketsScalarFieldEnum[]
  }

  /**
   * tickets findMany
   */
  export type ticketsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * Filter, which tickets to fetch.
     */
    where?: ticketsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tickets to fetch.
     */
    orderBy?: ticketsOrderByWithRelationInput | ticketsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tickets.
     */
    cursor?: ticketsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tickets.
     */
    skip?: number
    distinct?: TicketsScalarFieldEnum | TicketsScalarFieldEnum[]
  }

  /**
   * tickets create
   */
  export type ticketsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * The data needed to create a tickets.
     */
    data?: XOR<ticketsCreateInput, ticketsUncheckedCreateInput>
  }

  /**
   * tickets createMany
   */
  export type ticketsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tickets.
     */
    data: ticketsCreateManyInput | ticketsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tickets createManyAndReturn
   */
  export type ticketsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * The data used to create many tickets.
     */
    data: ticketsCreateManyInput | ticketsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tickets update
   */
  export type ticketsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * The data needed to update a tickets.
     */
    data: XOR<ticketsUpdateInput, ticketsUncheckedUpdateInput>
    /**
     * Choose, which tickets to update.
     */
    where: ticketsWhereUniqueInput
  }

  /**
   * tickets updateMany
   */
  export type ticketsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tickets.
     */
    data: XOR<ticketsUpdateManyMutationInput, ticketsUncheckedUpdateManyInput>
    /**
     * Filter which tickets to update
     */
    where?: ticketsWhereInput
    /**
     * Limit how many tickets to update.
     */
    limit?: number
  }

  /**
   * tickets updateManyAndReturn
   */
  export type ticketsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * The data used to update tickets.
     */
    data: XOR<ticketsUpdateManyMutationInput, ticketsUncheckedUpdateManyInput>
    /**
     * Filter which tickets to update
     */
    where?: ticketsWhereInput
    /**
     * Limit how many tickets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * tickets upsert
   */
  export type ticketsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * The filter to search for the tickets to update in case it exists.
     */
    where: ticketsWhereUniqueInput
    /**
     * In case the tickets found by the `where` argument doesn't exist, create a new tickets with this data.
     */
    create: XOR<ticketsCreateInput, ticketsUncheckedCreateInput>
    /**
     * In case the tickets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ticketsUpdateInput, ticketsUncheckedUpdateInput>
  }

  /**
   * tickets delete
   */
  export type ticketsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
    /**
     * Filter which tickets to delete.
     */
    where: ticketsWhereUniqueInput
  }

  /**
   * tickets deleteMany
   */
  export type ticketsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tickets to delete
     */
    where?: ticketsWhereInput
    /**
     * Limit how many tickets to delete.
     */
    limit?: number
  }

  /**
   * tickets.mensajes
   */
  export type tickets$mensajesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mensajes
     */
    select?: mensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mensajes
     */
    omit?: mensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mensajesInclude<ExtArgs> | null
    where?: mensajesWhereInput
  }

  /**
   * tickets.cliente
   */
  export type tickets$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * tickets.administrador
   */
  export type tickets$administradorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    where?: administradorWhereInput
  }

  /**
   * tickets without action
   */
  export type ticketsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tickets
     */
    select?: ticketsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tickets
     */
    omit?: ticketsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ticketsInclude<ExtArgs> | null
  }


  /**
   * Model tiempodejuego
   */

  export type AggregateTiempodejuego = {
    _count: TiempodejuegoCountAggregateOutputType | null
    _avg: TiempodejuegoAvgAggregateOutputType | null
    _sum: TiempodejuegoSumAggregateOutputType | null
    _min: TiempodejuegoMinAggregateOutputType | null
    _max: TiempodejuegoMaxAggregateOutputType | null
  }

  export type TiempodejuegoAvgAggregateOutputType = {
    clienteid: number | null
    tiempo: number | null
  }

  export type TiempodejuegoSumAggregateOutputType = {
    clienteid: number | null
    tiempo: number | null
  }

  export type TiempodejuegoMinAggregateOutputType = {
    clienteid: number | null
    fecha: Date | null
    tiempo: number | null
  }

  export type TiempodejuegoMaxAggregateOutputType = {
    clienteid: number | null
    fecha: Date | null
    tiempo: number | null
  }

  export type TiempodejuegoCountAggregateOutputType = {
    clienteid: number
    fecha: number
    tiempo: number
    _all: number
  }


  export type TiempodejuegoAvgAggregateInputType = {
    clienteid?: true
    tiempo?: true
  }

  export type TiempodejuegoSumAggregateInputType = {
    clienteid?: true
    tiempo?: true
  }

  export type TiempodejuegoMinAggregateInputType = {
    clienteid?: true
    fecha?: true
    tiempo?: true
  }

  export type TiempodejuegoMaxAggregateInputType = {
    clienteid?: true
    fecha?: true
    tiempo?: true
  }

  export type TiempodejuegoCountAggregateInputType = {
    clienteid?: true
    fecha?: true
    tiempo?: true
    _all?: true
  }

  export type TiempodejuegoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tiempodejuego to aggregate.
     */
    where?: tiempodejuegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiempodejuegos to fetch.
     */
    orderBy?: tiempodejuegoOrderByWithRelationInput | tiempodejuegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tiempodejuegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiempodejuegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiempodejuegos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tiempodejuegos
    **/
    _count?: true | TiempodejuegoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TiempodejuegoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TiempodejuegoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TiempodejuegoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TiempodejuegoMaxAggregateInputType
  }

  export type GetTiempodejuegoAggregateType<T extends TiempodejuegoAggregateArgs> = {
        [P in keyof T & keyof AggregateTiempodejuego]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTiempodejuego[P]>
      : GetScalarType<T[P], AggregateTiempodejuego[P]>
  }




  export type tiempodejuegoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tiempodejuegoWhereInput
    orderBy?: tiempodejuegoOrderByWithAggregationInput | tiempodejuegoOrderByWithAggregationInput[]
    by: TiempodejuegoScalarFieldEnum[] | TiempodejuegoScalarFieldEnum
    having?: tiempodejuegoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TiempodejuegoCountAggregateInputType | true
    _avg?: TiempodejuegoAvgAggregateInputType
    _sum?: TiempodejuegoSumAggregateInputType
    _min?: TiempodejuegoMinAggregateInputType
    _max?: TiempodejuegoMaxAggregateInputType
  }

  export type TiempodejuegoGroupByOutputType = {
    clienteid: number
    fecha: Date
    tiempo: number | null
    _count: TiempodejuegoCountAggregateOutputType | null
    _avg: TiempodejuegoAvgAggregateOutputType | null
    _sum: TiempodejuegoSumAggregateOutputType | null
    _min: TiempodejuegoMinAggregateOutputType | null
    _max: TiempodejuegoMaxAggregateOutputType | null
  }

  type GetTiempodejuegoGroupByPayload<T extends tiempodejuegoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TiempodejuegoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TiempodejuegoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TiempodejuegoGroupByOutputType[P]>
            : GetScalarType<T[P], TiempodejuegoGroupByOutputType[P]>
        }
      >
    >


  export type tiempodejuegoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    fecha?: boolean
    tiempo?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tiempodejuego"]>

  export type tiempodejuegoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    fecha?: boolean
    tiempo?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tiempodejuego"]>

  export type tiempodejuegoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteid?: boolean
    fecha?: boolean
    tiempo?: boolean
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tiempodejuego"]>

  export type tiempodejuegoSelectScalar = {
    clienteid?: boolean
    fecha?: boolean
    tiempo?: boolean
  }

  export type tiempodejuegoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"clienteid" | "fecha" | "tiempo", ExtArgs["result"]["tiempodejuego"]>
  export type tiempodejuegoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type tiempodejuegoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }
  export type tiempodejuegoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | clienteDefaultArgs<ExtArgs>
  }

  export type $tiempodejuegoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tiempodejuego"
    objects: {
      cliente: Prisma.$clientePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteid: number
      fecha: Date
      tiempo: number | null
    }, ExtArgs["result"]["tiempodejuego"]>
    composites: {}
  }

  type tiempodejuegoGetPayload<S extends boolean | null | undefined | tiempodejuegoDefaultArgs> = $Result.GetResult<Prisma.$tiempodejuegoPayload, S>

  type tiempodejuegoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tiempodejuegoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TiempodejuegoCountAggregateInputType | true
    }

  export interface tiempodejuegoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tiempodejuego'], meta: { name: 'tiempodejuego' } }
    /**
     * Find zero or one Tiempodejuego that matches the filter.
     * @param {tiempodejuegoFindUniqueArgs} args - Arguments to find a Tiempodejuego
     * @example
     * // Get one Tiempodejuego
     * const tiempodejuego = await prisma.tiempodejuego.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tiempodejuegoFindUniqueArgs>(args: SelectSubset<T, tiempodejuegoFindUniqueArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tiempodejuego that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tiempodejuegoFindUniqueOrThrowArgs} args - Arguments to find a Tiempodejuego
     * @example
     * // Get one Tiempodejuego
     * const tiempodejuego = await prisma.tiempodejuego.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tiempodejuegoFindUniqueOrThrowArgs>(args: SelectSubset<T, tiempodejuegoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tiempodejuego that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiempodejuegoFindFirstArgs} args - Arguments to find a Tiempodejuego
     * @example
     * // Get one Tiempodejuego
     * const tiempodejuego = await prisma.tiempodejuego.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tiempodejuegoFindFirstArgs>(args?: SelectSubset<T, tiempodejuegoFindFirstArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tiempodejuego that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiempodejuegoFindFirstOrThrowArgs} args - Arguments to find a Tiempodejuego
     * @example
     * // Get one Tiempodejuego
     * const tiempodejuego = await prisma.tiempodejuego.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tiempodejuegoFindFirstOrThrowArgs>(args?: SelectSubset<T, tiempodejuegoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tiempodejuegos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiempodejuegoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tiempodejuegos
     * const tiempodejuegos = await prisma.tiempodejuego.findMany()
     * 
     * // Get first 10 Tiempodejuegos
     * const tiempodejuegos = await prisma.tiempodejuego.findMany({ take: 10 })
     * 
     * // Only select the `clienteid`
     * const tiempodejuegoWithClienteidOnly = await prisma.tiempodejuego.findMany({ select: { clienteid: true } })
     * 
     */
    findMany<T extends tiempodejuegoFindManyArgs>(args?: SelectSubset<T, tiempodejuegoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tiempodejuego.
     * @param {tiempodejuegoCreateArgs} args - Arguments to create a Tiempodejuego.
     * @example
     * // Create one Tiempodejuego
     * const Tiempodejuego = await prisma.tiempodejuego.create({
     *   data: {
     *     // ... data to create a Tiempodejuego
     *   }
     * })
     * 
     */
    create<T extends tiempodejuegoCreateArgs>(args: SelectSubset<T, tiempodejuegoCreateArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tiempodejuegos.
     * @param {tiempodejuegoCreateManyArgs} args - Arguments to create many Tiempodejuegos.
     * @example
     * // Create many Tiempodejuegos
     * const tiempodejuego = await prisma.tiempodejuego.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tiempodejuegoCreateManyArgs>(args?: SelectSubset<T, tiempodejuegoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tiempodejuegos and returns the data saved in the database.
     * @param {tiempodejuegoCreateManyAndReturnArgs} args - Arguments to create many Tiempodejuegos.
     * @example
     * // Create many Tiempodejuegos
     * const tiempodejuego = await prisma.tiempodejuego.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tiempodejuegos and only return the `clienteid`
     * const tiempodejuegoWithClienteidOnly = await prisma.tiempodejuego.createManyAndReturn({
     *   select: { clienteid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tiempodejuegoCreateManyAndReturnArgs>(args?: SelectSubset<T, tiempodejuegoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tiempodejuego.
     * @param {tiempodejuegoDeleteArgs} args - Arguments to delete one Tiempodejuego.
     * @example
     * // Delete one Tiempodejuego
     * const Tiempodejuego = await prisma.tiempodejuego.delete({
     *   where: {
     *     // ... filter to delete one Tiempodejuego
     *   }
     * })
     * 
     */
    delete<T extends tiempodejuegoDeleteArgs>(args: SelectSubset<T, tiempodejuegoDeleteArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tiempodejuego.
     * @param {tiempodejuegoUpdateArgs} args - Arguments to update one Tiempodejuego.
     * @example
     * // Update one Tiempodejuego
     * const tiempodejuego = await prisma.tiempodejuego.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tiempodejuegoUpdateArgs>(args: SelectSubset<T, tiempodejuegoUpdateArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tiempodejuegos.
     * @param {tiempodejuegoDeleteManyArgs} args - Arguments to filter Tiempodejuegos to delete.
     * @example
     * // Delete a few Tiempodejuegos
     * const { count } = await prisma.tiempodejuego.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tiempodejuegoDeleteManyArgs>(args?: SelectSubset<T, tiempodejuegoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tiempodejuegos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiempodejuegoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tiempodejuegos
     * const tiempodejuego = await prisma.tiempodejuego.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tiempodejuegoUpdateManyArgs>(args: SelectSubset<T, tiempodejuegoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tiempodejuegos and returns the data updated in the database.
     * @param {tiempodejuegoUpdateManyAndReturnArgs} args - Arguments to update many Tiempodejuegos.
     * @example
     * // Update many Tiempodejuegos
     * const tiempodejuego = await prisma.tiempodejuego.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tiempodejuegos and only return the `clienteid`
     * const tiempodejuegoWithClienteidOnly = await prisma.tiempodejuego.updateManyAndReturn({
     *   select: { clienteid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tiempodejuegoUpdateManyAndReturnArgs>(args: SelectSubset<T, tiempodejuegoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tiempodejuego.
     * @param {tiempodejuegoUpsertArgs} args - Arguments to update or create a Tiempodejuego.
     * @example
     * // Update or create a Tiempodejuego
     * const tiempodejuego = await prisma.tiempodejuego.upsert({
     *   create: {
     *     // ... data to create a Tiempodejuego
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tiempodejuego we want to update
     *   }
     * })
     */
    upsert<T extends tiempodejuegoUpsertArgs>(args: SelectSubset<T, tiempodejuegoUpsertArgs<ExtArgs>>): Prisma__tiempodejuegoClient<$Result.GetResult<Prisma.$tiempodejuegoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tiempodejuegos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiempodejuegoCountArgs} args - Arguments to filter Tiempodejuegos to count.
     * @example
     * // Count the number of Tiempodejuegos
     * const count = await prisma.tiempodejuego.count({
     *   where: {
     *     // ... the filter for the Tiempodejuegos we want to count
     *   }
     * })
    **/
    count<T extends tiempodejuegoCountArgs>(
      args?: Subset<T, tiempodejuegoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TiempodejuegoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tiempodejuego.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TiempodejuegoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TiempodejuegoAggregateArgs>(args: Subset<T, TiempodejuegoAggregateArgs>): Prisma.PrismaPromise<GetTiempodejuegoAggregateType<T>>

    /**
     * Group by Tiempodejuego.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tiempodejuegoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tiempodejuegoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tiempodejuegoGroupByArgs['orderBy'] }
        : { orderBy?: tiempodejuegoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tiempodejuegoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTiempodejuegoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tiempodejuego model
   */
  readonly fields: tiempodejuegoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tiempodejuego.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tiempodejuegoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends clienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clienteDefaultArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tiempodejuego model
   */ 
  interface tiempodejuegoFieldRefs {
    readonly clienteid: FieldRef<"tiempodejuego", 'Int'>
    readonly fecha: FieldRef<"tiempodejuego", 'DateTime'>
    readonly tiempo: FieldRef<"tiempodejuego", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tiempodejuego findUnique
   */
  export type tiempodejuegoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * Filter, which tiempodejuego to fetch.
     */
    where: tiempodejuegoWhereUniqueInput
  }

  /**
   * tiempodejuego findUniqueOrThrow
   */
  export type tiempodejuegoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * Filter, which tiempodejuego to fetch.
     */
    where: tiempodejuegoWhereUniqueInput
  }

  /**
   * tiempodejuego findFirst
   */
  export type tiempodejuegoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * Filter, which tiempodejuego to fetch.
     */
    where?: tiempodejuegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiempodejuegos to fetch.
     */
    orderBy?: tiempodejuegoOrderByWithRelationInput | tiempodejuegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tiempodejuegos.
     */
    cursor?: tiempodejuegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiempodejuegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiempodejuegos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tiempodejuegos.
     */
    distinct?: TiempodejuegoScalarFieldEnum | TiempodejuegoScalarFieldEnum[]
  }

  /**
   * tiempodejuego findFirstOrThrow
   */
  export type tiempodejuegoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * Filter, which tiempodejuego to fetch.
     */
    where?: tiempodejuegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiempodejuegos to fetch.
     */
    orderBy?: tiempodejuegoOrderByWithRelationInput | tiempodejuegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tiempodejuegos.
     */
    cursor?: tiempodejuegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiempodejuegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiempodejuegos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tiempodejuegos.
     */
    distinct?: TiempodejuegoScalarFieldEnum | TiempodejuegoScalarFieldEnum[]
  }

  /**
   * tiempodejuego findMany
   */
  export type tiempodejuegoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * Filter, which tiempodejuegos to fetch.
     */
    where?: tiempodejuegoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tiempodejuegos to fetch.
     */
    orderBy?: tiempodejuegoOrderByWithRelationInput | tiempodejuegoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tiempodejuegos.
     */
    cursor?: tiempodejuegoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tiempodejuegos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tiempodejuegos.
     */
    skip?: number
    distinct?: TiempodejuegoScalarFieldEnum | TiempodejuegoScalarFieldEnum[]
  }

  /**
   * tiempodejuego create
   */
  export type tiempodejuegoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * The data needed to create a tiempodejuego.
     */
    data: XOR<tiempodejuegoCreateInput, tiempodejuegoUncheckedCreateInput>
  }

  /**
   * tiempodejuego createMany
   */
  export type tiempodejuegoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tiempodejuegos.
     */
    data: tiempodejuegoCreateManyInput | tiempodejuegoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tiempodejuego createManyAndReturn
   */
  export type tiempodejuegoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * The data used to create many tiempodejuegos.
     */
    data: tiempodejuegoCreateManyInput | tiempodejuegoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tiempodejuego update
   */
  export type tiempodejuegoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * The data needed to update a tiempodejuego.
     */
    data: XOR<tiempodejuegoUpdateInput, tiempodejuegoUncheckedUpdateInput>
    /**
     * Choose, which tiempodejuego to update.
     */
    where: tiempodejuegoWhereUniqueInput
  }

  /**
   * tiempodejuego updateMany
   */
  export type tiempodejuegoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tiempodejuegos.
     */
    data: XOR<tiempodejuegoUpdateManyMutationInput, tiempodejuegoUncheckedUpdateManyInput>
    /**
     * Filter which tiempodejuegos to update
     */
    where?: tiempodejuegoWhereInput
    /**
     * Limit how many tiempodejuegos to update.
     */
    limit?: number
  }

  /**
   * tiempodejuego updateManyAndReturn
   */
  export type tiempodejuegoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * The data used to update tiempodejuegos.
     */
    data: XOR<tiempodejuegoUpdateManyMutationInput, tiempodejuegoUncheckedUpdateManyInput>
    /**
     * Filter which tiempodejuegos to update
     */
    where?: tiempodejuegoWhereInput
    /**
     * Limit how many tiempodejuegos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * tiempodejuego upsert
   */
  export type tiempodejuegoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * The filter to search for the tiempodejuego to update in case it exists.
     */
    where: tiempodejuegoWhereUniqueInput
    /**
     * In case the tiempodejuego found by the `where` argument doesn't exist, create a new tiempodejuego with this data.
     */
    create: XOR<tiempodejuegoCreateInput, tiempodejuegoUncheckedCreateInput>
    /**
     * In case the tiempodejuego was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tiempodejuegoUpdateInput, tiempodejuegoUncheckedUpdateInput>
  }

  /**
   * tiempodejuego delete
   */
  export type tiempodejuegoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
    /**
     * Filter which tiempodejuego to delete.
     */
    where: tiempodejuegoWhereUniqueInput
  }

  /**
   * tiempodejuego deleteMany
   */
  export type tiempodejuegoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tiempodejuegos to delete
     */
    where?: tiempodejuegoWhereInput
    /**
     * Limit how many tiempodejuegos to delete.
     */
    limit?: number
  }

  /**
   * tiempodejuego without action
   */
  export type tiempodejuegoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tiempodejuego
     */
    select?: tiempodejuegoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tiempodejuego
     */
    omit?: tiempodejuegoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tiempodejuegoInclude<ExtArgs> | null
  }


  /**
   * Model usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    usuarioid: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    usuarioid: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    usuarioid: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    password: string | null
    dni: string | null
    edad: string | null
    img: Uint8Array | null
  }

  export type UsuarioMaxAggregateOutputType = {
    usuarioid: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    password: string | null
    dni: string | null
    edad: string | null
    img: Uint8Array | null
  }

  export type UsuarioCountAggregateOutputType = {
    usuarioid: number
    nombre: number
    apellido: number
    email: number
    password: number
    dni: number
    edad: number
    img: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    usuarioid?: true
  }

  export type UsuarioSumAggregateInputType = {
    usuarioid?: true
  }

  export type UsuarioMinAggregateInputType = {
    usuarioid?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    dni?: true
    edad?: true
    img?: true
  }

  export type UsuarioMaxAggregateInputType = {
    usuarioid?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    dni?: true
    edad?: true
    img?: true
  }

  export type UsuarioCountAggregateInputType = {
    usuarioid?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    dni?: true
    edad?: true
    img?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario to aggregate.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithAggregationInput | usuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    usuarioid: number
    nombre: string | null
    apellido: string | null
    email: string | null
    password: string | null
    dni: string | null
    edad: string | null
    img: Uint8Array | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioid?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    dni?: boolean
    edad?: boolean
    img?: boolean
    administrador?: boolean | usuario$administradorArgs<ExtArgs>
    cliente?: boolean | usuario$clienteArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioid?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    dni?: boolean
    edad?: boolean
    img?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioid?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    dni?: boolean
    edad?: boolean
    img?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectScalar = {
    usuarioid?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    dni?: boolean
    edad?: boolean
    img?: boolean
  }

  export type usuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"usuarioid" | "nombre" | "apellido" | "email" | "password" | "dni" | "edad" | "img", ExtArgs["result"]["usuario"]>
  export type usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administrador?: boolean | usuario$administradorArgs<ExtArgs>
    cliente?: boolean | usuario$clienteArgs<ExtArgs>
  }
  export type usuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuario"
    objects: {
      administrador: Prisma.$administradorPayload<ExtArgs> | null
      cliente: Prisma.$clientePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioid: number
      nombre: string | null
      apellido: string | null
      email: string | null
      password: string | null
      dni: string | null
      edad: string | null
      img: Uint8Array | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type usuarioGetPayload<S extends boolean | null | undefined | usuarioDefaultArgs> = $Result.GetResult<Prisma.$usuarioPayload, S>

  type usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuario'], meta: { name: 'usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {usuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuarioFindUniqueArgs>(args: SelectSubset<T, usuarioFindUniqueArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuarioFindFirstArgs>(args?: SelectSubset<T, usuarioFindFirstArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `usuarioid`
     * const usuarioWithUsuarioidOnly = await prisma.usuario.findMany({ select: { usuarioid: true } })
     * 
     */
    findMany<T extends usuarioFindManyArgs>(args?: SelectSubset<T, usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {usuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends usuarioCreateArgs>(args: SelectSubset<T, usuarioCreateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuarioCreateManyArgs>(args?: SelectSubset<T, usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `usuarioid`
     * const usuarioWithUsuarioidOnly = await prisma.usuario.createManyAndReturn({
     *   select: { usuarioid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, usuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {usuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends usuarioDeleteArgs>(args: SelectSubset<T, usuarioDeleteArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {usuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuarioUpdateArgs>(args: SelectSubset<T, usuarioUpdateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuarioDeleteManyArgs>(args?: SelectSubset<T, usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuarioUpdateManyArgs>(args: SelectSubset<T, usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `usuarioid`
     * const usuarioWithUsuarioidOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { usuarioid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, usuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {usuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends usuarioUpsertArgs>(args: SelectSubset<T, usuarioUpsertArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuarioCountArgs>(
      args?: Subset<T, usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuarioGroupByArgs['orderBy'] }
        : { orderBy?: usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuario model
   */
  readonly fields: usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    administrador<T extends usuario$administradorArgs<ExtArgs> = {}>(args?: Subset<T, usuario$administradorArgs<ExtArgs>>): Prisma__administradorClient<$Result.GetResult<Prisma.$administradorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cliente<T extends usuario$clienteArgs<ExtArgs> = {}>(args?: Subset<T, usuario$clienteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuario model
   */ 
  interface usuarioFieldRefs {
    readonly usuarioid: FieldRef<"usuario", 'Int'>
    readonly nombre: FieldRef<"usuario", 'String'>
    readonly apellido: FieldRef<"usuario", 'String'>
    readonly email: FieldRef<"usuario", 'String'>
    readonly password: FieldRef<"usuario", 'String'>
    readonly dni: FieldRef<"usuario", 'String'>
    readonly edad: FieldRef<"usuario", 'String'>
    readonly img: FieldRef<"usuario", 'Bytes'>
  }
    

  // Custom InputTypes
  /**
   * usuario findUnique
   */
  export type usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findUniqueOrThrow
   */
  export type usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findFirst
   */
  export type usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findFirstOrThrow
   */
  export type usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findMany
   */
  export type usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario create
   */
  export type usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a usuario.
     */
    data?: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
  }

  /**
   * usuario createMany
   */
  export type usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuario createManyAndReturn
   */
  export type usuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuario update
   */
  export type usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a usuario.
     */
    data: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
    /**
     * Choose, which usuario to update.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario updateMany
   */
  export type usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuario updateManyAndReturn
   */
  export type usuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuario upsert
   */
  export type usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the usuario to update in case it exists.
     */
    where: usuarioWhereUniqueInput
    /**
     * In case the usuario found by the `where` argument doesn't exist, create a new usuario with this data.
     */
    create: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
    /**
     * In case the usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
  }

  /**
   * usuario delete
   */
  export type usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter which usuario to delete.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario deleteMany
   */
  export type usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuario.administrador
   */
  export type usuario$administradorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the administrador
     */
    select?: administradorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the administrador
     */
    omit?: administradorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: administradorInclude<ExtArgs> | null
    where?: administradorWhereInput
  }

  /**
   * usuario.cliente
   */
  export type usuario$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cliente
     */
    omit?: clienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clienteInclude<ExtArgs> | null
    where?: clienteWhereInput
  }

  /**
   * usuario without action
   */
  export type usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdministradorScalarFieldEnum: {
    adminid: 'adminid',
    balance: 'balance',
    superadmin: 'superadmin',
    usuarioid: 'usuarioid'
  };

  export type AdministradorScalarFieldEnum = (typeof AdministradorScalarFieldEnum)[keyof typeof AdministradorScalarFieldEnum]


  export const AmistadScalarFieldEnum: {
    amistadid: 'amistadid',
    clienteid: 'clienteid',
    cliente2id: 'cliente2id',
    aceptada: 'aceptada'
  };

  export type AmistadScalarFieldEnum = (typeof AmistadScalarFieldEnum)[keyof typeof AmistadScalarFieldEnum]


  export const AumentolimitehorarioScalarFieldEnum: {
    aumenthorarioid: 'aumenthorarioid',
    clienteid: 'clienteid',
    cantidad: 'cantidad',
    adminid: 'adminid',
    fechaabierto: 'fechaabierto',
    fecharesuelto: 'fecharesuelto'
  };

  export type AumentolimitehorarioScalarFieldEnum = (typeof AumentolimitehorarioScalarFieldEnum)[keyof typeof AumentolimitehorarioScalarFieldEnum]


  export const AumentolimitesmonetarioScalarFieldEnum: {
    aumentomonetarioid: 'aumentomonetarioid',
    clienteid: 'clienteid',
    cantidad: 'cantidad',
    adminid: 'adminid',
    fechaabierto: 'fechaabierto',
    fecharesuelto: 'fecharesuelto'
  };

  export type AumentolimitesmonetarioScalarFieldEnum = (typeof AumentolimitesmonetarioScalarFieldEnum)[keyof typeof AumentolimitesmonetarioScalarFieldEnum]


  export const ClienteScalarFieldEnum: {
    clienteid: 'clienteid',
    balance: 'balance',
    influencer: 'influencer',
    usuarioid: 'usuarioid'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const DisminucionlimitehorarioScalarFieldEnum: {
    disminucionhorarioid: 'disminucionhorarioid',
    clienteid: 'clienteid',
    cantidad: 'cantidad',
    fecha: 'fecha'
  };

  export type DisminucionlimitehorarioScalarFieldEnum = (typeof DisminucionlimitehorarioScalarFieldEnum)[keyof typeof DisminucionlimitehorarioScalarFieldEnum]


  export const DisminucionlimitemonetarioScalarFieldEnum: {
    disminucionmontarioid: 'disminucionmontarioid',
    clienteid: 'clienteid',
    cantidad: 'cantidad',
    fecha: 'fecha'
  };

  export type DisminucionlimitemonetarioScalarFieldEnum = (typeof DisminucionlimitemonetarioScalarFieldEnum)[keyof typeof DisminucionlimitemonetarioScalarFieldEnum]


  export const EgresoScalarFieldEnum: {
    egresoid: 'egresoid',
    clienteid: 'clienteid',
    monto: 'monto',
    fecha: 'fecha',
    metododeretiro: 'metododeretiro'
  };

  export type EgresoScalarFieldEnum = (typeof EgresoScalarFieldEnum)[keyof typeof EgresoScalarFieldEnum]


  export const IngresoScalarFieldEnum: {
    ingresoid: 'ingresoid',
    clienteid: 'clienteid',
    monto: 'monto',
    fecha: 'fecha',
    cuponid: 'cuponid',
    metododepago: 'metododepago'
  };

  export type IngresoScalarFieldEnum = (typeof IngresoScalarFieldEnum)[keyof typeof IngresoScalarFieldEnum]


  export const JuegoScalarFieldEnum: {
    juegoid: 'juegoid',
    nombre: 'nombre',
    tipo: 'tipo',
    estado: 'estado'
  };

  export type JuegoScalarFieldEnum = (typeof JuegoScalarFieldEnum)[keyof typeof JuegoScalarFieldEnum]


  export const JugadaScalarFieldEnum: {
    jugadaid: 'jugadaid',
    clienteid: 'clienteid',
    fecha: 'fecha',
    gananciaperdida: 'gananciaperdida',
    apuesta: 'apuesta',
    hora: 'hora',
    partidaid: 'partidaid'
  };

  export type JugadaScalarFieldEnum = (typeof JugadaScalarFieldEnum)[keyof typeof JugadaScalarFieldEnum]


  export const LimitehorarioScalarFieldEnum: {
    clienteid: 'clienteid',
    limitediario: 'limitediario',
    limitesemanal: 'limitesemanal',
    limitemensual: 'limitemensual'
  };

  export type LimitehorarioScalarFieldEnum = (typeof LimitehorarioScalarFieldEnum)[keyof typeof LimitehorarioScalarFieldEnum]


  export const LimitemonetarioScalarFieldEnum: {
    clienteid: 'clienteid',
    limitediario: 'limitediario',
    limitesemanal: 'limitesemanal',
    limitemensual: 'limitemensual'
  };

  export type LimitemonetarioScalarFieldEnum = (typeof LimitemonetarioScalarFieldEnum)[keyof typeof LimitemonetarioScalarFieldEnum]


  export const MensajesScalarFieldEnum: {
    ticketid: 'ticketid',
    mensaje: 'mensaje'
  };

  export type MensajesScalarFieldEnum = (typeof MensajesScalarFieldEnum)[keyof typeof MensajesScalarFieldEnum]


  export const PartidaScalarFieldEnum: {
    partidaid: 'partidaid',
    clienteid: 'clienteid',
    fecha: 'fecha',
    gananciaperdida: 'gananciaperdida',
    apuesta: 'apuesta'
  };

  export type PartidaScalarFieldEnum = (typeof PartidaScalarFieldEnum)[keyof typeof PartidaScalarFieldEnum]


  export const PausaScalarFieldEnum: {
    clienteid: 'clienteid',
    fechainicio: 'fechainicio',
    fechafin: 'fechafin',
    duracion: 'duracion'
  };

  export type PausaScalarFieldEnum = (typeof PausaScalarFieldEnum)[keyof typeof PausaScalarFieldEnum]


  export const PromocionScalarFieldEnum: {
    promocionid: 'promocionid',
    tipo: 'tipo',
    descripcion: 'descripcion',
    fechainicio: 'fechainicio',
    fechafin: 'fechafin',
    cantidadusos: 'cantidadusos',
    mincarga: 'mincarga',
    maxcarga: 'maxcarga'
  };

  export type PromocionScalarFieldEnum = (typeof PromocionScalarFieldEnum)[keyof typeof PromocionScalarFieldEnum]


  export const SuspendidosScalarFieldEnum: {
    suspendidoid: 'suspendidoid',
    clienteid: 'clienteid',
    fechainicio: 'fechainicio',
    fechafin: 'fechafin',
    duracion: 'duracion',
    adminid: 'adminid',
    razon: 'razon'
  };

  export type SuspendidosScalarFieldEnum = (typeof SuspendidosScalarFieldEnum)[keyof typeof SuspendidosScalarFieldEnum]


  export const TicketsScalarFieldEnum: {
    ticketid: 'ticketid',
    clienteid: 'clienteid',
    problema: 'problema',
    resuelto: 'resuelto',
    idadmin: 'idadmin'
  };

  export type TicketsScalarFieldEnum = (typeof TicketsScalarFieldEnum)[keyof typeof TicketsScalarFieldEnum]


  export const TiempodejuegoScalarFieldEnum: {
    clienteid: 'clienteid',
    fecha: 'fecha',
    tiempo: 'tiempo'
  };

  export type TiempodejuegoScalarFieldEnum = (typeof TiempodejuegoScalarFieldEnum)[keyof typeof TiempodejuegoScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    usuarioid: 'usuarioid',
    nombre: 'nombre',
    apellido: 'apellido',
    email: 'email',
    password: 'password',
    dni: 'dni',
    edad: 'edad',
    img: 'img'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type administradorWhereInput = {
    AND?: administradorWhereInput | administradorWhereInput[]
    OR?: administradorWhereInput[]
    NOT?: administradorWhereInput | administradorWhereInput[]
    adminid?: IntFilter<"administrador"> | number
    balance?: BigIntNullableFilter<"administrador"> | bigint | number | null
    superadmin?: BoolNullableFilter<"administrador"> | boolean | null
    usuarioid?: IntFilter<"administrador"> | number
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
    aumentolimitehorario?: AumentolimitehorarioListRelationFilter
    aumentolimitesmonetario?: AumentolimitesmonetarioListRelationFilter
    suspendidos?: SuspendidosListRelationFilter
    tickets?: TicketsListRelationFilter
  }

  export type administradorOrderByWithRelationInput = {
    adminid?: SortOrder
    balance?: SortOrderInput | SortOrder
    superadmin?: SortOrderInput | SortOrder
    usuarioid?: SortOrder
    usuario?: usuarioOrderByWithRelationInput
    aumentolimitehorario?: aumentolimitehorarioOrderByRelationAggregateInput
    aumentolimitesmonetario?: aumentolimitesmonetarioOrderByRelationAggregateInput
    suspendidos?: suspendidosOrderByRelationAggregateInput
    tickets?: ticketsOrderByRelationAggregateInput
  }

  export type administradorWhereUniqueInput = Prisma.AtLeast<{
    adminid?: number
    usuarioid?: number
    AND?: administradorWhereInput | administradorWhereInput[]
    OR?: administradorWhereInput[]
    NOT?: administradorWhereInput | administradorWhereInput[]
    balance?: BigIntNullableFilter<"administrador"> | bigint | number | null
    superadmin?: BoolNullableFilter<"administrador"> | boolean | null
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
    aumentolimitehorario?: AumentolimitehorarioListRelationFilter
    aumentolimitesmonetario?: AumentolimitesmonetarioListRelationFilter
    suspendidos?: SuspendidosListRelationFilter
    tickets?: TicketsListRelationFilter
  }, "adminid" | "usuarioid">

  export type administradorOrderByWithAggregationInput = {
    adminid?: SortOrder
    balance?: SortOrderInput | SortOrder
    superadmin?: SortOrderInput | SortOrder
    usuarioid?: SortOrder
    _count?: administradorCountOrderByAggregateInput
    _avg?: administradorAvgOrderByAggregateInput
    _max?: administradorMaxOrderByAggregateInput
    _min?: administradorMinOrderByAggregateInput
    _sum?: administradorSumOrderByAggregateInput
  }

  export type administradorScalarWhereWithAggregatesInput = {
    AND?: administradorScalarWhereWithAggregatesInput | administradorScalarWhereWithAggregatesInput[]
    OR?: administradorScalarWhereWithAggregatesInput[]
    NOT?: administradorScalarWhereWithAggregatesInput | administradorScalarWhereWithAggregatesInput[]
    adminid?: IntWithAggregatesFilter<"administrador"> | number
    balance?: BigIntNullableWithAggregatesFilter<"administrador"> | bigint | number | null
    superadmin?: BoolNullableWithAggregatesFilter<"administrador"> | boolean | null
    usuarioid?: IntWithAggregatesFilter<"administrador"> | number
  }

  export type amistadWhereInput = {
    AND?: amistadWhereInput | amistadWhereInput[]
    OR?: amistadWhereInput[]
    NOT?: amistadWhereInput | amistadWhereInput[]
    amistadid?: IntFilter<"amistad"> | number
    clienteid?: IntNullableFilter<"amistad"> | number | null
    cliente2id?: IntNullableFilter<"amistad"> | number | null
    aceptada?: BoolNullableFilter<"amistad"> | boolean | null
    cliente_amistad_cliente2idTocliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
    cliente_amistad_clienteidTocliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type amistadOrderByWithRelationInput = {
    amistadid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cliente2id?: SortOrderInput | SortOrder
    aceptada?: SortOrderInput | SortOrder
    cliente_amistad_cliente2idTocliente?: clienteOrderByWithRelationInput
    cliente_amistad_clienteidTocliente?: clienteOrderByWithRelationInput
  }

  export type amistadWhereUniqueInput = Prisma.AtLeast<{
    amistadid?: number
    AND?: amistadWhereInput | amistadWhereInput[]
    OR?: amistadWhereInput[]
    NOT?: amistadWhereInput | amistadWhereInput[]
    clienteid?: IntNullableFilter<"amistad"> | number | null
    cliente2id?: IntNullableFilter<"amistad"> | number | null
    aceptada?: BoolNullableFilter<"amistad"> | boolean | null
    cliente_amistad_cliente2idTocliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
    cliente_amistad_clienteidTocliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "amistadid">

  export type amistadOrderByWithAggregationInput = {
    amistadid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cliente2id?: SortOrderInput | SortOrder
    aceptada?: SortOrderInput | SortOrder
    _count?: amistadCountOrderByAggregateInput
    _avg?: amistadAvgOrderByAggregateInput
    _max?: amistadMaxOrderByAggregateInput
    _min?: amistadMinOrderByAggregateInput
    _sum?: amistadSumOrderByAggregateInput
  }

  export type amistadScalarWhereWithAggregatesInput = {
    AND?: amistadScalarWhereWithAggregatesInput | amistadScalarWhereWithAggregatesInput[]
    OR?: amistadScalarWhereWithAggregatesInput[]
    NOT?: amistadScalarWhereWithAggregatesInput | amistadScalarWhereWithAggregatesInput[]
    amistadid?: IntWithAggregatesFilter<"amistad"> | number
    clienteid?: IntNullableWithAggregatesFilter<"amistad"> | number | null
    cliente2id?: IntNullableWithAggregatesFilter<"amistad"> | number | null
    aceptada?: BoolNullableWithAggregatesFilter<"amistad"> | boolean | null
  }

  export type aumentolimitehorarioWhereInput = {
    AND?: aumentolimitehorarioWhereInput | aumentolimitehorarioWhereInput[]
    OR?: aumentolimitehorarioWhereInput[]
    NOT?: aumentolimitehorarioWhereInput | aumentolimitehorarioWhereInput[]
    aumenthorarioid?: IntFilter<"aumentolimitehorario"> | number
    clienteid?: IntNullableFilter<"aumentolimitehorario"> | number | null
    cantidad?: IntNullableFilter<"aumentolimitehorario"> | number | null
    adminid?: IntNullableFilter<"aumentolimitehorario"> | number | null
    fechaabierto?: DateTimeNullableFilter<"aumentolimitehorario"> | Date | string | null
    fecharesuelto?: DateTimeNullableFilter<"aumentolimitehorario"> | Date | string | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type aumentolimitehorarioOrderByWithRelationInput = {
    aumenthorarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    adminid?: SortOrderInput | SortOrder
    fechaabierto?: SortOrderInput | SortOrder
    fecharesuelto?: SortOrderInput | SortOrder
    administrador?: administradorOrderByWithRelationInput
    cliente?: clienteOrderByWithRelationInput
  }

  export type aumentolimitehorarioWhereUniqueInput = Prisma.AtLeast<{
    aumenthorarioid?: number
    AND?: aumentolimitehorarioWhereInput | aumentolimitehorarioWhereInput[]
    OR?: aumentolimitehorarioWhereInput[]
    NOT?: aumentolimitehorarioWhereInput | aumentolimitehorarioWhereInput[]
    clienteid?: IntNullableFilter<"aumentolimitehorario"> | number | null
    cantidad?: IntNullableFilter<"aumentolimitehorario"> | number | null
    adminid?: IntNullableFilter<"aumentolimitehorario"> | number | null
    fechaabierto?: DateTimeNullableFilter<"aumentolimitehorario"> | Date | string | null
    fecharesuelto?: DateTimeNullableFilter<"aumentolimitehorario"> | Date | string | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "aumenthorarioid">

  export type aumentolimitehorarioOrderByWithAggregationInput = {
    aumenthorarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    adminid?: SortOrderInput | SortOrder
    fechaabierto?: SortOrderInput | SortOrder
    fecharesuelto?: SortOrderInput | SortOrder
    _count?: aumentolimitehorarioCountOrderByAggregateInput
    _avg?: aumentolimitehorarioAvgOrderByAggregateInput
    _max?: aumentolimitehorarioMaxOrderByAggregateInput
    _min?: aumentolimitehorarioMinOrderByAggregateInput
    _sum?: aumentolimitehorarioSumOrderByAggregateInput
  }

  export type aumentolimitehorarioScalarWhereWithAggregatesInput = {
    AND?: aumentolimitehorarioScalarWhereWithAggregatesInput | aumentolimitehorarioScalarWhereWithAggregatesInput[]
    OR?: aumentolimitehorarioScalarWhereWithAggregatesInput[]
    NOT?: aumentolimitehorarioScalarWhereWithAggregatesInput | aumentolimitehorarioScalarWhereWithAggregatesInput[]
    aumenthorarioid?: IntWithAggregatesFilter<"aumentolimitehorario"> | number
    clienteid?: IntNullableWithAggregatesFilter<"aumentolimitehorario"> | number | null
    cantidad?: IntNullableWithAggregatesFilter<"aumentolimitehorario"> | number | null
    adminid?: IntNullableWithAggregatesFilter<"aumentolimitehorario"> | number | null
    fechaabierto?: DateTimeNullableWithAggregatesFilter<"aumentolimitehorario"> | Date | string | null
    fecharesuelto?: DateTimeNullableWithAggregatesFilter<"aumentolimitehorario"> | Date | string | null
  }

  export type aumentolimitesmonetarioWhereInput = {
    AND?: aumentolimitesmonetarioWhereInput | aumentolimitesmonetarioWhereInput[]
    OR?: aumentolimitesmonetarioWhereInput[]
    NOT?: aumentolimitesmonetarioWhereInput | aumentolimitesmonetarioWhereInput[]
    aumentomonetarioid?: IntFilter<"aumentolimitesmonetario"> | number
    clienteid?: IntNullableFilter<"aumentolimitesmonetario"> | number | null
    cantidad?: DecimalNullableFilter<"aumentolimitesmonetario"> | Decimal | DecimalJsLike | number | string | null
    adminid?: IntNullableFilter<"aumentolimitesmonetario"> | number | null
    fechaabierto?: DateTimeNullableFilter<"aumentolimitesmonetario"> | Date | string | null
    fecharesuelto?: DateTimeNullableFilter<"aumentolimitesmonetario"> | Date | string | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type aumentolimitesmonetarioOrderByWithRelationInput = {
    aumentomonetarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    adminid?: SortOrderInput | SortOrder
    fechaabierto?: SortOrderInput | SortOrder
    fecharesuelto?: SortOrderInput | SortOrder
    administrador?: administradorOrderByWithRelationInput
    cliente?: clienteOrderByWithRelationInput
  }

  export type aumentolimitesmonetarioWhereUniqueInput = Prisma.AtLeast<{
    aumentomonetarioid?: number
    AND?: aumentolimitesmonetarioWhereInput | aumentolimitesmonetarioWhereInput[]
    OR?: aumentolimitesmonetarioWhereInput[]
    NOT?: aumentolimitesmonetarioWhereInput | aumentolimitesmonetarioWhereInput[]
    clienteid?: IntNullableFilter<"aumentolimitesmonetario"> | number | null
    cantidad?: DecimalNullableFilter<"aumentolimitesmonetario"> | Decimal | DecimalJsLike | number | string | null
    adminid?: IntNullableFilter<"aumentolimitesmonetario"> | number | null
    fechaabierto?: DateTimeNullableFilter<"aumentolimitesmonetario"> | Date | string | null
    fecharesuelto?: DateTimeNullableFilter<"aumentolimitesmonetario"> | Date | string | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "aumentomonetarioid">

  export type aumentolimitesmonetarioOrderByWithAggregationInput = {
    aumentomonetarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    adminid?: SortOrderInput | SortOrder
    fechaabierto?: SortOrderInput | SortOrder
    fecharesuelto?: SortOrderInput | SortOrder
    _count?: aumentolimitesmonetarioCountOrderByAggregateInput
    _avg?: aumentolimitesmonetarioAvgOrderByAggregateInput
    _max?: aumentolimitesmonetarioMaxOrderByAggregateInput
    _min?: aumentolimitesmonetarioMinOrderByAggregateInput
    _sum?: aumentolimitesmonetarioSumOrderByAggregateInput
  }

  export type aumentolimitesmonetarioScalarWhereWithAggregatesInput = {
    AND?: aumentolimitesmonetarioScalarWhereWithAggregatesInput | aumentolimitesmonetarioScalarWhereWithAggregatesInput[]
    OR?: aumentolimitesmonetarioScalarWhereWithAggregatesInput[]
    NOT?: aumentolimitesmonetarioScalarWhereWithAggregatesInput | aumentolimitesmonetarioScalarWhereWithAggregatesInput[]
    aumentomonetarioid?: IntWithAggregatesFilter<"aumentolimitesmonetario"> | number
    clienteid?: IntNullableWithAggregatesFilter<"aumentolimitesmonetario"> | number | null
    cantidad?: DecimalNullableWithAggregatesFilter<"aumentolimitesmonetario"> | Decimal | DecimalJsLike | number | string | null
    adminid?: IntNullableWithAggregatesFilter<"aumentolimitesmonetario"> | number | null
    fechaabierto?: DateTimeNullableWithAggregatesFilter<"aumentolimitesmonetario"> | Date | string | null
    fecharesuelto?: DateTimeNullableWithAggregatesFilter<"aumentolimitesmonetario"> | Date | string | null
  }

  export type clienteWhereInput = {
    AND?: clienteWhereInput | clienteWhereInput[]
    OR?: clienteWhereInput[]
    NOT?: clienteWhereInput | clienteWhereInput[]
    clienteid?: IntFilter<"cliente"> | number
    balance?: BigIntNullableFilter<"cliente"> | bigint | number | null
    influencer?: BoolNullableFilter<"cliente"> | boolean | null
    usuarioid?: IntFilter<"cliente"> | number
    amistad_amistad_cliente2idTocliente?: AmistadListRelationFilter
    amistad_amistad_clienteidTocliente?: AmistadListRelationFilter
    aumentolimitehorario?: AumentolimitehorarioListRelationFilter
    aumentolimitesmonetario?: AumentolimitesmonetarioListRelationFilter
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
    disminucionlimitehorario?: DisminucionlimitehorarioListRelationFilter
    disminucionlimitemonetario?: DisminucionlimitemonetarioListRelationFilter
    egreso?: EgresoListRelationFilter
    ingreso?: IngresoListRelationFilter
    jugada?: JugadaListRelationFilter
    limitehorario?: XOR<LimitehorarioNullableScalarRelationFilter, limitehorarioWhereInput> | null
    limitemonetario?: XOR<LimitemonetarioNullableScalarRelationFilter, limitemonetarioWhereInput> | null
    partida?: PartidaListRelationFilter
    pausa?: XOR<PausaNullableScalarRelationFilter, pausaWhereInput> | null
    suspendidos?: SuspendidosListRelationFilter
    tickets?: TicketsListRelationFilter
    tiempodejuego?: TiempodejuegoListRelationFilter
  }

  export type clienteOrderByWithRelationInput = {
    clienteid?: SortOrder
    balance?: SortOrderInput | SortOrder
    influencer?: SortOrderInput | SortOrder
    usuarioid?: SortOrder
    amistad_amistad_cliente2idTocliente?: amistadOrderByRelationAggregateInput
    amistad_amistad_clienteidTocliente?: amistadOrderByRelationAggregateInput
    aumentolimitehorario?: aumentolimitehorarioOrderByRelationAggregateInput
    aumentolimitesmonetario?: aumentolimitesmonetarioOrderByRelationAggregateInput
    usuario?: usuarioOrderByWithRelationInput
    disminucionlimitehorario?: disminucionlimitehorarioOrderByRelationAggregateInput
    disminucionlimitemonetario?: disminucionlimitemonetarioOrderByRelationAggregateInput
    egreso?: egresoOrderByRelationAggregateInput
    ingreso?: ingresoOrderByRelationAggregateInput
    jugada?: jugadaOrderByRelationAggregateInput
    limitehorario?: limitehorarioOrderByWithRelationInput
    limitemonetario?: limitemonetarioOrderByWithRelationInput
    partida?: partidaOrderByRelationAggregateInput
    pausa?: pausaOrderByWithRelationInput
    suspendidos?: suspendidosOrderByRelationAggregateInput
    tickets?: ticketsOrderByRelationAggregateInput
    tiempodejuego?: tiempodejuegoOrderByRelationAggregateInput
  }

  export type clienteWhereUniqueInput = Prisma.AtLeast<{
    clienteid?: number
    usuarioid?: number
    AND?: clienteWhereInput | clienteWhereInput[]
    OR?: clienteWhereInput[]
    NOT?: clienteWhereInput | clienteWhereInput[]
    balance?: BigIntNullableFilter<"cliente"> | bigint | number | null
    influencer?: BoolNullableFilter<"cliente"> | boolean | null
    amistad_amistad_cliente2idTocliente?: AmistadListRelationFilter
    amistad_amistad_clienteidTocliente?: AmistadListRelationFilter
    aumentolimitehorario?: AumentolimitehorarioListRelationFilter
    aumentolimitesmonetario?: AumentolimitesmonetarioListRelationFilter
    usuario?: XOR<UsuarioScalarRelationFilter, usuarioWhereInput>
    disminucionlimitehorario?: DisminucionlimitehorarioListRelationFilter
    disminucionlimitemonetario?: DisminucionlimitemonetarioListRelationFilter
    egreso?: EgresoListRelationFilter
    ingreso?: IngresoListRelationFilter
    jugada?: JugadaListRelationFilter
    limitehorario?: XOR<LimitehorarioNullableScalarRelationFilter, limitehorarioWhereInput> | null
    limitemonetario?: XOR<LimitemonetarioNullableScalarRelationFilter, limitemonetarioWhereInput> | null
    partida?: PartidaListRelationFilter
    pausa?: XOR<PausaNullableScalarRelationFilter, pausaWhereInput> | null
    suspendidos?: SuspendidosListRelationFilter
    tickets?: TicketsListRelationFilter
    tiempodejuego?: TiempodejuegoListRelationFilter
  }, "clienteid" | "usuarioid">

  export type clienteOrderByWithAggregationInput = {
    clienteid?: SortOrder
    balance?: SortOrderInput | SortOrder
    influencer?: SortOrderInput | SortOrder
    usuarioid?: SortOrder
    _count?: clienteCountOrderByAggregateInput
    _avg?: clienteAvgOrderByAggregateInput
    _max?: clienteMaxOrderByAggregateInput
    _min?: clienteMinOrderByAggregateInput
    _sum?: clienteSumOrderByAggregateInput
  }

  export type clienteScalarWhereWithAggregatesInput = {
    AND?: clienteScalarWhereWithAggregatesInput | clienteScalarWhereWithAggregatesInput[]
    OR?: clienteScalarWhereWithAggregatesInput[]
    NOT?: clienteScalarWhereWithAggregatesInput | clienteScalarWhereWithAggregatesInput[]
    clienteid?: IntWithAggregatesFilter<"cliente"> | number
    balance?: BigIntNullableWithAggregatesFilter<"cliente"> | bigint | number | null
    influencer?: BoolNullableWithAggregatesFilter<"cliente"> | boolean | null
    usuarioid?: IntWithAggregatesFilter<"cliente"> | number
  }

  export type disminucionlimitehorarioWhereInput = {
    AND?: disminucionlimitehorarioWhereInput | disminucionlimitehorarioWhereInput[]
    OR?: disminucionlimitehorarioWhereInput[]
    NOT?: disminucionlimitehorarioWhereInput | disminucionlimitehorarioWhereInput[]
    disminucionhorarioid?: IntFilter<"disminucionlimitehorario"> | number
    clienteid?: IntNullableFilter<"disminucionlimitehorario"> | number | null
    cantidad?: IntNullableFilter<"disminucionlimitehorario"> | number | null
    fecha?: DateTimeNullableFilter<"disminucionlimitehorario"> | Date | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type disminucionlimitehorarioOrderByWithRelationInput = {
    disminucionhorarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type disminucionlimitehorarioWhereUniqueInput = Prisma.AtLeast<{
    disminucionhorarioid?: number
    AND?: disminucionlimitehorarioWhereInput | disminucionlimitehorarioWhereInput[]
    OR?: disminucionlimitehorarioWhereInput[]
    NOT?: disminucionlimitehorarioWhereInput | disminucionlimitehorarioWhereInput[]
    clienteid?: IntNullableFilter<"disminucionlimitehorario"> | number | null
    cantidad?: IntNullableFilter<"disminucionlimitehorario"> | number | null
    fecha?: DateTimeNullableFilter<"disminucionlimitehorario"> | Date | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "disminucionhorarioid">

  export type disminucionlimitehorarioOrderByWithAggregationInput = {
    disminucionhorarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    _count?: disminucionlimitehorarioCountOrderByAggregateInput
    _avg?: disminucionlimitehorarioAvgOrderByAggregateInput
    _max?: disminucionlimitehorarioMaxOrderByAggregateInput
    _min?: disminucionlimitehorarioMinOrderByAggregateInput
    _sum?: disminucionlimitehorarioSumOrderByAggregateInput
  }

  export type disminucionlimitehorarioScalarWhereWithAggregatesInput = {
    AND?: disminucionlimitehorarioScalarWhereWithAggregatesInput | disminucionlimitehorarioScalarWhereWithAggregatesInput[]
    OR?: disminucionlimitehorarioScalarWhereWithAggregatesInput[]
    NOT?: disminucionlimitehorarioScalarWhereWithAggregatesInput | disminucionlimitehorarioScalarWhereWithAggregatesInput[]
    disminucionhorarioid?: IntWithAggregatesFilter<"disminucionlimitehorario"> | number
    clienteid?: IntNullableWithAggregatesFilter<"disminucionlimitehorario"> | number | null
    cantidad?: IntNullableWithAggregatesFilter<"disminucionlimitehorario"> | number | null
    fecha?: DateTimeNullableWithAggregatesFilter<"disminucionlimitehorario"> | Date | string | null
  }

  export type disminucionlimitemonetarioWhereInput = {
    AND?: disminucionlimitemonetarioWhereInput | disminucionlimitemonetarioWhereInput[]
    OR?: disminucionlimitemonetarioWhereInput[]
    NOT?: disminucionlimitemonetarioWhereInput | disminucionlimitemonetarioWhereInput[]
    disminucionmontarioid?: IntFilter<"disminucionlimitemonetario"> | number
    clienteid?: IntNullableFilter<"disminucionlimitemonetario"> | number | null
    cantidad?: DecimalNullableFilter<"disminucionlimitemonetario"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"disminucionlimitemonetario"> | Date | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type disminucionlimitemonetarioOrderByWithRelationInput = {
    disminucionmontarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type disminucionlimitemonetarioWhereUniqueInput = Prisma.AtLeast<{
    disminucionmontarioid?: number
    AND?: disminucionlimitemonetarioWhereInput | disminucionlimitemonetarioWhereInput[]
    OR?: disminucionlimitemonetarioWhereInput[]
    NOT?: disminucionlimitemonetarioWhereInput | disminucionlimitemonetarioWhereInput[]
    clienteid?: IntNullableFilter<"disminucionlimitemonetario"> | number | null
    cantidad?: DecimalNullableFilter<"disminucionlimitemonetario"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"disminucionlimitemonetario"> | Date | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "disminucionmontarioid">

  export type disminucionlimitemonetarioOrderByWithAggregationInput = {
    disminucionmontarioid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    _count?: disminucionlimitemonetarioCountOrderByAggregateInput
    _avg?: disminucionlimitemonetarioAvgOrderByAggregateInput
    _max?: disminucionlimitemonetarioMaxOrderByAggregateInput
    _min?: disminucionlimitemonetarioMinOrderByAggregateInput
    _sum?: disminucionlimitemonetarioSumOrderByAggregateInput
  }

  export type disminucionlimitemonetarioScalarWhereWithAggregatesInput = {
    AND?: disminucionlimitemonetarioScalarWhereWithAggregatesInput | disminucionlimitemonetarioScalarWhereWithAggregatesInput[]
    OR?: disminucionlimitemonetarioScalarWhereWithAggregatesInput[]
    NOT?: disminucionlimitemonetarioScalarWhereWithAggregatesInput | disminucionlimitemonetarioScalarWhereWithAggregatesInput[]
    disminucionmontarioid?: IntWithAggregatesFilter<"disminucionlimitemonetario"> | number
    clienteid?: IntNullableWithAggregatesFilter<"disminucionlimitemonetario"> | number | null
    cantidad?: DecimalNullableWithAggregatesFilter<"disminucionlimitemonetario"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"disminucionlimitemonetario"> | Date | string | null
  }

  export type egresoWhereInput = {
    AND?: egresoWhereInput | egresoWhereInput[]
    OR?: egresoWhereInput[]
    NOT?: egresoWhereInput | egresoWhereInput[]
    egresoid?: IntFilter<"egreso"> | number
    clienteid?: IntNullableFilter<"egreso"> | number | null
    monto?: DecimalNullableFilter<"egreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"egreso"> | Date | string | null
    metododeretiro?: StringNullableFilter<"egreso"> | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type egresoOrderByWithRelationInput = {
    egresoid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    monto?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    metododeretiro?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type egresoWhereUniqueInput = Prisma.AtLeast<{
    egresoid?: number
    AND?: egresoWhereInput | egresoWhereInput[]
    OR?: egresoWhereInput[]
    NOT?: egresoWhereInput | egresoWhereInput[]
    clienteid?: IntNullableFilter<"egreso"> | number | null
    monto?: DecimalNullableFilter<"egreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"egreso"> | Date | string | null
    metododeretiro?: StringNullableFilter<"egreso"> | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "egresoid">

  export type egresoOrderByWithAggregationInput = {
    egresoid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    monto?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    metododeretiro?: SortOrderInput | SortOrder
    _count?: egresoCountOrderByAggregateInput
    _avg?: egresoAvgOrderByAggregateInput
    _max?: egresoMaxOrderByAggregateInput
    _min?: egresoMinOrderByAggregateInput
    _sum?: egresoSumOrderByAggregateInput
  }

  export type egresoScalarWhereWithAggregatesInput = {
    AND?: egresoScalarWhereWithAggregatesInput | egresoScalarWhereWithAggregatesInput[]
    OR?: egresoScalarWhereWithAggregatesInput[]
    NOT?: egresoScalarWhereWithAggregatesInput | egresoScalarWhereWithAggregatesInput[]
    egresoid?: IntWithAggregatesFilter<"egreso"> | number
    clienteid?: IntNullableWithAggregatesFilter<"egreso"> | number | null
    monto?: DecimalNullableWithAggregatesFilter<"egreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"egreso"> | Date | string | null
    metododeretiro?: StringNullableWithAggregatesFilter<"egreso"> | string | null
  }

  export type ingresoWhereInput = {
    AND?: ingresoWhereInput | ingresoWhereInput[]
    OR?: ingresoWhereInput[]
    NOT?: ingresoWhereInput | ingresoWhereInput[]
    ingresoid?: IntFilter<"ingreso"> | number
    clienteid?: IntNullableFilter<"ingreso"> | number | null
    monto?: DecimalNullableFilter<"ingreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"ingreso"> | Date | string | null
    cuponid?: IntNullableFilter<"ingreso"> | number | null
    metododepago?: StringNullableFilter<"ingreso"> | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type ingresoOrderByWithRelationInput = {
    ingresoid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    monto?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    cuponid?: SortOrderInput | SortOrder
    metododepago?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type ingresoWhereUniqueInput = Prisma.AtLeast<{
    ingresoid?: number
    AND?: ingresoWhereInput | ingresoWhereInput[]
    OR?: ingresoWhereInput[]
    NOT?: ingresoWhereInput | ingresoWhereInput[]
    clienteid?: IntNullableFilter<"ingreso"> | number | null
    monto?: DecimalNullableFilter<"ingreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"ingreso"> | Date | string | null
    cuponid?: IntNullableFilter<"ingreso"> | number | null
    metododepago?: StringNullableFilter<"ingreso"> | string | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "ingresoid">

  export type ingresoOrderByWithAggregationInput = {
    ingresoid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    monto?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    cuponid?: SortOrderInput | SortOrder
    metododepago?: SortOrderInput | SortOrder
    _count?: ingresoCountOrderByAggregateInput
    _avg?: ingresoAvgOrderByAggregateInput
    _max?: ingresoMaxOrderByAggregateInput
    _min?: ingresoMinOrderByAggregateInput
    _sum?: ingresoSumOrderByAggregateInput
  }

  export type ingresoScalarWhereWithAggregatesInput = {
    AND?: ingresoScalarWhereWithAggregatesInput | ingresoScalarWhereWithAggregatesInput[]
    OR?: ingresoScalarWhereWithAggregatesInput[]
    NOT?: ingresoScalarWhereWithAggregatesInput | ingresoScalarWhereWithAggregatesInput[]
    ingresoid?: IntWithAggregatesFilter<"ingreso"> | number
    clienteid?: IntNullableWithAggregatesFilter<"ingreso"> | number | null
    monto?: DecimalNullableWithAggregatesFilter<"ingreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"ingreso"> | Date | string | null
    cuponid?: IntNullableWithAggregatesFilter<"ingreso"> | number | null
    metododepago?: StringNullableWithAggregatesFilter<"ingreso"> | string | null
  }

  export type juegoWhereInput = {
    AND?: juegoWhereInput | juegoWhereInput[]
    OR?: juegoWhereInput[]
    NOT?: juegoWhereInput | juegoWhereInput[]
    juegoid?: IntFilter<"juego"> | number
    nombre?: StringNullableFilter<"juego"> | string | null
    tipo?: StringNullableFilter<"juego"> | string | null
    estado?: StringNullableFilter<"juego"> | string | null
  }

  export type juegoOrderByWithRelationInput = {
    juegoid?: SortOrder
    nombre?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
  }

  export type juegoWhereUniqueInput = Prisma.AtLeast<{
    juegoid?: number
    AND?: juegoWhereInput | juegoWhereInput[]
    OR?: juegoWhereInput[]
    NOT?: juegoWhereInput | juegoWhereInput[]
    nombre?: StringNullableFilter<"juego"> | string | null
    tipo?: StringNullableFilter<"juego"> | string | null
    estado?: StringNullableFilter<"juego"> | string | null
  }, "juegoid">

  export type juegoOrderByWithAggregationInput = {
    juegoid?: SortOrder
    nombre?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: juegoCountOrderByAggregateInput
    _avg?: juegoAvgOrderByAggregateInput
    _max?: juegoMaxOrderByAggregateInput
    _min?: juegoMinOrderByAggregateInput
    _sum?: juegoSumOrderByAggregateInput
  }

  export type juegoScalarWhereWithAggregatesInput = {
    AND?: juegoScalarWhereWithAggregatesInput | juegoScalarWhereWithAggregatesInput[]
    OR?: juegoScalarWhereWithAggregatesInput[]
    NOT?: juegoScalarWhereWithAggregatesInput | juegoScalarWhereWithAggregatesInput[]
    juegoid?: IntWithAggregatesFilter<"juego"> | number
    nombre?: StringNullableWithAggregatesFilter<"juego"> | string | null
    tipo?: StringNullableWithAggregatesFilter<"juego"> | string | null
    estado?: StringNullableWithAggregatesFilter<"juego"> | string | null
  }

  export type jugadaWhereInput = {
    AND?: jugadaWhereInput | jugadaWhereInput[]
    OR?: jugadaWhereInput[]
    NOT?: jugadaWhereInput | jugadaWhereInput[]
    jugadaid?: IntFilter<"jugada"> | number
    clienteid?: IntNullableFilter<"jugada"> | number | null
    fecha?: DateTimeNullableFilter<"jugada"> | Date | string | null
    gananciaperdida?: IntNullableFilter<"jugada"> | number | null
    apuesta?: IntNullableFilter<"jugada"> | number | null
    hora?: IntNullableFilter<"jugada"> | number | null
    partidaid?: IntNullableFilter<"jugada"> | number | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
    partida?: XOR<PartidaNullableScalarRelationFilter, partidaWhereInput> | null
  }

  export type jugadaOrderByWithRelationInput = {
    jugadaid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    gananciaperdida?: SortOrderInput | SortOrder
    apuesta?: SortOrderInput | SortOrder
    hora?: SortOrderInput | SortOrder
    partidaid?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
    partida?: partidaOrderByWithRelationInput
  }

  export type jugadaWhereUniqueInput = Prisma.AtLeast<{
    jugadaid?: number
    AND?: jugadaWhereInput | jugadaWhereInput[]
    OR?: jugadaWhereInput[]
    NOT?: jugadaWhereInput | jugadaWhereInput[]
    clienteid?: IntNullableFilter<"jugada"> | number | null
    fecha?: DateTimeNullableFilter<"jugada"> | Date | string | null
    gananciaperdida?: IntNullableFilter<"jugada"> | number | null
    apuesta?: IntNullableFilter<"jugada"> | number | null
    hora?: IntNullableFilter<"jugada"> | number | null
    partidaid?: IntNullableFilter<"jugada"> | number | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
    partida?: XOR<PartidaNullableScalarRelationFilter, partidaWhereInput> | null
  }, "jugadaid">

  export type jugadaOrderByWithAggregationInput = {
    jugadaid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    gananciaperdida?: SortOrderInput | SortOrder
    apuesta?: SortOrderInput | SortOrder
    hora?: SortOrderInput | SortOrder
    partidaid?: SortOrderInput | SortOrder
    _count?: jugadaCountOrderByAggregateInput
    _avg?: jugadaAvgOrderByAggregateInput
    _max?: jugadaMaxOrderByAggregateInput
    _min?: jugadaMinOrderByAggregateInput
    _sum?: jugadaSumOrderByAggregateInput
  }

  export type jugadaScalarWhereWithAggregatesInput = {
    AND?: jugadaScalarWhereWithAggregatesInput | jugadaScalarWhereWithAggregatesInput[]
    OR?: jugadaScalarWhereWithAggregatesInput[]
    NOT?: jugadaScalarWhereWithAggregatesInput | jugadaScalarWhereWithAggregatesInput[]
    jugadaid?: IntWithAggregatesFilter<"jugada"> | number
    clienteid?: IntNullableWithAggregatesFilter<"jugada"> | number | null
    fecha?: DateTimeNullableWithAggregatesFilter<"jugada"> | Date | string | null
    gananciaperdida?: IntNullableWithAggregatesFilter<"jugada"> | number | null
    apuesta?: IntNullableWithAggregatesFilter<"jugada"> | number | null
    hora?: IntNullableWithAggregatesFilter<"jugada"> | number | null
    partidaid?: IntNullableWithAggregatesFilter<"jugada"> | number | null
  }

  export type limitehorarioWhereInput = {
    AND?: limitehorarioWhereInput | limitehorarioWhereInput[]
    OR?: limitehorarioWhereInput[]
    NOT?: limitehorarioWhereInput | limitehorarioWhereInput[]
    clienteid?: IntFilter<"limitehorario"> | number
    limitediario?: IntNullableFilter<"limitehorario"> | number | null
    limitesemanal?: IntNullableFilter<"limitehorario"> | number | null
    limitemensual?: IntNullableFilter<"limitehorario"> | number | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }

  export type limitehorarioOrderByWithRelationInput = {
    clienteid?: SortOrder
    limitediario?: SortOrderInput | SortOrder
    limitesemanal?: SortOrderInput | SortOrder
    limitemensual?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type limitehorarioWhereUniqueInput = Prisma.AtLeast<{
    clienteid?: number
    AND?: limitehorarioWhereInput | limitehorarioWhereInput[]
    OR?: limitehorarioWhereInput[]
    NOT?: limitehorarioWhereInput | limitehorarioWhereInput[]
    limitediario?: IntNullableFilter<"limitehorario"> | number | null
    limitesemanal?: IntNullableFilter<"limitehorario"> | number | null
    limitemensual?: IntNullableFilter<"limitehorario"> | number | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }, "clienteid">

  export type limitehorarioOrderByWithAggregationInput = {
    clienteid?: SortOrder
    limitediario?: SortOrderInput | SortOrder
    limitesemanal?: SortOrderInput | SortOrder
    limitemensual?: SortOrderInput | SortOrder
    _count?: limitehorarioCountOrderByAggregateInput
    _avg?: limitehorarioAvgOrderByAggregateInput
    _max?: limitehorarioMaxOrderByAggregateInput
    _min?: limitehorarioMinOrderByAggregateInput
    _sum?: limitehorarioSumOrderByAggregateInput
  }

  export type limitehorarioScalarWhereWithAggregatesInput = {
    AND?: limitehorarioScalarWhereWithAggregatesInput | limitehorarioScalarWhereWithAggregatesInput[]
    OR?: limitehorarioScalarWhereWithAggregatesInput[]
    NOT?: limitehorarioScalarWhereWithAggregatesInput | limitehorarioScalarWhereWithAggregatesInput[]
    clienteid?: IntWithAggregatesFilter<"limitehorario"> | number
    limitediario?: IntNullableWithAggregatesFilter<"limitehorario"> | number | null
    limitesemanal?: IntNullableWithAggregatesFilter<"limitehorario"> | number | null
    limitemensual?: IntNullableWithAggregatesFilter<"limitehorario"> | number | null
  }

  export type limitemonetarioWhereInput = {
    AND?: limitemonetarioWhereInput | limitemonetarioWhereInput[]
    OR?: limitemonetarioWhereInput[]
    NOT?: limitemonetarioWhereInput | limitemonetarioWhereInput[]
    clienteid?: IntFilter<"limitemonetario"> | number
    limitediario?: DecimalNullableFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: DecimalNullableFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    limitemensual?: DecimalNullableFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }

  export type limitemonetarioOrderByWithRelationInput = {
    clienteid?: SortOrder
    limitediario?: SortOrderInput | SortOrder
    limitesemanal?: SortOrderInput | SortOrder
    limitemensual?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type limitemonetarioWhereUniqueInput = Prisma.AtLeast<{
    clienteid?: number
    AND?: limitemonetarioWhereInput | limitemonetarioWhereInput[]
    OR?: limitemonetarioWhereInput[]
    NOT?: limitemonetarioWhereInput | limitemonetarioWhereInput[]
    limitediario?: DecimalNullableFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: DecimalNullableFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    limitemensual?: DecimalNullableFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }, "clienteid">

  export type limitemonetarioOrderByWithAggregationInput = {
    clienteid?: SortOrder
    limitediario?: SortOrderInput | SortOrder
    limitesemanal?: SortOrderInput | SortOrder
    limitemensual?: SortOrderInput | SortOrder
    _count?: limitemonetarioCountOrderByAggregateInput
    _avg?: limitemonetarioAvgOrderByAggregateInput
    _max?: limitemonetarioMaxOrderByAggregateInput
    _min?: limitemonetarioMinOrderByAggregateInput
    _sum?: limitemonetarioSumOrderByAggregateInput
  }

  export type limitemonetarioScalarWhereWithAggregatesInput = {
    AND?: limitemonetarioScalarWhereWithAggregatesInput | limitemonetarioScalarWhereWithAggregatesInput[]
    OR?: limitemonetarioScalarWhereWithAggregatesInput[]
    NOT?: limitemonetarioScalarWhereWithAggregatesInput | limitemonetarioScalarWhereWithAggregatesInput[]
    clienteid?: IntWithAggregatesFilter<"limitemonetario"> | number
    limitediario?: DecimalNullableWithAggregatesFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: DecimalNullableWithAggregatesFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
    limitemensual?: DecimalNullableWithAggregatesFilter<"limitemonetario"> | Decimal | DecimalJsLike | number | string | null
  }

  export type mensajesWhereInput = {
    AND?: mensajesWhereInput | mensajesWhereInput[]
    OR?: mensajesWhereInput[]
    NOT?: mensajesWhereInput | mensajesWhereInput[]
    ticketid?: IntFilter<"mensajes"> | number
    mensaje?: StringNullableFilter<"mensajes"> | string | null
    tickets?: XOR<TicketsScalarRelationFilter, ticketsWhereInput>
  }

  export type mensajesOrderByWithRelationInput = {
    ticketid?: SortOrder
    mensaje?: SortOrderInput | SortOrder
    tickets?: ticketsOrderByWithRelationInput
  }

  export type mensajesWhereUniqueInput = Prisma.AtLeast<{
    ticketid?: number
    AND?: mensajesWhereInput | mensajesWhereInput[]
    OR?: mensajesWhereInput[]
    NOT?: mensajesWhereInput | mensajesWhereInput[]
    mensaje?: StringNullableFilter<"mensajes"> | string | null
    tickets?: XOR<TicketsScalarRelationFilter, ticketsWhereInput>
  }, "ticketid">

  export type mensajesOrderByWithAggregationInput = {
    ticketid?: SortOrder
    mensaje?: SortOrderInput | SortOrder
    _count?: mensajesCountOrderByAggregateInput
    _avg?: mensajesAvgOrderByAggregateInput
    _max?: mensajesMaxOrderByAggregateInput
    _min?: mensajesMinOrderByAggregateInput
    _sum?: mensajesSumOrderByAggregateInput
  }

  export type mensajesScalarWhereWithAggregatesInput = {
    AND?: mensajesScalarWhereWithAggregatesInput | mensajesScalarWhereWithAggregatesInput[]
    OR?: mensajesScalarWhereWithAggregatesInput[]
    NOT?: mensajesScalarWhereWithAggregatesInput | mensajesScalarWhereWithAggregatesInput[]
    ticketid?: IntWithAggregatesFilter<"mensajes"> | number
    mensaje?: StringNullableWithAggregatesFilter<"mensajes"> | string | null
  }

  export type partidaWhereInput = {
    AND?: partidaWhereInput | partidaWhereInput[]
    OR?: partidaWhereInput[]
    NOT?: partidaWhereInput | partidaWhereInput[]
    partidaid?: IntFilter<"partida"> | number
    clienteid?: IntNullableFilter<"partida"> | number | null
    fecha?: DateTimeNullableFilter<"partida"> | Date | string | null
    gananciaperdida?: IntNullableFilter<"partida"> | number | null
    apuesta?: IntNullableFilter<"partida"> | number | null
    jugada?: JugadaListRelationFilter
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type partidaOrderByWithRelationInput = {
    partidaid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    gananciaperdida?: SortOrderInput | SortOrder
    apuesta?: SortOrderInput | SortOrder
    jugada?: jugadaOrderByRelationAggregateInput
    cliente?: clienteOrderByWithRelationInput
  }

  export type partidaWhereUniqueInput = Prisma.AtLeast<{
    partidaid?: number
    AND?: partidaWhereInput | partidaWhereInput[]
    OR?: partidaWhereInput[]
    NOT?: partidaWhereInput | partidaWhereInput[]
    clienteid?: IntNullableFilter<"partida"> | number | null
    fecha?: DateTimeNullableFilter<"partida"> | Date | string | null
    gananciaperdida?: IntNullableFilter<"partida"> | number | null
    apuesta?: IntNullableFilter<"partida"> | number | null
    jugada?: JugadaListRelationFilter
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "partidaid">

  export type partidaOrderByWithAggregationInput = {
    partidaid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    gananciaperdida?: SortOrderInput | SortOrder
    apuesta?: SortOrderInput | SortOrder
    _count?: partidaCountOrderByAggregateInput
    _avg?: partidaAvgOrderByAggregateInput
    _max?: partidaMaxOrderByAggregateInput
    _min?: partidaMinOrderByAggregateInput
    _sum?: partidaSumOrderByAggregateInput
  }

  export type partidaScalarWhereWithAggregatesInput = {
    AND?: partidaScalarWhereWithAggregatesInput | partidaScalarWhereWithAggregatesInput[]
    OR?: partidaScalarWhereWithAggregatesInput[]
    NOT?: partidaScalarWhereWithAggregatesInput | partidaScalarWhereWithAggregatesInput[]
    partidaid?: IntWithAggregatesFilter<"partida"> | number
    clienteid?: IntNullableWithAggregatesFilter<"partida"> | number | null
    fecha?: DateTimeNullableWithAggregatesFilter<"partida"> | Date | string | null
    gananciaperdida?: IntNullableWithAggregatesFilter<"partida"> | number | null
    apuesta?: IntNullableWithAggregatesFilter<"partida"> | number | null
  }

  export type pausaWhereInput = {
    AND?: pausaWhereInput | pausaWhereInput[]
    OR?: pausaWhereInput[]
    NOT?: pausaWhereInput | pausaWhereInput[]
    clienteid?: IntFilter<"pausa"> | number
    fechainicio?: DateTimeNullableFilter<"pausa"> | Date | string | null
    fechafin?: DateTimeNullableFilter<"pausa"> | Date | string | null
    duracion?: IntNullableFilter<"pausa"> | number | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }

  export type pausaOrderByWithRelationInput = {
    clienteid?: SortOrder
    fechainicio?: SortOrderInput | SortOrder
    fechafin?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type pausaWhereUniqueInput = Prisma.AtLeast<{
    clienteid?: number
    AND?: pausaWhereInput | pausaWhereInput[]
    OR?: pausaWhereInput[]
    NOT?: pausaWhereInput | pausaWhereInput[]
    fechainicio?: DateTimeNullableFilter<"pausa"> | Date | string | null
    fechafin?: DateTimeNullableFilter<"pausa"> | Date | string | null
    duracion?: IntNullableFilter<"pausa"> | number | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }, "clienteid">

  export type pausaOrderByWithAggregationInput = {
    clienteid?: SortOrder
    fechainicio?: SortOrderInput | SortOrder
    fechafin?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    _count?: pausaCountOrderByAggregateInput
    _avg?: pausaAvgOrderByAggregateInput
    _max?: pausaMaxOrderByAggregateInput
    _min?: pausaMinOrderByAggregateInput
    _sum?: pausaSumOrderByAggregateInput
  }

  export type pausaScalarWhereWithAggregatesInput = {
    AND?: pausaScalarWhereWithAggregatesInput | pausaScalarWhereWithAggregatesInput[]
    OR?: pausaScalarWhereWithAggregatesInput[]
    NOT?: pausaScalarWhereWithAggregatesInput | pausaScalarWhereWithAggregatesInput[]
    clienteid?: IntWithAggregatesFilter<"pausa"> | number
    fechainicio?: DateTimeNullableWithAggregatesFilter<"pausa"> | Date | string | null
    fechafin?: DateTimeNullableWithAggregatesFilter<"pausa"> | Date | string | null
    duracion?: IntNullableWithAggregatesFilter<"pausa"> | number | null
  }

  export type promocionWhereInput = {
    AND?: promocionWhereInput | promocionWhereInput[]
    OR?: promocionWhereInput[]
    NOT?: promocionWhereInput | promocionWhereInput[]
    promocionid?: IntFilter<"promocion"> | number
    tipo?: StringNullableFilter<"promocion"> | string | null
    descripcion?: StringNullableFilter<"promocion"> | string | null
    fechainicio?: DateTimeNullableFilter<"promocion"> | Date | string | null
    fechafin?: DateTimeNullableFilter<"promocion"> | Date | string | null
    cantidadusos?: IntNullableFilter<"promocion"> | number | null
    mincarga?: DecimalNullableFilter<"promocion"> | Decimal | DecimalJsLike | number | string | null
    maxcarga?: DecimalNullableFilter<"promocion"> | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionOrderByWithRelationInput = {
    promocionid?: SortOrder
    tipo?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    fechainicio?: SortOrderInput | SortOrder
    fechafin?: SortOrderInput | SortOrder
    cantidadusos?: SortOrderInput | SortOrder
    mincarga?: SortOrderInput | SortOrder
    maxcarga?: SortOrderInput | SortOrder
  }

  export type promocionWhereUniqueInput = Prisma.AtLeast<{
    promocionid?: number
    AND?: promocionWhereInput | promocionWhereInput[]
    OR?: promocionWhereInput[]
    NOT?: promocionWhereInput | promocionWhereInput[]
    tipo?: StringNullableFilter<"promocion"> | string | null
    descripcion?: StringNullableFilter<"promocion"> | string | null
    fechainicio?: DateTimeNullableFilter<"promocion"> | Date | string | null
    fechafin?: DateTimeNullableFilter<"promocion"> | Date | string | null
    cantidadusos?: IntNullableFilter<"promocion"> | number | null
    mincarga?: DecimalNullableFilter<"promocion"> | Decimal | DecimalJsLike | number | string | null
    maxcarga?: DecimalNullableFilter<"promocion"> | Decimal | DecimalJsLike | number | string | null
  }, "promocionid">

  export type promocionOrderByWithAggregationInput = {
    promocionid?: SortOrder
    tipo?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    fechainicio?: SortOrderInput | SortOrder
    fechafin?: SortOrderInput | SortOrder
    cantidadusos?: SortOrderInput | SortOrder
    mincarga?: SortOrderInput | SortOrder
    maxcarga?: SortOrderInput | SortOrder
    _count?: promocionCountOrderByAggregateInput
    _avg?: promocionAvgOrderByAggregateInput
    _max?: promocionMaxOrderByAggregateInput
    _min?: promocionMinOrderByAggregateInput
    _sum?: promocionSumOrderByAggregateInput
  }

  export type promocionScalarWhereWithAggregatesInput = {
    AND?: promocionScalarWhereWithAggregatesInput | promocionScalarWhereWithAggregatesInput[]
    OR?: promocionScalarWhereWithAggregatesInput[]
    NOT?: promocionScalarWhereWithAggregatesInput | promocionScalarWhereWithAggregatesInput[]
    promocionid?: IntWithAggregatesFilter<"promocion"> | number
    tipo?: StringNullableWithAggregatesFilter<"promocion"> | string | null
    descripcion?: StringNullableWithAggregatesFilter<"promocion"> | string | null
    fechainicio?: DateTimeNullableWithAggregatesFilter<"promocion"> | Date | string | null
    fechafin?: DateTimeNullableWithAggregatesFilter<"promocion"> | Date | string | null
    cantidadusos?: IntNullableWithAggregatesFilter<"promocion"> | number | null
    mincarga?: DecimalNullableWithAggregatesFilter<"promocion"> | Decimal | DecimalJsLike | number | string | null
    maxcarga?: DecimalNullableWithAggregatesFilter<"promocion"> | Decimal | DecimalJsLike | number | string | null
  }

  export type suspendidosWhereInput = {
    AND?: suspendidosWhereInput | suspendidosWhereInput[]
    OR?: suspendidosWhereInput[]
    NOT?: suspendidosWhereInput | suspendidosWhereInput[]
    suspendidoid?: IntFilter<"suspendidos"> | number
    clienteid?: IntNullableFilter<"suspendidos"> | number | null
    fechainicio?: DateTimeNullableFilter<"suspendidos"> | Date | string | null
    fechafin?: DateTimeNullableFilter<"suspendidos"> | Date | string | null
    duracion?: IntNullableFilter<"suspendidos"> | number | null
    adminid?: IntNullableFilter<"suspendidos"> | number | null
    razon?: StringNullableFilter<"suspendidos"> | string | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type suspendidosOrderByWithRelationInput = {
    suspendidoid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    fechainicio?: SortOrderInput | SortOrder
    fechafin?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    adminid?: SortOrderInput | SortOrder
    razon?: SortOrderInput | SortOrder
    administrador?: administradorOrderByWithRelationInput
    cliente?: clienteOrderByWithRelationInput
  }

  export type suspendidosWhereUniqueInput = Prisma.AtLeast<{
    suspendidoid?: number
    AND?: suspendidosWhereInput | suspendidosWhereInput[]
    OR?: suspendidosWhereInput[]
    NOT?: suspendidosWhereInput | suspendidosWhereInput[]
    clienteid?: IntNullableFilter<"suspendidos"> | number | null
    fechainicio?: DateTimeNullableFilter<"suspendidos"> | Date | string | null
    fechafin?: DateTimeNullableFilter<"suspendidos"> | Date | string | null
    duracion?: IntNullableFilter<"suspendidos"> | number | null
    adminid?: IntNullableFilter<"suspendidos"> | number | null
    razon?: StringNullableFilter<"suspendidos"> | string | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "suspendidoid">

  export type suspendidosOrderByWithAggregationInput = {
    suspendidoid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    fechainicio?: SortOrderInput | SortOrder
    fechafin?: SortOrderInput | SortOrder
    duracion?: SortOrderInput | SortOrder
    adminid?: SortOrderInput | SortOrder
    razon?: SortOrderInput | SortOrder
    _count?: suspendidosCountOrderByAggregateInput
    _avg?: suspendidosAvgOrderByAggregateInput
    _max?: suspendidosMaxOrderByAggregateInput
    _min?: suspendidosMinOrderByAggregateInput
    _sum?: suspendidosSumOrderByAggregateInput
  }

  export type suspendidosScalarWhereWithAggregatesInput = {
    AND?: suspendidosScalarWhereWithAggregatesInput | suspendidosScalarWhereWithAggregatesInput[]
    OR?: suspendidosScalarWhereWithAggregatesInput[]
    NOT?: suspendidosScalarWhereWithAggregatesInput | suspendidosScalarWhereWithAggregatesInput[]
    suspendidoid?: IntWithAggregatesFilter<"suspendidos"> | number
    clienteid?: IntNullableWithAggregatesFilter<"suspendidos"> | number | null
    fechainicio?: DateTimeNullableWithAggregatesFilter<"suspendidos"> | Date | string | null
    fechafin?: DateTimeNullableWithAggregatesFilter<"suspendidos"> | Date | string | null
    duracion?: IntNullableWithAggregatesFilter<"suspendidos"> | number | null
    adminid?: IntNullableWithAggregatesFilter<"suspendidos"> | number | null
    razon?: StringNullableWithAggregatesFilter<"suspendidos"> | string | null
  }

  export type ticketsWhereInput = {
    AND?: ticketsWhereInput | ticketsWhereInput[]
    OR?: ticketsWhereInput[]
    NOT?: ticketsWhereInput | ticketsWhereInput[]
    ticketid?: IntFilter<"tickets"> | number
    clienteid?: IntNullableFilter<"tickets"> | number | null
    problema?: StringNullableFilter<"tickets"> | string | null
    resuelto?: BoolNullableFilter<"tickets"> | boolean | null
    idadmin?: IntNullableFilter<"tickets"> | number | null
    mensajes?: XOR<MensajesNullableScalarRelationFilter, mensajesWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
  }

  export type ticketsOrderByWithRelationInput = {
    ticketid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    problema?: SortOrderInput | SortOrder
    resuelto?: SortOrderInput | SortOrder
    idadmin?: SortOrderInput | SortOrder
    mensajes?: mensajesOrderByWithRelationInput
    cliente?: clienteOrderByWithRelationInput
    administrador?: administradorOrderByWithRelationInput
  }

  export type ticketsWhereUniqueInput = Prisma.AtLeast<{
    ticketid?: number
    AND?: ticketsWhereInput | ticketsWhereInput[]
    OR?: ticketsWhereInput[]
    NOT?: ticketsWhereInput | ticketsWhereInput[]
    clienteid?: IntNullableFilter<"tickets"> | number | null
    problema?: StringNullableFilter<"tickets"> | string | null
    resuelto?: BoolNullableFilter<"tickets"> | boolean | null
    idadmin?: IntNullableFilter<"tickets"> | number | null
    mensajes?: XOR<MensajesNullableScalarRelationFilter, mensajesWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
  }, "ticketid">

  export type ticketsOrderByWithAggregationInput = {
    ticketid?: SortOrder
    clienteid?: SortOrderInput | SortOrder
    problema?: SortOrderInput | SortOrder
    resuelto?: SortOrderInput | SortOrder
    idadmin?: SortOrderInput | SortOrder
    _count?: ticketsCountOrderByAggregateInput
    _avg?: ticketsAvgOrderByAggregateInput
    _max?: ticketsMaxOrderByAggregateInput
    _min?: ticketsMinOrderByAggregateInput
    _sum?: ticketsSumOrderByAggregateInput
  }

  export type ticketsScalarWhereWithAggregatesInput = {
    AND?: ticketsScalarWhereWithAggregatesInput | ticketsScalarWhereWithAggregatesInput[]
    OR?: ticketsScalarWhereWithAggregatesInput[]
    NOT?: ticketsScalarWhereWithAggregatesInput | ticketsScalarWhereWithAggregatesInput[]
    ticketid?: IntWithAggregatesFilter<"tickets"> | number
    clienteid?: IntNullableWithAggregatesFilter<"tickets"> | number | null
    problema?: StringNullableWithAggregatesFilter<"tickets"> | string | null
    resuelto?: BoolNullableWithAggregatesFilter<"tickets"> | boolean | null
    idadmin?: IntNullableWithAggregatesFilter<"tickets"> | number | null
  }

  export type tiempodejuegoWhereInput = {
    AND?: tiempodejuegoWhereInput | tiempodejuegoWhereInput[]
    OR?: tiempodejuegoWhereInput[]
    NOT?: tiempodejuegoWhereInput | tiempodejuegoWhereInput[]
    clienteid?: IntFilter<"tiempodejuego"> | number
    fecha?: DateTimeFilter<"tiempodejuego"> | Date | string
    tiempo?: IntNullableFilter<"tiempodejuego"> | number | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }

  export type tiempodejuegoOrderByWithRelationInput = {
    clienteid?: SortOrder
    fecha?: SortOrder
    tiempo?: SortOrderInput | SortOrder
    cliente?: clienteOrderByWithRelationInput
  }

  export type tiempodejuegoWhereUniqueInput = Prisma.AtLeast<{
    clienteid_fecha?: tiempodejuegoClienteidFechaCompoundUniqueInput
    AND?: tiempodejuegoWhereInput | tiempodejuegoWhereInput[]
    OR?: tiempodejuegoWhereInput[]
    NOT?: tiempodejuegoWhereInput | tiempodejuegoWhereInput[]
    clienteid?: IntFilter<"tiempodejuego"> | number
    fecha?: DateTimeFilter<"tiempodejuego"> | Date | string
    tiempo?: IntNullableFilter<"tiempodejuego"> | number | null
    cliente?: XOR<ClienteScalarRelationFilter, clienteWhereInput>
  }, "clienteid_fecha">

  export type tiempodejuegoOrderByWithAggregationInput = {
    clienteid?: SortOrder
    fecha?: SortOrder
    tiempo?: SortOrderInput | SortOrder
    _count?: tiempodejuegoCountOrderByAggregateInput
    _avg?: tiempodejuegoAvgOrderByAggregateInput
    _max?: tiempodejuegoMaxOrderByAggregateInput
    _min?: tiempodejuegoMinOrderByAggregateInput
    _sum?: tiempodejuegoSumOrderByAggregateInput
  }

  export type tiempodejuegoScalarWhereWithAggregatesInput = {
    AND?: tiempodejuegoScalarWhereWithAggregatesInput | tiempodejuegoScalarWhereWithAggregatesInput[]
    OR?: tiempodejuegoScalarWhereWithAggregatesInput[]
    NOT?: tiempodejuegoScalarWhereWithAggregatesInput | tiempodejuegoScalarWhereWithAggregatesInput[]
    clienteid?: IntWithAggregatesFilter<"tiempodejuego"> | number
    fecha?: DateTimeWithAggregatesFilter<"tiempodejuego"> | Date | string
    tiempo?: IntNullableWithAggregatesFilter<"tiempodejuego"> | number | null
  }

  export type usuarioWhereInput = {
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    usuarioid?: IntFilter<"usuario"> | number
    nombre?: StringNullableFilter<"usuario"> | string | null
    apellido?: StringNullableFilter<"usuario"> | string | null
    email?: StringNullableFilter<"usuario"> | string | null
    password?: StringNullableFilter<"usuario"> | string | null
    dni?: StringNullableFilter<"usuario"> | string | null
    edad?: StringNullableFilter<"usuario"> | string | null
    img?: BytesNullableFilter<"usuario"> | Uint8Array | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }

  export type usuarioOrderByWithRelationInput = {
    usuarioid?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    dni?: SortOrderInput | SortOrder
    edad?: SortOrderInput | SortOrder
    img?: SortOrderInput | SortOrder
    administrador?: administradorOrderByWithRelationInput
    cliente?: clienteOrderByWithRelationInput
  }

  export type usuarioWhereUniqueInput = Prisma.AtLeast<{
    usuarioid?: number
    email?: string
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    nombre?: StringNullableFilter<"usuario"> | string | null
    apellido?: StringNullableFilter<"usuario"> | string | null
    password?: StringNullableFilter<"usuario"> | string | null
    dni?: StringNullableFilter<"usuario"> | string | null
    edad?: StringNullableFilter<"usuario"> | string | null
    img?: BytesNullableFilter<"usuario"> | Uint8Array | null
    administrador?: XOR<AdministradorNullableScalarRelationFilter, administradorWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, clienteWhereInput> | null
  }, "usuarioid" | "email">

  export type usuarioOrderByWithAggregationInput = {
    usuarioid?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    dni?: SortOrderInput | SortOrder
    edad?: SortOrderInput | SortOrder
    img?: SortOrderInput | SortOrder
    _count?: usuarioCountOrderByAggregateInput
    _avg?: usuarioAvgOrderByAggregateInput
    _max?: usuarioMaxOrderByAggregateInput
    _min?: usuarioMinOrderByAggregateInput
    _sum?: usuarioSumOrderByAggregateInput
  }

  export type usuarioScalarWhereWithAggregatesInput = {
    AND?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    OR?: usuarioScalarWhereWithAggregatesInput[]
    NOT?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    usuarioid?: IntWithAggregatesFilter<"usuario"> | number
    nombre?: StringNullableWithAggregatesFilter<"usuario"> | string | null
    apellido?: StringNullableWithAggregatesFilter<"usuario"> | string | null
    email?: StringNullableWithAggregatesFilter<"usuario"> | string | null
    password?: StringNullableWithAggregatesFilter<"usuario"> | string | null
    dni?: StringNullableWithAggregatesFilter<"usuario"> | string | null
    edad?: StringNullableWithAggregatesFilter<"usuario"> | string | null
    img?: BytesNullableWithAggregatesFilter<"usuario"> | Uint8Array | null
  }

  export type administradorCreateInput = {
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuario: usuarioCreateNestedOneWithoutAdministradorInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsCreateNestedManyWithoutAdministradorInput
  }

  export type administradorUncheckedCreateInput = {
    adminid?: number
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuarioid: number
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutAdministradorInput
  }

  export type administradorUpdateInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuario?: usuarioUpdateOneRequiredWithoutAdministradorNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUpdateManyWithoutAdministradorNestedInput
  }

  export type administradorUncheckedUpdateInput = {
    adminid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutAdministradorNestedInput
  }

  export type administradorCreateManyInput = {
    adminid?: number
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuarioid: number
  }

  export type administradorUpdateManyMutationInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type administradorUncheckedUpdateManyInput = {
    adminid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
  }

  export type amistadCreateInput = {
    aceptada?: boolean | null
    cliente_amistad_cliente2idTocliente?: clienteCreateNestedOneWithoutAmistad_amistad_cliente2idToclienteInput
    cliente_amistad_clienteidTocliente?: clienteCreateNestedOneWithoutAmistad_amistad_clienteidToclienteInput
  }

  export type amistadUncheckedCreateInput = {
    amistadid?: number
    clienteid?: number | null
    cliente2id?: number | null
    aceptada?: boolean | null
  }

  export type amistadUpdateInput = {
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cliente_amistad_cliente2idTocliente?: clienteUpdateOneWithoutAmistad_amistad_cliente2idToclienteNestedInput
    cliente_amistad_clienteidTocliente?: clienteUpdateOneWithoutAmistad_amistad_clienteidToclienteNestedInput
  }

  export type amistadUncheckedUpdateInput = {
    amistadid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cliente2id?: NullableIntFieldUpdateOperationsInput | number | null
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type amistadCreateManyInput = {
    amistadid?: number
    clienteid?: number | null
    cliente2id?: number | null
    aceptada?: boolean | null
  }

  export type amistadUpdateManyMutationInput = {
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type amistadUncheckedUpdateManyInput = {
    amistadid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cliente2id?: NullableIntFieldUpdateOperationsInput | number | null
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type aumentolimitehorarioCreateInput = {
    cantidad?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
    administrador?: administradorCreateNestedOneWithoutAumentolimitehorarioInput
    cliente?: clienteCreateNestedOneWithoutAumentolimitehorarioInput
  }

  export type aumentolimitehorarioUncheckedCreateInput = {
    aumenthorarioid?: number
    clienteid?: number | null
    cantidad?: number | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitehorarioUpdateInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administrador?: administradorUpdateOneWithoutAumentolimitehorarioNestedInput
    cliente?: clienteUpdateOneWithoutAumentolimitehorarioNestedInput
  }

  export type aumentolimitehorarioUncheckedUpdateInput = {
    aumenthorarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitehorarioCreateManyInput = {
    aumenthorarioid?: number
    clienteid?: number | null
    cantidad?: number | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitehorarioUpdateManyMutationInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitehorarioUncheckedUpdateManyInput = {
    aumenthorarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitesmonetarioCreateInput = {
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
    administrador?: administradorCreateNestedOneWithoutAumentolimitesmonetarioInput
    cliente?: clienteCreateNestedOneWithoutAumentolimitesmonetarioInput
  }

  export type aumentolimitesmonetarioUncheckedCreateInput = {
    aumentomonetarioid?: number
    clienteid?: number | null
    cantidad?: Decimal | DecimalJsLike | number | string | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitesmonetarioUpdateInput = {
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administrador?: administradorUpdateOneWithoutAumentolimitesmonetarioNestedInput
    cliente?: clienteUpdateOneWithoutAumentolimitesmonetarioNestedInput
  }

  export type aumentolimitesmonetarioUncheckedUpdateInput = {
    aumentomonetarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitesmonetarioCreateManyInput = {
    aumentomonetarioid?: number
    clienteid?: number | null
    cantidad?: Decimal | DecimalJsLike | number | string | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitesmonetarioUpdateManyMutationInput = {
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitesmonetarioUncheckedUpdateManyInput = {
    aumentomonetarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type clienteCreateInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteUpdateInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateManyInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
  }

  export type clienteUpdateManyMutationInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type clienteUncheckedUpdateManyInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
  }

  export type disminucionlimitehorarioCreateInput = {
    cantidad?: number | null
    fecha?: Date | string | null
    cliente?: clienteCreateNestedOneWithoutDisminucionlimitehorarioInput
  }

  export type disminucionlimitehorarioUncheckedCreateInput = {
    disminucionhorarioid?: number
    clienteid?: number | null
    cantidad?: number | null
    fecha?: Date | string | null
  }

  export type disminucionlimitehorarioUpdateInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cliente?: clienteUpdateOneWithoutDisminucionlimitehorarioNestedInput
  }

  export type disminucionlimitehorarioUncheckedUpdateInput = {
    disminucionhorarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitehorarioCreateManyInput = {
    disminucionhorarioid?: number
    clienteid?: number | null
    cantidad?: number | null
    fecha?: Date | string | null
  }

  export type disminucionlimitehorarioUpdateManyMutationInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitehorarioUncheckedUpdateManyInput = {
    disminucionhorarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitemonetarioCreateInput = {
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    cliente?: clienteCreateNestedOneWithoutDisminucionlimitemonetarioInput
  }

  export type disminucionlimitemonetarioUncheckedCreateInput = {
    disminucionmontarioid?: number
    clienteid?: number | null
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type disminucionlimitemonetarioUpdateInput = {
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cliente?: clienteUpdateOneWithoutDisminucionlimitemonetarioNestedInput
  }

  export type disminucionlimitemonetarioUncheckedUpdateInput = {
    disminucionmontarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitemonetarioCreateManyInput = {
    disminucionmontarioid?: number
    clienteid?: number | null
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type disminucionlimitemonetarioUpdateManyMutationInput = {
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitemonetarioUncheckedUpdateManyInput = {
    disminucionmontarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type egresoCreateInput = {
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    metododeretiro?: string | null
    cliente?: clienteCreateNestedOneWithoutEgresoInput
  }

  export type egresoUncheckedCreateInput = {
    egresoid?: number
    clienteid?: number | null
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    metododeretiro?: string | null
  }

  export type egresoUpdateInput = {
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metododeretiro?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: clienteUpdateOneWithoutEgresoNestedInput
  }

  export type egresoUncheckedUpdateInput = {
    egresoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metododeretiro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type egresoCreateManyInput = {
    egresoid?: number
    clienteid?: number | null
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    metododeretiro?: string | null
  }

  export type egresoUpdateManyMutationInput = {
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metododeretiro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type egresoUncheckedUpdateManyInput = {
    egresoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metododeretiro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ingresoCreateInput = {
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    cuponid?: number | null
    metododepago?: string | null
    cliente?: clienteCreateNestedOneWithoutIngresoInput
  }

  export type ingresoUncheckedCreateInput = {
    ingresoid?: number
    clienteid?: number | null
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    cuponid?: number | null
    metododepago?: string | null
  }

  export type ingresoUpdateInput = {
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cuponid?: NullableIntFieldUpdateOperationsInput | number | null
    metododepago?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: clienteUpdateOneWithoutIngresoNestedInput
  }

  export type ingresoUncheckedUpdateInput = {
    ingresoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cuponid?: NullableIntFieldUpdateOperationsInput | number | null
    metododepago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ingresoCreateManyInput = {
    ingresoid?: number
    clienteid?: number | null
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    cuponid?: number | null
    metododepago?: string | null
  }

  export type ingresoUpdateManyMutationInput = {
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cuponid?: NullableIntFieldUpdateOperationsInput | number | null
    metododepago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ingresoUncheckedUpdateManyInput = {
    ingresoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cuponid?: NullableIntFieldUpdateOperationsInput | number | null
    metododepago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type juegoCreateInput = {
    nombre?: string | null
    tipo?: string | null
    estado?: string | null
  }

  export type juegoUncheckedCreateInput = {
    juegoid?: number
    nombre?: string | null
    tipo?: string | null
    estado?: string | null
  }

  export type juegoUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type juegoUncheckedUpdateInput = {
    juegoid?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type juegoCreateManyInput = {
    juegoid?: number
    nombre?: string | null
    tipo?: string | null
    estado?: string | null
  }

  export type juegoUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type juegoUncheckedUpdateManyInput = {
    juegoid?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type jugadaCreateInput = {
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
    cliente?: clienteCreateNestedOneWithoutJugadaInput
    partida?: partidaCreateNestedOneWithoutJugadaInput
  }

  export type jugadaUncheckedCreateInput = {
    jugadaid?: number
    clienteid?: number | null
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
    partidaid?: number | null
  }

  export type jugadaUpdateInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: clienteUpdateOneWithoutJugadaNestedInput
    partida?: partidaUpdateOneWithoutJugadaNestedInput
  }

  export type jugadaUncheckedUpdateInput = {
    jugadaid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
    partidaid?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type jugadaCreateManyInput = {
    jugadaid?: number
    clienteid?: number | null
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
    partidaid?: number | null
  }

  export type jugadaUpdateManyMutationInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type jugadaUncheckedUpdateManyInput = {
    jugadaid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
    partidaid?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type limitehorarioCreateInput = {
    limitediario?: number | null
    limitesemanal?: number | null
    limitemensual?: number | null
    cliente: clienteCreateNestedOneWithoutLimitehorarioInput
  }

  export type limitehorarioUncheckedCreateInput = {
    clienteid: number
    limitediario?: number | null
    limitesemanal?: number | null
    limitemensual?: number | null
  }

  export type limitehorarioUpdateInput = {
    limitediario?: NullableIntFieldUpdateOperationsInput | number | null
    limitesemanal?: NullableIntFieldUpdateOperationsInput | number | null
    limitemensual?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: clienteUpdateOneRequiredWithoutLimitehorarioNestedInput
  }

  export type limitehorarioUncheckedUpdateInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    limitediario?: NullableIntFieldUpdateOperationsInput | number | null
    limitesemanal?: NullableIntFieldUpdateOperationsInput | number | null
    limitemensual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type limitehorarioCreateManyInput = {
    clienteid: number
    limitediario?: number | null
    limitesemanal?: number | null
    limitemensual?: number | null
  }

  export type limitehorarioUpdateManyMutationInput = {
    limitediario?: NullableIntFieldUpdateOperationsInput | number | null
    limitesemanal?: NullableIntFieldUpdateOperationsInput | number | null
    limitemensual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type limitehorarioUncheckedUpdateManyInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    limitediario?: NullableIntFieldUpdateOperationsInput | number | null
    limitesemanal?: NullableIntFieldUpdateOperationsInput | number | null
    limitemensual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type limitemonetarioCreateInput = {
    limitediario?: Decimal | DecimalJsLike | number | string | null
    limitesemanal?: Decimal | DecimalJsLike | number | string | null
    limitemensual?: Decimal | DecimalJsLike | number | string | null
    cliente: clienteCreateNestedOneWithoutLimitemonetarioInput
  }

  export type limitemonetarioUncheckedCreateInput = {
    clienteid: number
    limitediario?: Decimal | DecimalJsLike | number | string | null
    limitesemanal?: Decimal | DecimalJsLike | number | string | null
    limitemensual?: Decimal | DecimalJsLike | number | string | null
  }

  export type limitemonetarioUpdateInput = {
    limitediario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitemensual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cliente?: clienteUpdateOneRequiredWithoutLimitemonetarioNestedInput
  }

  export type limitemonetarioUncheckedUpdateInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    limitediario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitemensual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type limitemonetarioCreateManyInput = {
    clienteid: number
    limitediario?: Decimal | DecimalJsLike | number | string | null
    limitesemanal?: Decimal | DecimalJsLike | number | string | null
    limitemensual?: Decimal | DecimalJsLike | number | string | null
  }

  export type limitemonetarioUpdateManyMutationInput = {
    limitediario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitemensual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type limitemonetarioUncheckedUpdateManyInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    limitediario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitemensual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type mensajesCreateInput = {
    mensaje?: string | null
    tickets: ticketsCreateNestedOneWithoutMensajesInput
  }

  export type mensajesUncheckedCreateInput = {
    ticketid: number
    mensaje?: string | null
  }

  export type mensajesUpdateInput = {
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    tickets?: ticketsUpdateOneRequiredWithoutMensajesNestedInput
  }

  export type mensajesUncheckedUpdateInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mensajesCreateManyInput = {
    ticketid: number
    mensaje?: string | null
  }

  export type mensajesUpdateManyMutationInput = {
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mensajesUncheckedUpdateManyInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type partidaCreateInput = {
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    jugada?: jugadaCreateNestedManyWithoutPartidaInput
    cliente?: clienteCreateNestedOneWithoutPartidaInput
  }

  export type partidaUncheckedCreateInput = {
    partidaid?: number
    clienteid?: number | null
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    jugada?: jugadaUncheckedCreateNestedManyWithoutPartidaInput
  }

  export type partidaUpdateInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    jugada?: jugadaUpdateManyWithoutPartidaNestedInput
    cliente?: clienteUpdateOneWithoutPartidaNestedInput
  }

  export type partidaUncheckedUpdateInput = {
    partidaid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    jugada?: jugadaUncheckedUpdateManyWithoutPartidaNestedInput
  }

  export type partidaCreateManyInput = {
    partidaid?: number
    clienteid?: number | null
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
  }

  export type partidaUpdateManyMutationInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type partidaUncheckedUpdateManyInput = {
    partidaid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type pausaCreateInput = {
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    cliente: clienteCreateNestedOneWithoutPausaInput
  }

  export type pausaUncheckedCreateInput = {
    clienteid: number
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
  }

  export type pausaUpdateInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: clienteUpdateOneRequiredWithoutPausaNestedInput
  }

  export type pausaUncheckedUpdateInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type pausaCreateManyInput = {
    clienteid: number
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
  }

  export type pausaUpdateManyMutationInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type pausaUncheckedUpdateManyInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type promocionCreateInput = {
    tipo?: string | null
    descripcion?: string | null
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    cantidadusos?: number | null
    mincarga?: Decimal | DecimalJsLike | number | string | null
    maxcarga?: Decimal | DecimalJsLike | number | string | null
  }

  export type promocionUncheckedCreateInput = {
    promocionid?: number
    tipo?: string | null
    descripcion?: string | null
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    cantidadusos?: number | null
    mincarga?: Decimal | DecimalJsLike | number | string | null
    maxcarga?: Decimal | DecimalJsLike | number | string | null
  }

  export type promocionUpdateInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidadusos?: NullableIntFieldUpdateOperationsInput | number | null
    mincarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxcarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionUncheckedUpdateInput = {
    promocionid?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidadusos?: NullableIntFieldUpdateOperationsInput | number | null
    mincarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxcarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionCreateManyInput = {
    promocionid?: number
    tipo?: string | null
    descripcion?: string | null
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    cantidadusos?: number | null
    mincarga?: Decimal | DecimalJsLike | number | string | null
    maxcarga?: Decimal | DecimalJsLike | number | string | null
  }

  export type promocionUpdateManyMutationInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidadusos?: NullableIntFieldUpdateOperationsInput | number | null
    mincarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxcarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promocionUncheckedUpdateManyInput = {
    promocionid?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidadusos?: NullableIntFieldUpdateOperationsInput | number | null
    mincarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxcarga?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type suspendidosCreateInput = {
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    razon?: string | null
    administrador?: administradorCreateNestedOneWithoutSuspendidosInput
    cliente?: clienteCreateNestedOneWithoutSuspendidosInput
  }

  export type suspendidosUncheckedCreateInput = {
    suspendidoid?: number
    clienteid?: number | null
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    adminid?: number | null
    razon?: string | null
  }

  export type suspendidosUpdateInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
    administrador?: administradorUpdateOneWithoutSuspendidosNestedInput
    cliente?: clienteUpdateOneWithoutSuspendidosNestedInput
  }

  export type suspendidosUncheckedUpdateInput = {
    suspendidoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type suspendidosCreateManyInput = {
    suspendidoid?: number
    clienteid?: number | null
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    adminid?: number | null
    razon?: string | null
  }

  export type suspendidosUpdateManyMutationInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type suspendidosUncheckedUpdateManyInput = {
    suspendidoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ticketsCreateInput = {
    problema?: string | null
    resuelto?: boolean | null
    mensajes?: mensajesCreateNestedOneWithoutTicketsInput
    cliente?: clienteCreateNestedOneWithoutTicketsInput
    administrador?: administradorCreateNestedOneWithoutTicketsInput
  }

  export type ticketsUncheckedCreateInput = {
    ticketid?: number
    clienteid?: number | null
    problema?: string | null
    resuelto?: boolean | null
    idadmin?: number | null
    mensajes?: mensajesUncheckedCreateNestedOneWithoutTicketsInput
  }

  export type ticketsUpdateInput = {
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    mensajes?: mensajesUpdateOneWithoutTicketsNestedInput
    cliente?: clienteUpdateOneWithoutTicketsNestedInput
    administrador?: administradorUpdateOneWithoutTicketsNestedInput
  }

  export type ticketsUncheckedUpdateInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    idadmin?: NullableIntFieldUpdateOperationsInput | number | null
    mensajes?: mensajesUncheckedUpdateOneWithoutTicketsNestedInput
  }

  export type ticketsCreateManyInput = {
    ticketid?: number
    clienteid?: number | null
    problema?: string | null
    resuelto?: boolean | null
    idadmin?: number | null
  }

  export type ticketsUpdateManyMutationInput = {
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ticketsUncheckedUpdateManyInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    idadmin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tiempodejuegoCreateInput = {
    fecha: Date | string
    tiempo?: number | null
    cliente: clienteCreateNestedOneWithoutTiempodejuegoInput
  }

  export type tiempodejuegoUncheckedCreateInput = {
    clienteid: number
    fecha: Date | string
    tiempo?: number | null
  }

  export type tiempodejuegoUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tiempo?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: clienteUpdateOneRequiredWithoutTiempodejuegoNestedInput
  }

  export type tiempodejuegoUncheckedUpdateInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tiempo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tiempodejuegoCreateManyInput = {
    clienteid: number
    fecha: Date | string
    tiempo?: number | null
  }

  export type tiempodejuegoUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tiempo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tiempodejuegoUncheckedUpdateManyInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tiempo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usuarioCreateInput = {
    nombre?: string | null
    apellido?: string | null
    email?: string | null
    password?: string | null
    dni?: string | null
    edad?: string | null
    img?: Uint8Array | null
    administrador?: administradorCreateNestedOneWithoutUsuarioInput
    cliente?: clienteCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateInput = {
    usuarioid?: number
    nombre?: string | null
    apellido?: string | null
    email?: string | null
    password?: string | null
    dni?: string | null
    edad?: string | null
    img?: Uint8Array | null
    administrador?: administradorUncheckedCreateNestedOneWithoutUsuarioInput
    cliente?: clienteUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
    administrador?: administradorUpdateOneWithoutUsuarioNestedInput
    cliente?: clienteUpdateOneWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateInput = {
    usuarioid?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
    administrador?: administradorUncheckedUpdateOneWithoutUsuarioNestedInput
    cliente?: clienteUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type usuarioCreateManyInput = {
    usuarioid?: number
    nombre?: string | null
    apellido?: string | null
    email?: string | null
    password?: string | null
    dni?: string | null
    edad?: string | null
    img?: Uint8Array | null
  }

  export type usuarioUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type usuarioUncheckedUpdateManyInput = {
    usuarioid?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type UsuarioScalarRelationFilter = {
    is?: usuarioWhereInput
    isNot?: usuarioWhereInput
  }

  export type AumentolimitehorarioListRelationFilter = {
    every?: aumentolimitehorarioWhereInput
    some?: aumentolimitehorarioWhereInput
    none?: aumentolimitehorarioWhereInput
  }

  export type AumentolimitesmonetarioListRelationFilter = {
    every?: aumentolimitesmonetarioWhereInput
    some?: aumentolimitesmonetarioWhereInput
    none?: aumentolimitesmonetarioWhereInput
  }

  export type SuspendidosListRelationFilter = {
    every?: suspendidosWhereInput
    some?: suspendidosWhereInput
    none?: suspendidosWhereInput
  }

  export type TicketsListRelationFilter = {
    every?: ticketsWhereInput
    some?: ticketsWhereInput
    none?: ticketsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type aumentolimitehorarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type aumentolimitesmonetarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type suspendidosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ticketsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type administradorCountOrderByAggregateInput = {
    adminid?: SortOrder
    balance?: SortOrder
    superadmin?: SortOrder
    usuarioid?: SortOrder
  }

  export type administradorAvgOrderByAggregateInput = {
    adminid?: SortOrder
    balance?: SortOrder
    usuarioid?: SortOrder
  }

  export type administradorMaxOrderByAggregateInput = {
    adminid?: SortOrder
    balance?: SortOrder
    superadmin?: SortOrder
    usuarioid?: SortOrder
  }

  export type administradorMinOrderByAggregateInput = {
    adminid?: SortOrder
    balance?: SortOrder
    superadmin?: SortOrder
    usuarioid?: SortOrder
  }

  export type administradorSumOrderByAggregateInput = {
    adminid?: SortOrder
    balance?: SortOrder
    usuarioid?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ClienteNullableScalarRelationFilter = {
    is?: clienteWhereInput | null
    isNot?: clienteWhereInput | null
  }

  export type amistadCountOrderByAggregateInput = {
    amistadid?: SortOrder
    clienteid?: SortOrder
    cliente2id?: SortOrder
    aceptada?: SortOrder
  }

  export type amistadAvgOrderByAggregateInput = {
    amistadid?: SortOrder
    clienteid?: SortOrder
    cliente2id?: SortOrder
  }

  export type amistadMaxOrderByAggregateInput = {
    amistadid?: SortOrder
    clienteid?: SortOrder
    cliente2id?: SortOrder
    aceptada?: SortOrder
  }

  export type amistadMinOrderByAggregateInput = {
    amistadid?: SortOrder
    clienteid?: SortOrder
    cliente2id?: SortOrder
    aceptada?: SortOrder
  }

  export type amistadSumOrderByAggregateInput = {
    amistadid?: SortOrder
    clienteid?: SortOrder
    cliente2id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type AdministradorNullableScalarRelationFilter = {
    is?: administradorWhereInput | null
    isNot?: administradorWhereInput | null
  }

  export type aumentolimitehorarioCountOrderByAggregateInput = {
    aumenthorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
    fechaabierto?: SortOrder
    fecharesuelto?: SortOrder
  }

  export type aumentolimitehorarioAvgOrderByAggregateInput = {
    aumenthorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
  }

  export type aumentolimitehorarioMaxOrderByAggregateInput = {
    aumenthorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
    fechaabierto?: SortOrder
    fecharesuelto?: SortOrder
  }

  export type aumentolimitehorarioMinOrderByAggregateInput = {
    aumenthorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
    fechaabierto?: SortOrder
    fecharesuelto?: SortOrder
  }

  export type aumentolimitehorarioSumOrderByAggregateInput = {
    aumenthorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type aumentolimitesmonetarioCountOrderByAggregateInput = {
    aumentomonetarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
    fechaabierto?: SortOrder
    fecharesuelto?: SortOrder
  }

  export type aumentolimitesmonetarioAvgOrderByAggregateInput = {
    aumentomonetarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
  }

  export type aumentolimitesmonetarioMaxOrderByAggregateInput = {
    aumentomonetarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
    fechaabierto?: SortOrder
    fecharesuelto?: SortOrder
  }

  export type aumentolimitesmonetarioMinOrderByAggregateInput = {
    aumentomonetarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
    fechaabierto?: SortOrder
    fecharesuelto?: SortOrder
  }

  export type aumentolimitesmonetarioSumOrderByAggregateInput = {
    aumentomonetarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    adminid?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type AmistadListRelationFilter = {
    every?: amistadWhereInput
    some?: amistadWhereInput
    none?: amistadWhereInput
  }

  export type DisminucionlimitehorarioListRelationFilter = {
    every?: disminucionlimitehorarioWhereInput
    some?: disminucionlimitehorarioWhereInput
    none?: disminucionlimitehorarioWhereInput
  }

  export type DisminucionlimitemonetarioListRelationFilter = {
    every?: disminucionlimitemonetarioWhereInput
    some?: disminucionlimitemonetarioWhereInput
    none?: disminucionlimitemonetarioWhereInput
  }

  export type EgresoListRelationFilter = {
    every?: egresoWhereInput
    some?: egresoWhereInput
    none?: egresoWhereInput
  }

  export type IngresoListRelationFilter = {
    every?: ingresoWhereInput
    some?: ingresoWhereInput
    none?: ingresoWhereInput
  }

  export type JugadaListRelationFilter = {
    every?: jugadaWhereInput
    some?: jugadaWhereInput
    none?: jugadaWhereInput
  }

  export type LimitehorarioNullableScalarRelationFilter = {
    is?: limitehorarioWhereInput | null
    isNot?: limitehorarioWhereInput | null
  }

  export type LimitemonetarioNullableScalarRelationFilter = {
    is?: limitemonetarioWhereInput | null
    isNot?: limitemonetarioWhereInput | null
  }

  export type PartidaListRelationFilter = {
    every?: partidaWhereInput
    some?: partidaWhereInput
    none?: partidaWhereInput
  }

  export type PausaNullableScalarRelationFilter = {
    is?: pausaWhereInput | null
    isNot?: pausaWhereInput | null
  }

  export type TiempodejuegoListRelationFilter = {
    every?: tiempodejuegoWhereInput
    some?: tiempodejuegoWhereInput
    none?: tiempodejuegoWhereInput
  }

  export type amistadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type disminucionlimitehorarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type disminucionlimitemonetarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type egresoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ingresoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type jugadaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type partidaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tiempodejuegoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clienteCountOrderByAggregateInput = {
    clienteid?: SortOrder
    balance?: SortOrder
    influencer?: SortOrder
    usuarioid?: SortOrder
  }

  export type clienteAvgOrderByAggregateInput = {
    clienteid?: SortOrder
    balance?: SortOrder
    usuarioid?: SortOrder
  }

  export type clienteMaxOrderByAggregateInput = {
    clienteid?: SortOrder
    balance?: SortOrder
    influencer?: SortOrder
    usuarioid?: SortOrder
  }

  export type clienteMinOrderByAggregateInput = {
    clienteid?: SortOrder
    balance?: SortOrder
    influencer?: SortOrder
    usuarioid?: SortOrder
  }

  export type clienteSumOrderByAggregateInput = {
    clienteid?: SortOrder
    balance?: SortOrder
    usuarioid?: SortOrder
  }

  export type disminucionlimitehorarioCountOrderByAggregateInput = {
    disminucionhorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
  }

  export type disminucionlimitehorarioAvgOrderByAggregateInput = {
    disminucionhorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
  }

  export type disminucionlimitehorarioMaxOrderByAggregateInput = {
    disminucionhorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
  }

  export type disminucionlimitehorarioMinOrderByAggregateInput = {
    disminucionhorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
  }

  export type disminucionlimitehorarioSumOrderByAggregateInput = {
    disminucionhorarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
  }

  export type disminucionlimitemonetarioCountOrderByAggregateInput = {
    disminucionmontarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
  }

  export type disminucionlimitemonetarioAvgOrderByAggregateInput = {
    disminucionmontarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
  }

  export type disminucionlimitemonetarioMaxOrderByAggregateInput = {
    disminucionmontarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
  }

  export type disminucionlimitemonetarioMinOrderByAggregateInput = {
    disminucionmontarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
  }

  export type disminucionlimitemonetarioSumOrderByAggregateInput = {
    disminucionmontarioid?: SortOrder
    clienteid?: SortOrder
    cantidad?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type egresoCountOrderByAggregateInput = {
    egresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metododeretiro?: SortOrder
  }

  export type egresoAvgOrderByAggregateInput = {
    egresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
  }

  export type egresoMaxOrderByAggregateInput = {
    egresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metododeretiro?: SortOrder
  }

  export type egresoMinOrderByAggregateInput = {
    egresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    metododeretiro?: SortOrder
  }

  export type egresoSumOrderByAggregateInput = {
    egresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type ingresoCountOrderByAggregateInput = {
    ingresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    cuponid?: SortOrder
    metododepago?: SortOrder
  }

  export type ingresoAvgOrderByAggregateInput = {
    ingresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    cuponid?: SortOrder
  }

  export type ingresoMaxOrderByAggregateInput = {
    ingresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    cuponid?: SortOrder
    metododepago?: SortOrder
  }

  export type ingresoMinOrderByAggregateInput = {
    ingresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    fecha?: SortOrder
    cuponid?: SortOrder
    metododepago?: SortOrder
  }

  export type ingresoSumOrderByAggregateInput = {
    ingresoid?: SortOrder
    clienteid?: SortOrder
    monto?: SortOrder
    cuponid?: SortOrder
  }

  export type juegoCountOrderByAggregateInput = {
    juegoid?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    estado?: SortOrder
  }

  export type juegoAvgOrderByAggregateInput = {
    juegoid?: SortOrder
  }

  export type juegoMaxOrderByAggregateInput = {
    juegoid?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    estado?: SortOrder
  }

  export type juegoMinOrderByAggregateInput = {
    juegoid?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    estado?: SortOrder
  }

  export type juegoSumOrderByAggregateInput = {
    juegoid?: SortOrder
  }

  export type PartidaNullableScalarRelationFilter = {
    is?: partidaWhereInput | null
    isNot?: partidaWhereInput | null
  }

  export type jugadaCountOrderByAggregateInput = {
    jugadaid?: SortOrder
    clienteid?: SortOrder
    fecha?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
    hora?: SortOrder
    partidaid?: SortOrder
  }

  export type jugadaAvgOrderByAggregateInput = {
    jugadaid?: SortOrder
    clienteid?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
    hora?: SortOrder
    partidaid?: SortOrder
  }

  export type jugadaMaxOrderByAggregateInput = {
    jugadaid?: SortOrder
    clienteid?: SortOrder
    fecha?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
    hora?: SortOrder
    partidaid?: SortOrder
  }

  export type jugadaMinOrderByAggregateInput = {
    jugadaid?: SortOrder
    clienteid?: SortOrder
    fecha?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
    hora?: SortOrder
    partidaid?: SortOrder
  }

  export type jugadaSumOrderByAggregateInput = {
    jugadaid?: SortOrder
    clienteid?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
    hora?: SortOrder
    partidaid?: SortOrder
  }

  export type ClienteScalarRelationFilter = {
    is?: clienteWhereInput
    isNot?: clienteWhereInput
  }

  export type limitehorarioCountOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitehorarioAvgOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitehorarioMaxOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitehorarioMinOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitehorarioSumOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitemonetarioCountOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitemonetarioAvgOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitemonetarioMaxOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitemonetarioMinOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type limitemonetarioSumOrderByAggregateInput = {
    clienteid?: SortOrder
    limitediario?: SortOrder
    limitesemanal?: SortOrder
    limitemensual?: SortOrder
  }

  export type TicketsScalarRelationFilter = {
    is?: ticketsWhereInput
    isNot?: ticketsWhereInput
  }

  export type mensajesCountOrderByAggregateInput = {
    ticketid?: SortOrder
    mensaje?: SortOrder
  }

  export type mensajesAvgOrderByAggregateInput = {
    ticketid?: SortOrder
  }

  export type mensajesMaxOrderByAggregateInput = {
    ticketid?: SortOrder
    mensaje?: SortOrder
  }

  export type mensajesMinOrderByAggregateInput = {
    ticketid?: SortOrder
    mensaje?: SortOrder
  }

  export type mensajesSumOrderByAggregateInput = {
    ticketid?: SortOrder
  }

  export type partidaCountOrderByAggregateInput = {
    partidaid?: SortOrder
    clienteid?: SortOrder
    fecha?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
  }

  export type partidaAvgOrderByAggregateInput = {
    partidaid?: SortOrder
    clienteid?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
  }

  export type partidaMaxOrderByAggregateInput = {
    partidaid?: SortOrder
    clienteid?: SortOrder
    fecha?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
  }

  export type partidaMinOrderByAggregateInput = {
    partidaid?: SortOrder
    clienteid?: SortOrder
    fecha?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
  }

  export type partidaSumOrderByAggregateInput = {
    partidaid?: SortOrder
    clienteid?: SortOrder
    gananciaperdida?: SortOrder
    apuesta?: SortOrder
  }

  export type pausaCountOrderByAggregateInput = {
    clienteid?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    duracion?: SortOrder
  }

  export type pausaAvgOrderByAggregateInput = {
    clienteid?: SortOrder
    duracion?: SortOrder
  }

  export type pausaMaxOrderByAggregateInput = {
    clienteid?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    duracion?: SortOrder
  }

  export type pausaMinOrderByAggregateInput = {
    clienteid?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    duracion?: SortOrder
  }

  export type pausaSumOrderByAggregateInput = {
    clienteid?: SortOrder
    duracion?: SortOrder
  }

  export type promocionCountOrderByAggregateInput = {
    promocionid?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    cantidadusos?: SortOrder
    mincarga?: SortOrder
    maxcarga?: SortOrder
  }

  export type promocionAvgOrderByAggregateInput = {
    promocionid?: SortOrder
    cantidadusos?: SortOrder
    mincarga?: SortOrder
    maxcarga?: SortOrder
  }

  export type promocionMaxOrderByAggregateInput = {
    promocionid?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    cantidadusos?: SortOrder
    mincarga?: SortOrder
    maxcarga?: SortOrder
  }

  export type promocionMinOrderByAggregateInput = {
    promocionid?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    cantidadusos?: SortOrder
    mincarga?: SortOrder
    maxcarga?: SortOrder
  }

  export type promocionSumOrderByAggregateInput = {
    promocionid?: SortOrder
    cantidadusos?: SortOrder
    mincarga?: SortOrder
    maxcarga?: SortOrder
  }

  export type suspendidosCountOrderByAggregateInput = {
    suspendidoid?: SortOrder
    clienteid?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    duracion?: SortOrder
    adminid?: SortOrder
    razon?: SortOrder
  }

  export type suspendidosAvgOrderByAggregateInput = {
    suspendidoid?: SortOrder
    clienteid?: SortOrder
    duracion?: SortOrder
    adminid?: SortOrder
  }

  export type suspendidosMaxOrderByAggregateInput = {
    suspendidoid?: SortOrder
    clienteid?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    duracion?: SortOrder
    adminid?: SortOrder
    razon?: SortOrder
  }

  export type suspendidosMinOrderByAggregateInput = {
    suspendidoid?: SortOrder
    clienteid?: SortOrder
    fechainicio?: SortOrder
    fechafin?: SortOrder
    duracion?: SortOrder
    adminid?: SortOrder
    razon?: SortOrder
  }

  export type suspendidosSumOrderByAggregateInput = {
    suspendidoid?: SortOrder
    clienteid?: SortOrder
    duracion?: SortOrder
    adminid?: SortOrder
  }

  export type MensajesNullableScalarRelationFilter = {
    is?: mensajesWhereInput | null
    isNot?: mensajesWhereInput | null
  }

  export type ticketsCountOrderByAggregateInput = {
    ticketid?: SortOrder
    clienteid?: SortOrder
    problema?: SortOrder
    resuelto?: SortOrder
    idadmin?: SortOrder
  }

  export type ticketsAvgOrderByAggregateInput = {
    ticketid?: SortOrder
    clienteid?: SortOrder
    idadmin?: SortOrder
  }

  export type ticketsMaxOrderByAggregateInput = {
    ticketid?: SortOrder
    clienteid?: SortOrder
    problema?: SortOrder
    resuelto?: SortOrder
    idadmin?: SortOrder
  }

  export type ticketsMinOrderByAggregateInput = {
    ticketid?: SortOrder
    clienteid?: SortOrder
    problema?: SortOrder
    resuelto?: SortOrder
    idadmin?: SortOrder
  }

  export type ticketsSumOrderByAggregateInput = {
    ticketid?: SortOrder
    clienteid?: SortOrder
    idadmin?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type tiempodejuegoClienteidFechaCompoundUniqueInput = {
    clienteid: number
    fecha: Date | string
  }

  export type tiempodejuegoCountOrderByAggregateInput = {
    clienteid?: SortOrder
    fecha?: SortOrder
    tiempo?: SortOrder
  }

  export type tiempodejuegoAvgOrderByAggregateInput = {
    clienteid?: SortOrder
    tiempo?: SortOrder
  }

  export type tiempodejuegoMaxOrderByAggregateInput = {
    clienteid?: SortOrder
    fecha?: SortOrder
    tiempo?: SortOrder
  }

  export type tiempodejuegoMinOrderByAggregateInput = {
    clienteid?: SortOrder
    fecha?: SortOrder
    tiempo?: SortOrder
  }

  export type tiempodejuegoSumOrderByAggregateInput = {
    clienteid?: SortOrder
    tiempo?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Uint8Array | null
  }

  export type usuarioCountOrderByAggregateInput = {
    usuarioid?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    dni?: SortOrder
    edad?: SortOrder
    img?: SortOrder
  }

  export type usuarioAvgOrderByAggregateInput = {
    usuarioid?: SortOrder
  }

  export type usuarioMaxOrderByAggregateInput = {
    usuarioid?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    dni?: SortOrder
    edad?: SortOrder
    img?: SortOrder
  }

  export type usuarioMinOrderByAggregateInput = {
    usuarioid?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    dni?: SortOrder
    edad?: SortOrder
    img?: SortOrder
  }

  export type usuarioSumOrderByAggregateInput = {
    usuarioid?: SortOrder
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Uint8Array | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type usuarioCreateNestedOneWithoutAdministradorInput = {
    create?: XOR<usuarioCreateWithoutAdministradorInput, usuarioUncheckedCreateWithoutAdministradorInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutAdministradorInput
    connect?: usuarioWhereUniqueInput
  }

  export type aumentolimitehorarioCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutAdministradorInput, aumentolimitehorarioUncheckedCreateWithoutAdministradorInput> | aumentolimitehorarioCreateWithoutAdministradorInput[] | aumentolimitehorarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutAdministradorInput | aumentolimitehorarioCreateOrConnectWithoutAdministradorInput[]
    createMany?: aumentolimitehorarioCreateManyAdministradorInputEnvelope
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
  }

  export type aumentolimitesmonetarioCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput> | aumentolimitesmonetarioCreateWithoutAdministradorInput[] | aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput | aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput[]
    createMany?: aumentolimitesmonetarioCreateManyAdministradorInputEnvelope
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
  }

  export type suspendidosCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<suspendidosCreateWithoutAdministradorInput, suspendidosUncheckedCreateWithoutAdministradorInput> | suspendidosCreateWithoutAdministradorInput[] | suspendidosUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutAdministradorInput | suspendidosCreateOrConnectWithoutAdministradorInput[]
    createMany?: suspendidosCreateManyAdministradorInputEnvelope
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
  }

  export type ticketsCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<ticketsCreateWithoutAdministradorInput, ticketsUncheckedCreateWithoutAdministradorInput> | ticketsCreateWithoutAdministradorInput[] | ticketsUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutAdministradorInput | ticketsCreateOrConnectWithoutAdministradorInput[]
    createMany?: ticketsCreateManyAdministradorInputEnvelope
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
  }

  export type aumentolimitehorarioUncheckedCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutAdministradorInput, aumentolimitehorarioUncheckedCreateWithoutAdministradorInput> | aumentolimitehorarioCreateWithoutAdministradorInput[] | aumentolimitehorarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutAdministradorInput | aumentolimitehorarioCreateOrConnectWithoutAdministradorInput[]
    createMany?: aumentolimitehorarioCreateManyAdministradorInputEnvelope
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
  }

  export type aumentolimitesmonetarioUncheckedCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput> | aumentolimitesmonetarioCreateWithoutAdministradorInput[] | aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput | aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput[]
    createMany?: aumentolimitesmonetarioCreateManyAdministradorInputEnvelope
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
  }

  export type suspendidosUncheckedCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<suspendidosCreateWithoutAdministradorInput, suspendidosUncheckedCreateWithoutAdministradorInput> | suspendidosCreateWithoutAdministradorInput[] | suspendidosUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutAdministradorInput | suspendidosCreateOrConnectWithoutAdministradorInput[]
    createMany?: suspendidosCreateManyAdministradorInputEnvelope
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
  }

  export type ticketsUncheckedCreateNestedManyWithoutAdministradorInput = {
    create?: XOR<ticketsCreateWithoutAdministradorInput, ticketsUncheckedCreateWithoutAdministradorInput> | ticketsCreateWithoutAdministradorInput[] | ticketsUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutAdministradorInput | ticketsCreateOrConnectWithoutAdministradorInput[]
    createMany?: ticketsCreateManyAdministradorInputEnvelope
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type usuarioUpdateOneRequiredWithoutAdministradorNestedInput = {
    create?: XOR<usuarioCreateWithoutAdministradorInput, usuarioUncheckedCreateWithoutAdministradorInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutAdministradorInput
    upsert?: usuarioUpsertWithoutAdministradorInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutAdministradorInput, usuarioUpdateWithoutAdministradorInput>, usuarioUncheckedUpdateWithoutAdministradorInput>
  }

  export type aumentolimitehorarioUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutAdministradorInput, aumentolimitehorarioUncheckedCreateWithoutAdministradorInput> | aumentolimitehorarioCreateWithoutAdministradorInput[] | aumentolimitehorarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutAdministradorInput | aumentolimitehorarioCreateOrConnectWithoutAdministradorInput[]
    upsert?: aumentolimitehorarioUpsertWithWhereUniqueWithoutAdministradorInput | aumentolimitehorarioUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: aumentolimitehorarioCreateManyAdministradorInputEnvelope
    set?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    disconnect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    delete?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    update?: aumentolimitehorarioUpdateWithWhereUniqueWithoutAdministradorInput | aumentolimitehorarioUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: aumentolimitehorarioUpdateManyWithWhereWithoutAdministradorInput | aumentolimitehorarioUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: aumentolimitehorarioScalarWhereInput | aumentolimitehorarioScalarWhereInput[]
  }

  export type aumentolimitesmonetarioUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput> | aumentolimitesmonetarioCreateWithoutAdministradorInput[] | aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput | aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput[]
    upsert?: aumentolimitesmonetarioUpsertWithWhereUniqueWithoutAdministradorInput | aumentolimitesmonetarioUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: aumentolimitesmonetarioCreateManyAdministradorInputEnvelope
    set?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    disconnect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    delete?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    update?: aumentolimitesmonetarioUpdateWithWhereUniqueWithoutAdministradorInput | aumentolimitesmonetarioUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: aumentolimitesmonetarioUpdateManyWithWhereWithoutAdministradorInput | aumentolimitesmonetarioUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: aumentolimitesmonetarioScalarWhereInput | aumentolimitesmonetarioScalarWhereInput[]
  }

  export type suspendidosUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<suspendidosCreateWithoutAdministradorInput, suspendidosUncheckedCreateWithoutAdministradorInput> | suspendidosCreateWithoutAdministradorInput[] | suspendidosUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutAdministradorInput | suspendidosCreateOrConnectWithoutAdministradorInput[]
    upsert?: suspendidosUpsertWithWhereUniqueWithoutAdministradorInput | suspendidosUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: suspendidosCreateManyAdministradorInputEnvelope
    set?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    disconnect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    delete?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    update?: suspendidosUpdateWithWhereUniqueWithoutAdministradorInput | suspendidosUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: suspendidosUpdateManyWithWhereWithoutAdministradorInput | suspendidosUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: suspendidosScalarWhereInput | suspendidosScalarWhereInput[]
  }

  export type ticketsUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<ticketsCreateWithoutAdministradorInput, ticketsUncheckedCreateWithoutAdministradorInput> | ticketsCreateWithoutAdministradorInput[] | ticketsUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutAdministradorInput | ticketsCreateOrConnectWithoutAdministradorInput[]
    upsert?: ticketsUpsertWithWhereUniqueWithoutAdministradorInput | ticketsUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: ticketsCreateManyAdministradorInputEnvelope
    set?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    disconnect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    delete?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    update?: ticketsUpdateWithWhereUniqueWithoutAdministradorInput | ticketsUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: ticketsUpdateManyWithWhereWithoutAdministradorInput | ticketsUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: ticketsScalarWhereInput | ticketsScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutAdministradorInput, aumentolimitehorarioUncheckedCreateWithoutAdministradorInput> | aumentolimitehorarioCreateWithoutAdministradorInput[] | aumentolimitehorarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutAdministradorInput | aumentolimitehorarioCreateOrConnectWithoutAdministradorInput[]
    upsert?: aumentolimitehorarioUpsertWithWhereUniqueWithoutAdministradorInput | aumentolimitehorarioUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: aumentolimitehorarioCreateManyAdministradorInputEnvelope
    set?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    disconnect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    delete?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    update?: aumentolimitehorarioUpdateWithWhereUniqueWithoutAdministradorInput | aumentolimitehorarioUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: aumentolimitehorarioUpdateManyWithWhereWithoutAdministradorInput | aumentolimitehorarioUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: aumentolimitehorarioScalarWhereInput | aumentolimitehorarioScalarWhereInput[]
  }

  export type aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput> | aumentolimitesmonetarioCreateWithoutAdministradorInput[] | aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput | aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput[]
    upsert?: aumentolimitesmonetarioUpsertWithWhereUniqueWithoutAdministradorInput | aumentolimitesmonetarioUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: aumentolimitesmonetarioCreateManyAdministradorInputEnvelope
    set?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    disconnect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    delete?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    update?: aumentolimitesmonetarioUpdateWithWhereUniqueWithoutAdministradorInput | aumentolimitesmonetarioUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: aumentolimitesmonetarioUpdateManyWithWhereWithoutAdministradorInput | aumentolimitesmonetarioUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: aumentolimitesmonetarioScalarWhereInput | aumentolimitesmonetarioScalarWhereInput[]
  }

  export type suspendidosUncheckedUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<suspendidosCreateWithoutAdministradorInput, suspendidosUncheckedCreateWithoutAdministradorInput> | suspendidosCreateWithoutAdministradorInput[] | suspendidosUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutAdministradorInput | suspendidosCreateOrConnectWithoutAdministradorInput[]
    upsert?: suspendidosUpsertWithWhereUniqueWithoutAdministradorInput | suspendidosUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: suspendidosCreateManyAdministradorInputEnvelope
    set?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    disconnect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    delete?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    update?: suspendidosUpdateWithWhereUniqueWithoutAdministradorInput | suspendidosUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: suspendidosUpdateManyWithWhereWithoutAdministradorInput | suspendidosUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: suspendidosScalarWhereInput | suspendidosScalarWhereInput[]
  }

  export type ticketsUncheckedUpdateManyWithoutAdministradorNestedInput = {
    create?: XOR<ticketsCreateWithoutAdministradorInput, ticketsUncheckedCreateWithoutAdministradorInput> | ticketsCreateWithoutAdministradorInput[] | ticketsUncheckedCreateWithoutAdministradorInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutAdministradorInput | ticketsCreateOrConnectWithoutAdministradorInput[]
    upsert?: ticketsUpsertWithWhereUniqueWithoutAdministradorInput | ticketsUpsertWithWhereUniqueWithoutAdministradorInput[]
    createMany?: ticketsCreateManyAdministradorInputEnvelope
    set?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    disconnect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    delete?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    update?: ticketsUpdateWithWhereUniqueWithoutAdministradorInput | ticketsUpdateWithWhereUniqueWithoutAdministradorInput[]
    updateMany?: ticketsUpdateManyWithWhereWithoutAdministradorInput | ticketsUpdateManyWithWhereWithoutAdministradorInput[]
    deleteMany?: ticketsScalarWhereInput | ticketsScalarWhereInput[]
  }

  export type clienteCreateNestedOneWithoutAmistad_amistad_cliente2idToclienteInput = {
    create?: XOR<clienteCreateWithoutAmistad_amistad_cliente2idToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_cliente2idToclienteInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAmistad_amistad_cliente2idToclienteInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteCreateNestedOneWithoutAmistad_amistad_clienteidToclienteInput = {
    create?: XOR<clienteCreateWithoutAmistad_amistad_clienteidToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_clienteidToclienteInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAmistad_amistad_clienteidToclienteInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteUpdateOneWithoutAmistad_amistad_cliente2idToclienteNestedInput = {
    create?: XOR<clienteCreateWithoutAmistad_amistad_cliente2idToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_cliente2idToclienteInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAmistad_amistad_cliente2idToclienteInput
    upsert?: clienteUpsertWithoutAmistad_amistad_cliente2idToclienteInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutAmistad_amistad_cliente2idToclienteInput, clienteUpdateWithoutAmistad_amistad_cliente2idToclienteInput>, clienteUncheckedUpdateWithoutAmistad_amistad_cliente2idToclienteInput>
  }

  export type clienteUpdateOneWithoutAmistad_amistad_clienteidToclienteNestedInput = {
    create?: XOR<clienteCreateWithoutAmistad_amistad_clienteidToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_clienteidToclienteInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAmistad_amistad_clienteidToclienteInput
    upsert?: clienteUpsertWithoutAmistad_amistad_clienteidToclienteInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutAmistad_amistad_clienteidToclienteInput, clienteUpdateWithoutAmistad_amistad_clienteidToclienteInput>, clienteUncheckedUpdateWithoutAmistad_amistad_clienteidToclienteInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type administradorCreateNestedOneWithoutAumentolimitehorarioInput = {
    create?: XOR<administradorCreateWithoutAumentolimitehorarioInput, administradorUncheckedCreateWithoutAumentolimitehorarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutAumentolimitehorarioInput
    connect?: administradorWhereUniqueInput
  }

  export type clienteCreateNestedOneWithoutAumentolimitehorarioInput = {
    create?: XOR<clienteCreateWithoutAumentolimitehorarioInput, clienteUncheckedCreateWithoutAumentolimitehorarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAumentolimitehorarioInput
    connect?: clienteWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type administradorUpdateOneWithoutAumentolimitehorarioNestedInput = {
    create?: XOR<administradorCreateWithoutAumentolimitehorarioInput, administradorUncheckedCreateWithoutAumentolimitehorarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutAumentolimitehorarioInput
    upsert?: administradorUpsertWithoutAumentolimitehorarioInput
    disconnect?: administradorWhereInput | boolean
    delete?: administradorWhereInput | boolean
    connect?: administradorWhereUniqueInput
    update?: XOR<XOR<administradorUpdateToOneWithWhereWithoutAumentolimitehorarioInput, administradorUpdateWithoutAumentolimitehorarioInput>, administradorUncheckedUpdateWithoutAumentolimitehorarioInput>
  }

  export type clienteUpdateOneWithoutAumentolimitehorarioNestedInput = {
    create?: XOR<clienteCreateWithoutAumentolimitehorarioInput, clienteUncheckedCreateWithoutAumentolimitehorarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAumentolimitehorarioInput
    upsert?: clienteUpsertWithoutAumentolimitehorarioInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutAumentolimitehorarioInput, clienteUpdateWithoutAumentolimitehorarioInput>, clienteUncheckedUpdateWithoutAumentolimitehorarioInput>
  }

  export type administradorCreateNestedOneWithoutAumentolimitesmonetarioInput = {
    create?: XOR<administradorCreateWithoutAumentolimitesmonetarioInput, administradorUncheckedCreateWithoutAumentolimitesmonetarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutAumentolimitesmonetarioInput
    connect?: administradorWhereUniqueInput
  }

  export type clienteCreateNestedOneWithoutAumentolimitesmonetarioInput = {
    create?: XOR<clienteCreateWithoutAumentolimitesmonetarioInput, clienteUncheckedCreateWithoutAumentolimitesmonetarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAumentolimitesmonetarioInput
    connect?: clienteWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type administradorUpdateOneWithoutAumentolimitesmonetarioNestedInput = {
    create?: XOR<administradorCreateWithoutAumentolimitesmonetarioInput, administradorUncheckedCreateWithoutAumentolimitesmonetarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutAumentolimitesmonetarioInput
    upsert?: administradorUpsertWithoutAumentolimitesmonetarioInput
    disconnect?: administradorWhereInput | boolean
    delete?: administradorWhereInput | boolean
    connect?: administradorWhereUniqueInput
    update?: XOR<XOR<administradorUpdateToOneWithWhereWithoutAumentolimitesmonetarioInput, administradorUpdateWithoutAumentolimitesmonetarioInput>, administradorUncheckedUpdateWithoutAumentolimitesmonetarioInput>
  }

  export type clienteUpdateOneWithoutAumentolimitesmonetarioNestedInput = {
    create?: XOR<clienteCreateWithoutAumentolimitesmonetarioInput, clienteUncheckedCreateWithoutAumentolimitesmonetarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutAumentolimitesmonetarioInput
    upsert?: clienteUpsertWithoutAumentolimitesmonetarioInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutAumentolimitesmonetarioInput, clienteUpdateWithoutAumentolimitesmonetarioInput>, clienteUncheckedUpdateWithoutAumentolimitesmonetarioInput>
  }

  export type amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput> | amistadCreateWithoutCliente_amistad_cliente2idToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_cliente2idToclienteInputEnvelope
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
  }

  export type amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput> | amistadCreateWithoutCliente_amistad_clienteidToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_clienteidToclienteInputEnvelope
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
  }

  export type aumentolimitehorarioCreateNestedManyWithoutClienteInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutClienteInput, aumentolimitehorarioUncheckedCreateWithoutClienteInput> | aumentolimitehorarioCreateWithoutClienteInput[] | aumentolimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutClienteInput | aumentolimitehorarioCreateOrConnectWithoutClienteInput[]
    createMany?: aumentolimitehorarioCreateManyClienteInputEnvelope
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
  }

  export type aumentolimitesmonetarioCreateNestedManyWithoutClienteInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutClienteInput, aumentolimitesmonetarioUncheckedCreateWithoutClienteInput> | aumentolimitesmonetarioCreateWithoutClienteInput[] | aumentolimitesmonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutClienteInput | aumentolimitesmonetarioCreateOrConnectWithoutClienteInput[]
    createMany?: aumentolimitesmonetarioCreateManyClienteInputEnvelope
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
  }

  export type usuarioCreateNestedOneWithoutClienteInput = {
    create?: XOR<usuarioCreateWithoutClienteInput, usuarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutClienteInput
    connect?: usuarioWhereUniqueInput
  }

  export type disminucionlimitehorarioCreateNestedManyWithoutClienteInput = {
    create?: XOR<disminucionlimitehorarioCreateWithoutClienteInput, disminucionlimitehorarioUncheckedCreateWithoutClienteInput> | disminucionlimitehorarioCreateWithoutClienteInput[] | disminucionlimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitehorarioCreateOrConnectWithoutClienteInput | disminucionlimitehorarioCreateOrConnectWithoutClienteInput[]
    createMany?: disminucionlimitehorarioCreateManyClienteInputEnvelope
    connect?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
  }

  export type disminucionlimitemonetarioCreateNestedManyWithoutClienteInput = {
    create?: XOR<disminucionlimitemonetarioCreateWithoutClienteInput, disminucionlimitemonetarioUncheckedCreateWithoutClienteInput> | disminucionlimitemonetarioCreateWithoutClienteInput[] | disminucionlimitemonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitemonetarioCreateOrConnectWithoutClienteInput | disminucionlimitemonetarioCreateOrConnectWithoutClienteInput[]
    createMany?: disminucionlimitemonetarioCreateManyClienteInputEnvelope
    connect?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
  }

  export type egresoCreateNestedManyWithoutClienteInput = {
    create?: XOR<egresoCreateWithoutClienteInput, egresoUncheckedCreateWithoutClienteInput> | egresoCreateWithoutClienteInput[] | egresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: egresoCreateOrConnectWithoutClienteInput | egresoCreateOrConnectWithoutClienteInput[]
    createMany?: egresoCreateManyClienteInputEnvelope
    connect?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
  }

  export type ingresoCreateNestedManyWithoutClienteInput = {
    create?: XOR<ingresoCreateWithoutClienteInput, ingresoUncheckedCreateWithoutClienteInput> | ingresoCreateWithoutClienteInput[] | ingresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ingresoCreateOrConnectWithoutClienteInput | ingresoCreateOrConnectWithoutClienteInput[]
    createMany?: ingresoCreateManyClienteInputEnvelope
    connect?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
  }

  export type jugadaCreateNestedManyWithoutClienteInput = {
    create?: XOR<jugadaCreateWithoutClienteInput, jugadaUncheckedCreateWithoutClienteInput> | jugadaCreateWithoutClienteInput[] | jugadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutClienteInput | jugadaCreateOrConnectWithoutClienteInput[]
    createMany?: jugadaCreateManyClienteInputEnvelope
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
  }

  export type limitehorarioCreateNestedOneWithoutClienteInput = {
    create?: XOR<limitehorarioCreateWithoutClienteInput, limitehorarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitehorarioCreateOrConnectWithoutClienteInput
    connect?: limitehorarioWhereUniqueInput
  }

  export type limitemonetarioCreateNestedOneWithoutClienteInput = {
    create?: XOR<limitemonetarioCreateWithoutClienteInput, limitemonetarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitemonetarioCreateOrConnectWithoutClienteInput
    connect?: limitemonetarioWhereUniqueInput
  }

  export type partidaCreateNestedManyWithoutClienteInput = {
    create?: XOR<partidaCreateWithoutClienteInput, partidaUncheckedCreateWithoutClienteInput> | partidaCreateWithoutClienteInput[] | partidaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: partidaCreateOrConnectWithoutClienteInput | partidaCreateOrConnectWithoutClienteInput[]
    createMany?: partidaCreateManyClienteInputEnvelope
    connect?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
  }

  export type pausaCreateNestedOneWithoutClienteInput = {
    create?: XOR<pausaCreateWithoutClienteInput, pausaUncheckedCreateWithoutClienteInput>
    connectOrCreate?: pausaCreateOrConnectWithoutClienteInput
    connect?: pausaWhereUniqueInput
  }

  export type suspendidosCreateNestedManyWithoutClienteInput = {
    create?: XOR<suspendidosCreateWithoutClienteInput, suspendidosUncheckedCreateWithoutClienteInput> | suspendidosCreateWithoutClienteInput[] | suspendidosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutClienteInput | suspendidosCreateOrConnectWithoutClienteInput[]
    createMany?: suspendidosCreateManyClienteInputEnvelope
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
  }

  export type ticketsCreateNestedManyWithoutClienteInput = {
    create?: XOR<ticketsCreateWithoutClienteInput, ticketsUncheckedCreateWithoutClienteInput> | ticketsCreateWithoutClienteInput[] | ticketsUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutClienteInput | ticketsCreateOrConnectWithoutClienteInput[]
    createMany?: ticketsCreateManyClienteInputEnvelope
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
  }

  export type tiempodejuegoCreateNestedManyWithoutClienteInput = {
    create?: XOR<tiempodejuegoCreateWithoutClienteInput, tiempodejuegoUncheckedCreateWithoutClienteInput> | tiempodejuegoCreateWithoutClienteInput[] | tiempodejuegoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: tiempodejuegoCreateOrConnectWithoutClienteInput | tiempodejuegoCreateOrConnectWithoutClienteInput[]
    createMany?: tiempodejuegoCreateManyClienteInputEnvelope
    connect?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
  }

  export type amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput> | amistadCreateWithoutCliente_amistad_cliente2idToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_cliente2idToclienteInputEnvelope
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
  }

  export type amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput> | amistadCreateWithoutCliente_amistad_clienteidToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_clienteidToclienteInputEnvelope
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
  }

  export type aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutClienteInput, aumentolimitehorarioUncheckedCreateWithoutClienteInput> | aumentolimitehorarioCreateWithoutClienteInput[] | aumentolimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutClienteInput | aumentolimitehorarioCreateOrConnectWithoutClienteInput[]
    createMany?: aumentolimitehorarioCreateManyClienteInputEnvelope
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
  }

  export type aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutClienteInput, aumentolimitesmonetarioUncheckedCreateWithoutClienteInput> | aumentolimitesmonetarioCreateWithoutClienteInput[] | aumentolimitesmonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutClienteInput | aumentolimitesmonetarioCreateOrConnectWithoutClienteInput[]
    createMany?: aumentolimitesmonetarioCreateManyClienteInputEnvelope
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
  }

  export type disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<disminucionlimitehorarioCreateWithoutClienteInput, disminucionlimitehorarioUncheckedCreateWithoutClienteInput> | disminucionlimitehorarioCreateWithoutClienteInput[] | disminucionlimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitehorarioCreateOrConnectWithoutClienteInput | disminucionlimitehorarioCreateOrConnectWithoutClienteInput[]
    createMany?: disminucionlimitehorarioCreateManyClienteInputEnvelope
    connect?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
  }

  export type disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<disminucionlimitemonetarioCreateWithoutClienteInput, disminucionlimitemonetarioUncheckedCreateWithoutClienteInput> | disminucionlimitemonetarioCreateWithoutClienteInput[] | disminucionlimitemonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitemonetarioCreateOrConnectWithoutClienteInput | disminucionlimitemonetarioCreateOrConnectWithoutClienteInput[]
    createMany?: disminucionlimitemonetarioCreateManyClienteInputEnvelope
    connect?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
  }

  export type egresoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<egresoCreateWithoutClienteInput, egresoUncheckedCreateWithoutClienteInput> | egresoCreateWithoutClienteInput[] | egresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: egresoCreateOrConnectWithoutClienteInput | egresoCreateOrConnectWithoutClienteInput[]
    createMany?: egresoCreateManyClienteInputEnvelope
    connect?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
  }

  export type ingresoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ingresoCreateWithoutClienteInput, ingresoUncheckedCreateWithoutClienteInput> | ingresoCreateWithoutClienteInput[] | ingresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ingresoCreateOrConnectWithoutClienteInput | ingresoCreateOrConnectWithoutClienteInput[]
    createMany?: ingresoCreateManyClienteInputEnvelope
    connect?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
  }

  export type jugadaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<jugadaCreateWithoutClienteInput, jugadaUncheckedCreateWithoutClienteInput> | jugadaCreateWithoutClienteInput[] | jugadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutClienteInput | jugadaCreateOrConnectWithoutClienteInput[]
    createMany?: jugadaCreateManyClienteInputEnvelope
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
  }

  export type limitehorarioUncheckedCreateNestedOneWithoutClienteInput = {
    create?: XOR<limitehorarioCreateWithoutClienteInput, limitehorarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitehorarioCreateOrConnectWithoutClienteInput
    connect?: limitehorarioWhereUniqueInput
  }

  export type limitemonetarioUncheckedCreateNestedOneWithoutClienteInput = {
    create?: XOR<limitemonetarioCreateWithoutClienteInput, limitemonetarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitemonetarioCreateOrConnectWithoutClienteInput
    connect?: limitemonetarioWhereUniqueInput
  }

  export type partidaUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<partidaCreateWithoutClienteInput, partidaUncheckedCreateWithoutClienteInput> | partidaCreateWithoutClienteInput[] | partidaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: partidaCreateOrConnectWithoutClienteInput | partidaCreateOrConnectWithoutClienteInput[]
    createMany?: partidaCreateManyClienteInputEnvelope
    connect?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
  }

  export type pausaUncheckedCreateNestedOneWithoutClienteInput = {
    create?: XOR<pausaCreateWithoutClienteInput, pausaUncheckedCreateWithoutClienteInput>
    connectOrCreate?: pausaCreateOrConnectWithoutClienteInput
    connect?: pausaWhereUniqueInput
  }

  export type suspendidosUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<suspendidosCreateWithoutClienteInput, suspendidosUncheckedCreateWithoutClienteInput> | suspendidosCreateWithoutClienteInput[] | suspendidosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutClienteInput | suspendidosCreateOrConnectWithoutClienteInput[]
    createMany?: suspendidosCreateManyClienteInputEnvelope
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
  }

  export type ticketsUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ticketsCreateWithoutClienteInput, ticketsUncheckedCreateWithoutClienteInput> | ticketsCreateWithoutClienteInput[] | ticketsUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutClienteInput | ticketsCreateOrConnectWithoutClienteInput[]
    createMany?: ticketsCreateManyClienteInputEnvelope
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
  }

  export type tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<tiempodejuegoCreateWithoutClienteInput, tiempodejuegoUncheckedCreateWithoutClienteInput> | tiempodejuegoCreateWithoutClienteInput[] | tiempodejuegoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: tiempodejuegoCreateOrConnectWithoutClienteInput | tiempodejuegoCreateOrConnectWithoutClienteInput[]
    createMany?: tiempodejuegoCreateManyClienteInputEnvelope
    connect?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
  }

  export type amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput> | amistadCreateWithoutCliente_amistad_cliente2idToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput[]
    upsert?: amistadUpsertWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput | amistadUpsertWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_cliente2idToclienteInputEnvelope
    set?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    disconnect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    delete?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    update?: amistadUpdateWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput | amistadUpdateWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput[]
    updateMany?: amistadUpdateManyWithWhereWithoutCliente_amistad_cliente2idToclienteInput | amistadUpdateManyWithWhereWithoutCliente_amistad_cliente2idToclienteInput[]
    deleteMany?: amistadScalarWhereInput | amistadScalarWhereInput[]
  }

  export type amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput> | amistadCreateWithoutCliente_amistad_clienteidToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput[]
    upsert?: amistadUpsertWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput | amistadUpsertWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_clienteidToclienteInputEnvelope
    set?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    disconnect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    delete?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    update?: amistadUpdateWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput | amistadUpdateWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput[]
    updateMany?: amistadUpdateManyWithWhereWithoutCliente_amistad_clienteidToclienteInput | amistadUpdateManyWithWhereWithoutCliente_amistad_clienteidToclienteInput[]
    deleteMany?: amistadScalarWhereInput | amistadScalarWhereInput[]
  }

  export type aumentolimitehorarioUpdateManyWithoutClienteNestedInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutClienteInput, aumentolimitehorarioUncheckedCreateWithoutClienteInput> | aumentolimitehorarioCreateWithoutClienteInput[] | aumentolimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutClienteInput | aumentolimitehorarioCreateOrConnectWithoutClienteInput[]
    upsert?: aumentolimitehorarioUpsertWithWhereUniqueWithoutClienteInput | aumentolimitehorarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: aumentolimitehorarioCreateManyClienteInputEnvelope
    set?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    disconnect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    delete?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    update?: aumentolimitehorarioUpdateWithWhereUniqueWithoutClienteInput | aumentolimitehorarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: aumentolimitehorarioUpdateManyWithWhereWithoutClienteInput | aumentolimitehorarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: aumentolimitehorarioScalarWhereInput | aumentolimitehorarioScalarWhereInput[]
  }

  export type aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutClienteInput, aumentolimitesmonetarioUncheckedCreateWithoutClienteInput> | aumentolimitesmonetarioCreateWithoutClienteInput[] | aumentolimitesmonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutClienteInput | aumentolimitesmonetarioCreateOrConnectWithoutClienteInput[]
    upsert?: aumentolimitesmonetarioUpsertWithWhereUniqueWithoutClienteInput | aumentolimitesmonetarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: aumentolimitesmonetarioCreateManyClienteInputEnvelope
    set?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    disconnect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    delete?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    update?: aumentolimitesmonetarioUpdateWithWhereUniqueWithoutClienteInput | aumentolimitesmonetarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: aumentolimitesmonetarioUpdateManyWithWhereWithoutClienteInput | aumentolimitesmonetarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: aumentolimitesmonetarioScalarWhereInput | aumentolimitesmonetarioScalarWhereInput[]
  }

  export type usuarioUpdateOneRequiredWithoutClienteNestedInput = {
    create?: XOR<usuarioCreateWithoutClienteInput, usuarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutClienteInput
    upsert?: usuarioUpsertWithoutClienteInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutClienteInput, usuarioUpdateWithoutClienteInput>, usuarioUncheckedUpdateWithoutClienteInput>
  }

  export type disminucionlimitehorarioUpdateManyWithoutClienteNestedInput = {
    create?: XOR<disminucionlimitehorarioCreateWithoutClienteInput, disminucionlimitehorarioUncheckedCreateWithoutClienteInput> | disminucionlimitehorarioCreateWithoutClienteInput[] | disminucionlimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitehorarioCreateOrConnectWithoutClienteInput | disminucionlimitehorarioCreateOrConnectWithoutClienteInput[]
    upsert?: disminucionlimitehorarioUpsertWithWhereUniqueWithoutClienteInput | disminucionlimitehorarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: disminucionlimitehorarioCreateManyClienteInputEnvelope
    set?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    disconnect?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    delete?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    connect?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    update?: disminucionlimitehorarioUpdateWithWhereUniqueWithoutClienteInput | disminucionlimitehorarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: disminucionlimitehorarioUpdateManyWithWhereWithoutClienteInput | disminucionlimitehorarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: disminucionlimitehorarioScalarWhereInput | disminucionlimitehorarioScalarWhereInput[]
  }

  export type disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput = {
    create?: XOR<disminucionlimitemonetarioCreateWithoutClienteInput, disminucionlimitemonetarioUncheckedCreateWithoutClienteInput> | disminucionlimitemonetarioCreateWithoutClienteInput[] | disminucionlimitemonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitemonetarioCreateOrConnectWithoutClienteInput | disminucionlimitemonetarioCreateOrConnectWithoutClienteInput[]
    upsert?: disminucionlimitemonetarioUpsertWithWhereUniqueWithoutClienteInput | disminucionlimitemonetarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: disminucionlimitemonetarioCreateManyClienteInputEnvelope
    set?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    disconnect?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    delete?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    connect?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    update?: disminucionlimitemonetarioUpdateWithWhereUniqueWithoutClienteInput | disminucionlimitemonetarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: disminucionlimitemonetarioUpdateManyWithWhereWithoutClienteInput | disminucionlimitemonetarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: disminucionlimitemonetarioScalarWhereInput | disminucionlimitemonetarioScalarWhereInput[]
  }

  export type egresoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<egresoCreateWithoutClienteInput, egresoUncheckedCreateWithoutClienteInput> | egresoCreateWithoutClienteInput[] | egresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: egresoCreateOrConnectWithoutClienteInput | egresoCreateOrConnectWithoutClienteInput[]
    upsert?: egresoUpsertWithWhereUniqueWithoutClienteInput | egresoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: egresoCreateManyClienteInputEnvelope
    set?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    disconnect?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    delete?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    connect?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    update?: egresoUpdateWithWhereUniqueWithoutClienteInput | egresoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: egresoUpdateManyWithWhereWithoutClienteInput | egresoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: egresoScalarWhereInput | egresoScalarWhereInput[]
  }

  export type ingresoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ingresoCreateWithoutClienteInput, ingresoUncheckedCreateWithoutClienteInput> | ingresoCreateWithoutClienteInput[] | ingresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ingresoCreateOrConnectWithoutClienteInput | ingresoCreateOrConnectWithoutClienteInput[]
    upsert?: ingresoUpsertWithWhereUniqueWithoutClienteInput | ingresoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ingresoCreateManyClienteInputEnvelope
    set?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    disconnect?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    delete?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    connect?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    update?: ingresoUpdateWithWhereUniqueWithoutClienteInput | ingresoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ingresoUpdateManyWithWhereWithoutClienteInput | ingresoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ingresoScalarWhereInput | ingresoScalarWhereInput[]
  }

  export type jugadaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<jugadaCreateWithoutClienteInput, jugadaUncheckedCreateWithoutClienteInput> | jugadaCreateWithoutClienteInput[] | jugadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutClienteInput | jugadaCreateOrConnectWithoutClienteInput[]
    upsert?: jugadaUpsertWithWhereUniqueWithoutClienteInput | jugadaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: jugadaCreateManyClienteInputEnvelope
    set?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    disconnect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    delete?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    update?: jugadaUpdateWithWhereUniqueWithoutClienteInput | jugadaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: jugadaUpdateManyWithWhereWithoutClienteInput | jugadaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: jugadaScalarWhereInput | jugadaScalarWhereInput[]
  }

  export type limitehorarioUpdateOneWithoutClienteNestedInput = {
    create?: XOR<limitehorarioCreateWithoutClienteInput, limitehorarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitehorarioCreateOrConnectWithoutClienteInput
    upsert?: limitehorarioUpsertWithoutClienteInput
    disconnect?: limitehorarioWhereInput | boolean
    delete?: limitehorarioWhereInput | boolean
    connect?: limitehorarioWhereUniqueInput
    update?: XOR<XOR<limitehorarioUpdateToOneWithWhereWithoutClienteInput, limitehorarioUpdateWithoutClienteInput>, limitehorarioUncheckedUpdateWithoutClienteInput>
  }

  export type limitemonetarioUpdateOneWithoutClienteNestedInput = {
    create?: XOR<limitemonetarioCreateWithoutClienteInput, limitemonetarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitemonetarioCreateOrConnectWithoutClienteInput
    upsert?: limitemonetarioUpsertWithoutClienteInput
    disconnect?: limitemonetarioWhereInput | boolean
    delete?: limitemonetarioWhereInput | boolean
    connect?: limitemonetarioWhereUniqueInput
    update?: XOR<XOR<limitemonetarioUpdateToOneWithWhereWithoutClienteInput, limitemonetarioUpdateWithoutClienteInput>, limitemonetarioUncheckedUpdateWithoutClienteInput>
  }

  export type partidaUpdateManyWithoutClienteNestedInput = {
    create?: XOR<partidaCreateWithoutClienteInput, partidaUncheckedCreateWithoutClienteInput> | partidaCreateWithoutClienteInput[] | partidaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: partidaCreateOrConnectWithoutClienteInput | partidaCreateOrConnectWithoutClienteInput[]
    upsert?: partidaUpsertWithWhereUniqueWithoutClienteInput | partidaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: partidaCreateManyClienteInputEnvelope
    set?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    disconnect?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    delete?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    connect?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    update?: partidaUpdateWithWhereUniqueWithoutClienteInput | partidaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: partidaUpdateManyWithWhereWithoutClienteInput | partidaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: partidaScalarWhereInput | partidaScalarWhereInput[]
  }

  export type pausaUpdateOneWithoutClienteNestedInput = {
    create?: XOR<pausaCreateWithoutClienteInput, pausaUncheckedCreateWithoutClienteInput>
    connectOrCreate?: pausaCreateOrConnectWithoutClienteInput
    upsert?: pausaUpsertWithoutClienteInput
    disconnect?: pausaWhereInput | boolean
    delete?: pausaWhereInput | boolean
    connect?: pausaWhereUniqueInput
    update?: XOR<XOR<pausaUpdateToOneWithWhereWithoutClienteInput, pausaUpdateWithoutClienteInput>, pausaUncheckedUpdateWithoutClienteInput>
  }

  export type suspendidosUpdateManyWithoutClienteNestedInput = {
    create?: XOR<suspendidosCreateWithoutClienteInput, suspendidosUncheckedCreateWithoutClienteInput> | suspendidosCreateWithoutClienteInput[] | suspendidosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutClienteInput | suspendidosCreateOrConnectWithoutClienteInput[]
    upsert?: suspendidosUpsertWithWhereUniqueWithoutClienteInput | suspendidosUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: suspendidosCreateManyClienteInputEnvelope
    set?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    disconnect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    delete?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    update?: suspendidosUpdateWithWhereUniqueWithoutClienteInput | suspendidosUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: suspendidosUpdateManyWithWhereWithoutClienteInput | suspendidosUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: suspendidosScalarWhereInput | suspendidosScalarWhereInput[]
  }

  export type ticketsUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ticketsCreateWithoutClienteInput, ticketsUncheckedCreateWithoutClienteInput> | ticketsCreateWithoutClienteInput[] | ticketsUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutClienteInput | ticketsCreateOrConnectWithoutClienteInput[]
    upsert?: ticketsUpsertWithWhereUniqueWithoutClienteInput | ticketsUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ticketsCreateManyClienteInputEnvelope
    set?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    disconnect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    delete?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    update?: ticketsUpdateWithWhereUniqueWithoutClienteInput | ticketsUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ticketsUpdateManyWithWhereWithoutClienteInput | ticketsUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ticketsScalarWhereInput | ticketsScalarWhereInput[]
  }

  export type tiempodejuegoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<tiempodejuegoCreateWithoutClienteInput, tiempodejuegoUncheckedCreateWithoutClienteInput> | tiempodejuegoCreateWithoutClienteInput[] | tiempodejuegoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: tiempodejuegoCreateOrConnectWithoutClienteInput | tiempodejuegoCreateOrConnectWithoutClienteInput[]
    upsert?: tiempodejuegoUpsertWithWhereUniqueWithoutClienteInput | tiempodejuegoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: tiempodejuegoCreateManyClienteInputEnvelope
    set?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    disconnect?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    delete?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    connect?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    update?: tiempodejuegoUpdateWithWhereUniqueWithoutClienteInput | tiempodejuegoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: tiempodejuegoUpdateManyWithWhereWithoutClienteInput | tiempodejuegoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: tiempodejuegoScalarWhereInput | tiempodejuegoScalarWhereInput[]
  }

  export type amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput> | amistadCreateWithoutCliente_amistad_cliente2idToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput[]
    upsert?: amistadUpsertWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput | amistadUpsertWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_cliente2idToclienteInputEnvelope
    set?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    disconnect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    delete?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    update?: amistadUpdateWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput | amistadUpdateWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput[]
    updateMany?: amistadUpdateManyWithWhereWithoutCliente_amistad_cliente2idToclienteInput | amistadUpdateManyWithWhereWithoutCliente_amistad_cliente2idToclienteInput[]
    deleteMany?: amistadScalarWhereInput | amistadScalarWhereInput[]
  }

  export type amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput = {
    create?: XOR<amistadCreateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput> | amistadCreateWithoutCliente_amistad_clienteidToclienteInput[] | amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput[]
    connectOrCreate?: amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput | amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput[]
    upsert?: amistadUpsertWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput | amistadUpsertWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput[]
    createMany?: amistadCreateManyCliente_amistad_clienteidToclienteInputEnvelope
    set?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    disconnect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    delete?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    connect?: amistadWhereUniqueInput | amistadWhereUniqueInput[]
    update?: amistadUpdateWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput | amistadUpdateWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput[]
    updateMany?: amistadUpdateManyWithWhereWithoutCliente_amistad_clienteidToclienteInput | amistadUpdateManyWithWhereWithoutCliente_amistad_clienteidToclienteInput[]
    deleteMany?: amistadScalarWhereInput | amistadScalarWhereInput[]
  }

  export type aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<aumentolimitehorarioCreateWithoutClienteInput, aumentolimitehorarioUncheckedCreateWithoutClienteInput> | aumentolimitehorarioCreateWithoutClienteInput[] | aumentolimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitehorarioCreateOrConnectWithoutClienteInput | aumentolimitehorarioCreateOrConnectWithoutClienteInput[]
    upsert?: aumentolimitehorarioUpsertWithWhereUniqueWithoutClienteInput | aumentolimitehorarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: aumentolimitehorarioCreateManyClienteInputEnvelope
    set?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    disconnect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    delete?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    connect?: aumentolimitehorarioWhereUniqueInput | aumentolimitehorarioWhereUniqueInput[]
    update?: aumentolimitehorarioUpdateWithWhereUniqueWithoutClienteInput | aumentolimitehorarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: aumentolimitehorarioUpdateManyWithWhereWithoutClienteInput | aumentolimitehorarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: aumentolimitehorarioScalarWhereInput | aumentolimitehorarioScalarWhereInput[]
  }

  export type aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<aumentolimitesmonetarioCreateWithoutClienteInput, aumentolimitesmonetarioUncheckedCreateWithoutClienteInput> | aumentolimitesmonetarioCreateWithoutClienteInput[] | aumentolimitesmonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: aumentolimitesmonetarioCreateOrConnectWithoutClienteInput | aumentolimitesmonetarioCreateOrConnectWithoutClienteInput[]
    upsert?: aumentolimitesmonetarioUpsertWithWhereUniqueWithoutClienteInput | aumentolimitesmonetarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: aumentolimitesmonetarioCreateManyClienteInputEnvelope
    set?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    disconnect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    delete?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    connect?: aumentolimitesmonetarioWhereUniqueInput | aumentolimitesmonetarioWhereUniqueInput[]
    update?: aumentolimitesmonetarioUpdateWithWhereUniqueWithoutClienteInput | aumentolimitesmonetarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: aumentolimitesmonetarioUpdateManyWithWhereWithoutClienteInput | aumentolimitesmonetarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: aumentolimitesmonetarioScalarWhereInput | aumentolimitesmonetarioScalarWhereInput[]
  }

  export type disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<disminucionlimitehorarioCreateWithoutClienteInput, disminucionlimitehorarioUncheckedCreateWithoutClienteInput> | disminucionlimitehorarioCreateWithoutClienteInput[] | disminucionlimitehorarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitehorarioCreateOrConnectWithoutClienteInput | disminucionlimitehorarioCreateOrConnectWithoutClienteInput[]
    upsert?: disminucionlimitehorarioUpsertWithWhereUniqueWithoutClienteInput | disminucionlimitehorarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: disminucionlimitehorarioCreateManyClienteInputEnvelope
    set?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    disconnect?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    delete?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    connect?: disminucionlimitehorarioWhereUniqueInput | disminucionlimitehorarioWhereUniqueInput[]
    update?: disminucionlimitehorarioUpdateWithWhereUniqueWithoutClienteInput | disminucionlimitehorarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: disminucionlimitehorarioUpdateManyWithWhereWithoutClienteInput | disminucionlimitehorarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: disminucionlimitehorarioScalarWhereInput | disminucionlimitehorarioScalarWhereInput[]
  }

  export type disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<disminucionlimitemonetarioCreateWithoutClienteInput, disminucionlimitemonetarioUncheckedCreateWithoutClienteInput> | disminucionlimitemonetarioCreateWithoutClienteInput[] | disminucionlimitemonetarioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: disminucionlimitemonetarioCreateOrConnectWithoutClienteInput | disminucionlimitemonetarioCreateOrConnectWithoutClienteInput[]
    upsert?: disminucionlimitemonetarioUpsertWithWhereUniqueWithoutClienteInput | disminucionlimitemonetarioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: disminucionlimitemonetarioCreateManyClienteInputEnvelope
    set?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    disconnect?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    delete?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    connect?: disminucionlimitemonetarioWhereUniqueInput | disminucionlimitemonetarioWhereUniqueInput[]
    update?: disminucionlimitemonetarioUpdateWithWhereUniqueWithoutClienteInput | disminucionlimitemonetarioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: disminucionlimitemonetarioUpdateManyWithWhereWithoutClienteInput | disminucionlimitemonetarioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: disminucionlimitemonetarioScalarWhereInput | disminucionlimitemonetarioScalarWhereInput[]
  }

  export type egresoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<egresoCreateWithoutClienteInput, egresoUncheckedCreateWithoutClienteInput> | egresoCreateWithoutClienteInput[] | egresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: egresoCreateOrConnectWithoutClienteInput | egresoCreateOrConnectWithoutClienteInput[]
    upsert?: egresoUpsertWithWhereUniqueWithoutClienteInput | egresoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: egresoCreateManyClienteInputEnvelope
    set?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    disconnect?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    delete?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    connect?: egresoWhereUniqueInput | egresoWhereUniqueInput[]
    update?: egresoUpdateWithWhereUniqueWithoutClienteInput | egresoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: egresoUpdateManyWithWhereWithoutClienteInput | egresoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: egresoScalarWhereInput | egresoScalarWhereInput[]
  }

  export type ingresoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ingresoCreateWithoutClienteInput, ingresoUncheckedCreateWithoutClienteInput> | ingresoCreateWithoutClienteInput[] | ingresoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ingresoCreateOrConnectWithoutClienteInput | ingresoCreateOrConnectWithoutClienteInput[]
    upsert?: ingresoUpsertWithWhereUniqueWithoutClienteInput | ingresoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ingresoCreateManyClienteInputEnvelope
    set?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    disconnect?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    delete?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    connect?: ingresoWhereUniqueInput | ingresoWhereUniqueInput[]
    update?: ingresoUpdateWithWhereUniqueWithoutClienteInput | ingresoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ingresoUpdateManyWithWhereWithoutClienteInput | ingresoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ingresoScalarWhereInput | ingresoScalarWhereInput[]
  }

  export type jugadaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<jugadaCreateWithoutClienteInput, jugadaUncheckedCreateWithoutClienteInput> | jugadaCreateWithoutClienteInput[] | jugadaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutClienteInput | jugadaCreateOrConnectWithoutClienteInput[]
    upsert?: jugadaUpsertWithWhereUniqueWithoutClienteInput | jugadaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: jugadaCreateManyClienteInputEnvelope
    set?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    disconnect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    delete?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    update?: jugadaUpdateWithWhereUniqueWithoutClienteInput | jugadaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: jugadaUpdateManyWithWhereWithoutClienteInput | jugadaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: jugadaScalarWhereInput | jugadaScalarWhereInput[]
  }

  export type limitehorarioUncheckedUpdateOneWithoutClienteNestedInput = {
    create?: XOR<limitehorarioCreateWithoutClienteInput, limitehorarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitehorarioCreateOrConnectWithoutClienteInput
    upsert?: limitehorarioUpsertWithoutClienteInput
    disconnect?: limitehorarioWhereInput | boolean
    delete?: limitehorarioWhereInput | boolean
    connect?: limitehorarioWhereUniqueInput
    update?: XOR<XOR<limitehorarioUpdateToOneWithWhereWithoutClienteInput, limitehorarioUpdateWithoutClienteInput>, limitehorarioUncheckedUpdateWithoutClienteInput>
  }

  export type limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput = {
    create?: XOR<limitemonetarioCreateWithoutClienteInput, limitemonetarioUncheckedCreateWithoutClienteInput>
    connectOrCreate?: limitemonetarioCreateOrConnectWithoutClienteInput
    upsert?: limitemonetarioUpsertWithoutClienteInput
    disconnect?: limitemonetarioWhereInput | boolean
    delete?: limitemonetarioWhereInput | boolean
    connect?: limitemonetarioWhereUniqueInput
    update?: XOR<XOR<limitemonetarioUpdateToOneWithWhereWithoutClienteInput, limitemonetarioUpdateWithoutClienteInput>, limitemonetarioUncheckedUpdateWithoutClienteInput>
  }

  export type partidaUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<partidaCreateWithoutClienteInput, partidaUncheckedCreateWithoutClienteInput> | partidaCreateWithoutClienteInput[] | partidaUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: partidaCreateOrConnectWithoutClienteInput | partidaCreateOrConnectWithoutClienteInput[]
    upsert?: partidaUpsertWithWhereUniqueWithoutClienteInput | partidaUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: partidaCreateManyClienteInputEnvelope
    set?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    disconnect?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    delete?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    connect?: partidaWhereUniqueInput | partidaWhereUniqueInput[]
    update?: partidaUpdateWithWhereUniqueWithoutClienteInput | partidaUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: partidaUpdateManyWithWhereWithoutClienteInput | partidaUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: partidaScalarWhereInput | partidaScalarWhereInput[]
  }

  export type pausaUncheckedUpdateOneWithoutClienteNestedInput = {
    create?: XOR<pausaCreateWithoutClienteInput, pausaUncheckedCreateWithoutClienteInput>
    connectOrCreate?: pausaCreateOrConnectWithoutClienteInput
    upsert?: pausaUpsertWithoutClienteInput
    disconnect?: pausaWhereInput | boolean
    delete?: pausaWhereInput | boolean
    connect?: pausaWhereUniqueInput
    update?: XOR<XOR<pausaUpdateToOneWithWhereWithoutClienteInput, pausaUpdateWithoutClienteInput>, pausaUncheckedUpdateWithoutClienteInput>
  }

  export type suspendidosUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<suspendidosCreateWithoutClienteInput, suspendidosUncheckedCreateWithoutClienteInput> | suspendidosCreateWithoutClienteInput[] | suspendidosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: suspendidosCreateOrConnectWithoutClienteInput | suspendidosCreateOrConnectWithoutClienteInput[]
    upsert?: suspendidosUpsertWithWhereUniqueWithoutClienteInput | suspendidosUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: suspendidosCreateManyClienteInputEnvelope
    set?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    disconnect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    delete?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    connect?: suspendidosWhereUniqueInput | suspendidosWhereUniqueInput[]
    update?: suspendidosUpdateWithWhereUniqueWithoutClienteInput | suspendidosUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: suspendidosUpdateManyWithWhereWithoutClienteInput | suspendidosUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: suspendidosScalarWhereInput | suspendidosScalarWhereInput[]
  }

  export type ticketsUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ticketsCreateWithoutClienteInput, ticketsUncheckedCreateWithoutClienteInput> | ticketsCreateWithoutClienteInput[] | ticketsUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ticketsCreateOrConnectWithoutClienteInput | ticketsCreateOrConnectWithoutClienteInput[]
    upsert?: ticketsUpsertWithWhereUniqueWithoutClienteInput | ticketsUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ticketsCreateManyClienteInputEnvelope
    set?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    disconnect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    delete?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    connect?: ticketsWhereUniqueInput | ticketsWhereUniqueInput[]
    update?: ticketsUpdateWithWhereUniqueWithoutClienteInput | ticketsUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ticketsUpdateManyWithWhereWithoutClienteInput | ticketsUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ticketsScalarWhereInput | ticketsScalarWhereInput[]
  }

  export type tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<tiempodejuegoCreateWithoutClienteInput, tiempodejuegoUncheckedCreateWithoutClienteInput> | tiempodejuegoCreateWithoutClienteInput[] | tiempodejuegoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: tiempodejuegoCreateOrConnectWithoutClienteInput | tiempodejuegoCreateOrConnectWithoutClienteInput[]
    upsert?: tiempodejuegoUpsertWithWhereUniqueWithoutClienteInput | tiempodejuegoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: tiempodejuegoCreateManyClienteInputEnvelope
    set?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    disconnect?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    delete?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    connect?: tiempodejuegoWhereUniqueInput | tiempodejuegoWhereUniqueInput[]
    update?: tiempodejuegoUpdateWithWhereUniqueWithoutClienteInput | tiempodejuegoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: tiempodejuegoUpdateManyWithWhereWithoutClienteInput | tiempodejuegoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: tiempodejuegoScalarWhereInput | tiempodejuegoScalarWhereInput[]
  }

  export type clienteCreateNestedOneWithoutDisminucionlimitehorarioInput = {
    create?: XOR<clienteCreateWithoutDisminucionlimitehorarioInput, clienteUncheckedCreateWithoutDisminucionlimitehorarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutDisminucionlimitehorarioInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteUpdateOneWithoutDisminucionlimitehorarioNestedInput = {
    create?: XOR<clienteCreateWithoutDisminucionlimitehorarioInput, clienteUncheckedCreateWithoutDisminucionlimitehorarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutDisminucionlimitehorarioInput
    upsert?: clienteUpsertWithoutDisminucionlimitehorarioInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutDisminucionlimitehorarioInput, clienteUpdateWithoutDisminucionlimitehorarioInput>, clienteUncheckedUpdateWithoutDisminucionlimitehorarioInput>
  }

  export type clienteCreateNestedOneWithoutDisminucionlimitemonetarioInput = {
    create?: XOR<clienteCreateWithoutDisminucionlimitemonetarioInput, clienteUncheckedCreateWithoutDisminucionlimitemonetarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutDisminucionlimitemonetarioInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteUpdateOneWithoutDisminucionlimitemonetarioNestedInput = {
    create?: XOR<clienteCreateWithoutDisminucionlimitemonetarioInput, clienteUncheckedCreateWithoutDisminucionlimitemonetarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutDisminucionlimitemonetarioInput
    upsert?: clienteUpsertWithoutDisminucionlimitemonetarioInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutDisminucionlimitemonetarioInput, clienteUpdateWithoutDisminucionlimitemonetarioInput>, clienteUncheckedUpdateWithoutDisminucionlimitemonetarioInput>
  }

  export type clienteCreateNestedOneWithoutEgresoInput = {
    create?: XOR<clienteCreateWithoutEgresoInput, clienteUncheckedCreateWithoutEgresoInput>
    connectOrCreate?: clienteCreateOrConnectWithoutEgresoInput
    connect?: clienteWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type clienteUpdateOneWithoutEgresoNestedInput = {
    create?: XOR<clienteCreateWithoutEgresoInput, clienteUncheckedCreateWithoutEgresoInput>
    connectOrCreate?: clienteCreateOrConnectWithoutEgresoInput
    upsert?: clienteUpsertWithoutEgresoInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutEgresoInput, clienteUpdateWithoutEgresoInput>, clienteUncheckedUpdateWithoutEgresoInput>
  }

  export type clienteCreateNestedOneWithoutIngresoInput = {
    create?: XOR<clienteCreateWithoutIngresoInput, clienteUncheckedCreateWithoutIngresoInput>
    connectOrCreate?: clienteCreateOrConnectWithoutIngresoInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteUpdateOneWithoutIngresoNestedInput = {
    create?: XOR<clienteCreateWithoutIngresoInput, clienteUncheckedCreateWithoutIngresoInput>
    connectOrCreate?: clienteCreateOrConnectWithoutIngresoInput
    upsert?: clienteUpsertWithoutIngresoInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutIngresoInput, clienteUpdateWithoutIngresoInput>, clienteUncheckedUpdateWithoutIngresoInput>
  }

  export type clienteCreateNestedOneWithoutJugadaInput = {
    create?: XOR<clienteCreateWithoutJugadaInput, clienteUncheckedCreateWithoutJugadaInput>
    connectOrCreate?: clienteCreateOrConnectWithoutJugadaInput
    connect?: clienteWhereUniqueInput
  }

  export type partidaCreateNestedOneWithoutJugadaInput = {
    create?: XOR<partidaCreateWithoutJugadaInput, partidaUncheckedCreateWithoutJugadaInput>
    connectOrCreate?: partidaCreateOrConnectWithoutJugadaInput
    connect?: partidaWhereUniqueInput
  }

  export type clienteUpdateOneWithoutJugadaNestedInput = {
    create?: XOR<clienteCreateWithoutJugadaInput, clienteUncheckedCreateWithoutJugadaInput>
    connectOrCreate?: clienteCreateOrConnectWithoutJugadaInput
    upsert?: clienteUpsertWithoutJugadaInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutJugadaInput, clienteUpdateWithoutJugadaInput>, clienteUncheckedUpdateWithoutJugadaInput>
  }

  export type partidaUpdateOneWithoutJugadaNestedInput = {
    create?: XOR<partidaCreateWithoutJugadaInput, partidaUncheckedCreateWithoutJugadaInput>
    connectOrCreate?: partidaCreateOrConnectWithoutJugadaInput
    upsert?: partidaUpsertWithoutJugadaInput
    disconnect?: partidaWhereInput | boolean
    delete?: partidaWhereInput | boolean
    connect?: partidaWhereUniqueInput
    update?: XOR<XOR<partidaUpdateToOneWithWhereWithoutJugadaInput, partidaUpdateWithoutJugadaInput>, partidaUncheckedUpdateWithoutJugadaInput>
  }

  export type clienteCreateNestedOneWithoutLimitehorarioInput = {
    create?: XOR<clienteCreateWithoutLimitehorarioInput, clienteUncheckedCreateWithoutLimitehorarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutLimitehorarioInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteUpdateOneRequiredWithoutLimitehorarioNestedInput = {
    create?: XOR<clienteCreateWithoutLimitehorarioInput, clienteUncheckedCreateWithoutLimitehorarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutLimitehorarioInput
    upsert?: clienteUpsertWithoutLimitehorarioInput
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutLimitehorarioInput, clienteUpdateWithoutLimitehorarioInput>, clienteUncheckedUpdateWithoutLimitehorarioInput>
  }

  export type clienteCreateNestedOneWithoutLimitemonetarioInput = {
    create?: XOR<clienteCreateWithoutLimitemonetarioInput, clienteUncheckedCreateWithoutLimitemonetarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutLimitemonetarioInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteUpdateOneRequiredWithoutLimitemonetarioNestedInput = {
    create?: XOR<clienteCreateWithoutLimitemonetarioInput, clienteUncheckedCreateWithoutLimitemonetarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutLimitemonetarioInput
    upsert?: clienteUpsertWithoutLimitemonetarioInput
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutLimitemonetarioInput, clienteUpdateWithoutLimitemonetarioInput>, clienteUncheckedUpdateWithoutLimitemonetarioInput>
  }

  export type ticketsCreateNestedOneWithoutMensajesInput = {
    create?: XOR<ticketsCreateWithoutMensajesInput, ticketsUncheckedCreateWithoutMensajesInput>
    connectOrCreate?: ticketsCreateOrConnectWithoutMensajesInput
    connect?: ticketsWhereUniqueInput
  }

  export type ticketsUpdateOneRequiredWithoutMensajesNestedInput = {
    create?: XOR<ticketsCreateWithoutMensajesInput, ticketsUncheckedCreateWithoutMensajesInput>
    connectOrCreate?: ticketsCreateOrConnectWithoutMensajesInput
    upsert?: ticketsUpsertWithoutMensajesInput
    connect?: ticketsWhereUniqueInput
    update?: XOR<XOR<ticketsUpdateToOneWithWhereWithoutMensajesInput, ticketsUpdateWithoutMensajesInput>, ticketsUncheckedUpdateWithoutMensajesInput>
  }

  export type jugadaCreateNestedManyWithoutPartidaInput = {
    create?: XOR<jugadaCreateWithoutPartidaInput, jugadaUncheckedCreateWithoutPartidaInput> | jugadaCreateWithoutPartidaInput[] | jugadaUncheckedCreateWithoutPartidaInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutPartidaInput | jugadaCreateOrConnectWithoutPartidaInput[]
    createMany?: jugadaCreateManyPartidaInputEnvelope
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
  }

  export type clienteCreateNestedOneWithoutPartidaInput = {
    create?: XOR<clienteCreateWithoutPartidaInput, clienteUncheckedCreateWithoutPartidaInput>
    connectOrCreate?: clienteCreateOrConnectWithoutPartidaInput
    connect?: clienteWhereUniqueInput
  }

  export type jugadaUncheckedCreateNestedManyWithoutPartidaInput = {
    create?: XOR<jugadaCreateWithoutPartidaInput, jugadaUncheckedCreateWithoutPartidaInput> | jugadaCreateWithoutPartidaInput[] | jugadaUncheckedCreateWithoutPartidaInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutPartidaInput | jugadaCreateOrConnectWithoutPartidaInput[]
    createMany?: jugadaCreateManyPartidaInputEnvelope
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
  }

  export type jugadaUpdateManyWithoutPartidaNestedInput = {
    create?: XOR<jugadaCreateWithoutPartidaInput, jugadaUncheckedCreateWithoutPartidaInput> | jugadaCreateWithoutPartidaInput[] | jugadaUncheckedCreateWithoutPartidaInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutPartidaInput | jugadaCreateOrConnectWithoutPartidaInput[]
    upsert?: jugadaUpsertWithWhereUniqueWithoutPartidaInput | jugadaUpsertWithWhereUniqueWithoutPartidaInput[]
    createMany?: jugadaCreateManyPartidaInputEnvelope
    set?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    disconnect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    delete?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    update?: jugadaUpdateWithWhereUniqueWithoutPartidaInput | jugadaUpdateWithWhereUniqueWithoutPartidaInput[]
    updateMany?: jugadaUpdateManyWithWhereWithoutPartidaInput | jugadaUpdateManyWithWhereWithoutPartidaInput[]
    deleteMany?: jugadaScalarWhereInput | jugadaScalarWhereInput[]
  }

  export type clienteUpdateOneWithoutPartidaNestedInput = {
    create?: XOR<clienteCreateWithoutPartidaInput, clienteUncheckedCreateWithoutPartidaInput>
    connectOrCreate?: clienteCreateOrConnectWithoutPartidaInput
    upsert?: clienteUpsertWithoutPartidaInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutPartidaInput, clienteUpdateWithoutPartidaInput>, clienteUncheckedUpdateWithoutPartidaInput>
  }

  export type jugadaUncheckedUpdateManyWithoutPartidaNestedInput = {
    create?: XOR<jugadaCreateWithoutPartidaInput, jugadaUncheckedCreateWithoutPartidaInput> | jugadaCreateWithoutPartidaInput[] | jugadaUncheckedCreateWithoutPartidaInput[]
    connectOrCreate?: jugadaCreateOrConnectWithoutPartidaInput | jugadaCreateOrConnectWithoutPartidaInput[]
    upsert?: jugadaUpsertWithWhereUniqueWithoutPartidaInput | jugadaUpsertWithWhereUniqueWithoutPartidaInput[]
    createMany?: jugadaCreateManyPartidaInputEnvelope
    set?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    disconnect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    delete?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    connect?: jugadaWhereUniqueInput | jugadaWhereUniqueInput[]
    update?: jugadaUpdateWithWhereUniqueWithoutPartidaInput | jugadaUpdateWithWhereUniqueWithoutPartidaInput[]
    updateMany?: jugadaUpdateManyWithWhereWithoutPartidaInput | jugadaUpdateManyWithWhereWithoutPartidaInput[]
    deleteMany?: jugadaScalarWhereInput | jugadaScalarWhereInput[]
  }

  export type clienteCreateNestedOneWithoutPausaInput = {
    create?: XOR<clienteCreateWithoutPausaInput, clienteUncheckedCreateWithoutPausaInput>
    connectOrCreate?: clienteCreateOrConnectWithoutPausaInput
    connect?: clienteWhereUniqueInput
  }

  export type clienteUpdateOneRequiredWithoutPausaNestedInput = {
    create?: XOR<clienteCreateWithoutPausaInput, clienteUncheckedCreateWithoutPausaInput>
    connectOrCreate?: clienteCreateOrConnectWithoutPausaInput
    upsert?: clienteUpsertWithoutPausaInput
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutPausaInput, clienteUpdateWithoutPausaInput>, clienteUncheckedUpdateWithoutPausaInput>
  }

  export type administradorCreateNestedOneWithoutSuspendidosInput = {
    create?: XOR<administradorCreateWithoutSuspendidosInput, administradorUncheckedCreateWithoutSuspendidosInput>
    connectOrCreate?: administradorCreateOrConnectWithoutSuspendidosInput
    connect?: administradorWhereUniqueInput
  }

  export type clienteCreateNestedOneWithoutSuspendidosInput = {
    create?: XOR<clienteCreateWithoutSuspendidosInput, clienteUncheckedCreateWithoutSuspendidosInput>
    connectOrCreate?: clienteCreateOrConnectWithoutSuspendidosInput
    connect?: clienteWhereUniqueInput
  }

  export type administradorUpdateOneWithoutSuspendidosNestedInput = {
    create?: XOR<administradorCreateWithoutSuspendidosInput, administradorUncheckedCreateWithoutSuspendidosInput>
    connectOrCreate?: administradorCreateOrConnectWithoutSuspendidosInput
    upsert?: administradorUpsertWithoutSuspendidosInput
    disconnect?: administradorWhereInput | boolean
    delete?: administradorWhereInput | boolean
    connect?: administradorWhereUniqueInput
    update?: XOR<XOR<administradorUpdateToOneWithWhereWithoutSuspendidosInput, administradorUpdateWithoutSuspendidosInput>, administradorUncheckedUpdateWithoutSuspendidosInput>
  }

  export type clienteUpdateOneWithoutSuspendidosNestedInput = {
    create?: XOR<clienteCreateWithoutSuspendidosInput, clienteUncheckedCreateWithoutSuspendidosInput>
    connectOrCreate?: clienteCreateOrConnectWithoutSuspendidosInput
    upsert?: clienteUpsertWithoutSuspendidosInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutSuspendidosInput, clienteUpdateWithoutSuspendidosInput>, clienteUncheckedUpdateWithoutSuspendidosInput>
  }

  export type mensajesCreateNestedOneWithoutTicketsInput = {
    create?: XOR<mensajesCreateWithoutTicketsInput, mensajesUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: mensajesCreateOrConnectWithoutTicketsInput
    connect?: mensajesWhereUniqueInput
  }

  export type clienteCreateNestedOneWithoutTicketsInput = {
    create?: XOR<clienteCreateWithoutTicketsInput, clienteUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: clienteCreateOrConnectWithoutTicketsInput
    connect?: clienteWhereUniqueInput
  }

  export type administradorCreateNestedOneWithoutTicketsInput = {
    create?: XOR<administradorCreateWithoutTicketsInput, administradorUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: administradorCreateOrConnectWithoutTicketsInput
    connect?: administradorWhereUniqueInput
  }

  export type mensajesUncheckedCreateNestedOneWithoutTicketsInput = {
    create?: XOR<mensajesCreateWithoutTicketsInput, mensajesUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: mensajesCreateOrConnectWithoutTicketsInput
    connect?: mensajesWhereUniqueInput
  }

  export type mensajesUpdateOneWithoutTicketsNestedInput = {
    create?: XOR<mensajesCreateWithoutTicketsInput, mensajesUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: mensajesCreateOrConnectWithoutTicketsInput
    upsert?: mensajesUpsertWithoutTicketsInput
    disconnect?: mensajesWhereInput | boolean
    delete?: mensajesWhereInput | boolean
    connect?: mensajesWhereUniqueInput
    update?: XOR<XOR<mensajesUpdateToOneWithWhereWithoutTicketsInput, mensajesUpdateWithoutTicketsInput>, mensajesUncheckedUpdateWithoutTicketsInput>
  }

  export type clienteUpdateOneWithoutTicketsNestedInput = {
    create?: XOR<clienteCreateWithoutTicketsInput, clienteUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: clienteCreateOrConnectWithoutTicketsInput
    upsert?: clienteUpsertWithoutTicketsInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutTicketsInput, clienteUpdateWithoutTicketsInput>, clienteUncheckedUpdateWithoutTicketsInput>
  }

  export type administradorUpdateOneWithoutTicketsNestedInput = {
    create?: XOR<administradorCreateWithoutTicketsInput, administradorUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: administradorCreateOrConnectWithoutTicketsInput
    upsert?: administradorUpsertWithoutTicketsInput
    disconnect?: administradorWhereInput | boolean
    delete?: administradorWhereInput | boolean
    connect?: administradorWhereUniqueInput
    update?: XOR<XOR<administradorUpdateToOneWithWhereWithoutTicketsInput, administradorUpdateWithoutTicketsInput>, administradorUncheckedUpdateWithoutTicketsInput>
  }

  export type mensajesUncheckedUpdateOneWithoutTicketsNestedInput = {
    create?: XOR<mensajesCreateWithoutTicketsInput, mensajesUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: mensajesCreateOrConnectWithoutTicketsInput
    upsert?: mensajesUpsertWithoutTicketsInput
    disconnect?: mensajesWhereInput | boolean
    delete?: mensajesWhereInput | boolean
    connect?: mensajesWhereUniqueInput
    update?: XOR<XOR<mensajesUpdateToOneWithWhereWithoutTicketsInput, mensajesUpdateWithoutTicketsInput>, mensajesUncheckedUpdateWithoutTicketsInput>
  }

  export type clienteCreateNestedOneWithoutTiempodejuegoInput = {
    create?: XOR<clienteCreateWithoutTiempodejuegoInput, clienteUncheckedCreateWithoutTiempodejuegoInput>
    connectOrCreate?: clienteCreateOrConnectWithoutTiempodejuegoInput
    connect?: clienteWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type clienteUpdateOneRequiredWithoutTiempodejuegoNestedInput = {
    create?: XOR<clienteCreateWithoutTiempodejuegoInput, clienteUncheckedCreateWithoutTiempodejuegoInput>
    connectOrCreate?: clienteCreateOrConnectWithoutTiempodejuegoInput
    upsert?: clienteUpsertWithoutTiempodejuegoInput
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutTiempodejuegoInput, clienteUpdateWithoutTiempodejuegoInput>, clienteUncheckedUpdateWithoutTiempodejuegoInput>
  }

  export type administradorCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<administradorCreateWithoutUsuarioInput, administradorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutUsuarioInput
    connect?: administradorWhereUniqueInput
  }

  export type clienteCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<clienteCreateWithoutUsuarioInput, clienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutUsuarioInput
    connect?: clienteWhereUniqueInput
  }

  export type administradorUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<administradorCreateWithoutUsuarioInput, administradorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutUsuarioInput
    connect?: administradorWhereUniqueInput
  }

  export type clienteUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<clienteCreateWithoutUsuarioInput, clienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutUsuarioInput
    connect?: clienteWhereUniqueInput
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Uint8Array | null
  }

  export type administradorUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<administradorCreateWithoutUsuarioInput, administradorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutUsuarioInput
    upsert?: administradorUpsertWithoutUsuarioInput
    disconnect?: administradorWhereInput | boolean
    delete?: administradorWhereInput | boolean
    connect?: administradorWhereUniqueInput
    update?: XOR<XOR<administradorUpdateToOneWithWhereWithoutUsuarioInput, administradorUpdateWithoutUsuarioInput>, administradorUncheckedUpdateWithoutUsuarioInput>
  }

  export type clienteUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<clienteCreateWithoutUsuarioInput, clienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutUsuarioInput
    upsert?: clienteUpsertWithoutUsuarioInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutUsuarioInput, clienteUpdateWithoutUsuarioInput>, clienteUncheckedUpdateWithoutUsuarioInput>
  }

  export type administradorUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<administradorCreateWithoutUsuarioInput, administradorUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: administradorCreateOrConnectWithoutUsuarioInput
    upsert?: administradorUpsertWithoutUsuarioInput
    disconnect?: administradorWhereInput | boolean
    delete?: administradorWhereInput | boolean
    connect?: administradorWhereUniqueInput
    update?: XOR<XOR<administradorUpdateToOneWithWhereWithoutUsuarioInput, administradorUpdateWithoutUsuarioInput>, administradorUncheckedUpdateWithoutUsuarioInput>
  }

  export type clienteUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<clienteCreateWithoutUsuarioInput, clienteUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: clienteCreateOrConnectWithoutUsuarioInput
    upsert?: clienteUpsertWithoutUsuarioInput
    disconnect?: clienteWhereInput | boolean
    delete?: clienteWhereInput | boolean
    connect?: clienteWhereUniqueInput
    update?: XOR<XOR<clienteUpdateToOneWithWhereWithoutUsuarioInput, clienteUpdateWithoutUsuarioInput>, clienteUncheckedUpdateWithoutUsuarioInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Uint8Array | null
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Uint8Array | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type usuarioCreateWithoutAdministradorInput = {
    nombre?: string | null
    apellido?: string | null
    email?: string | null
    password?: string | null
    dni?: string | null
    edad?: string | null
    img?: Uint8Array | null
    cliente?: clienteCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutAdministradorInput = {
    usuarioid?: number
    nombre?: string | null
    apellido?: string | null
    email?: string | null
    password?: string | null
    dni?: string | null
    edad?: string | null
    img?: Uint8Array | null
    cliente?: clienteUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutAdministradorInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutAdministradorInput, usuarioUncheckedCreateWithoutAdministradorInput>
  }

  export type aumentolimitehorarioCreateWithoutAdministradorInput = {
    cantidad?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
    cliente?: clienteCreateNestedOneWithoutAumentolimitehorarioInput
  }

  export type aumentolimitehorarioUncheckedCreateWithoutAdministradorInput = {
    aumenthorarioid?: number
    clienteid?: number | null
    cantidad?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitehorarioCreateOrConnectWithoutAdministradorInput = {
    where: aumentolimitehorarioWhereUniqueInput
    create: XOR<aumentolimitehorarioCreateWithoutAdministradorInput, aumentolimitehorarioUncheckedCreateWithoutAdministradorInput>
  }

  export type aumentolimitehorarioCreateManyAdministradorInputEnvelope = {
    data: aumentolimitehorarioCreateManyAdministradorInput | aumentolimitehorarioCreateManyAdministradorInput[]
    skipDuplicates?: boolean
  }

  export type aumentolimitesmonetarioCreateWithoutAdministradorInput = {
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
    cliente?: clienteCreateNestedOneWithoutAumentolimitesmonetarioInput
  }

  export type aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput = {
    aumentomonetarioid?: number
    clienteid?: number | null
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitesmonetarioCreateOrConnectWithoutAdministradorInput = {
    where: aumentolimitesmonetarioWhereUniqueInput
    create: XOR<aumentolimitesmonetarioCreateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput>
  }

  export type aumentolimitesmonetarioCreateManyAdministradorInputEnvelope = {
    data: aumentolimitesmonetarioCreateManyAdministradorInput | aumentolimitesmonetarioCreateManyAdministradorInput[]
    skipDuplicates?: boolean
  }

  export type suspendidosCreateWithoutAdministradorInput = {
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    razon?: string | null
    cliente?: clienteCreateNestedOneWithoutSuspendidosInput
  }

  export type suspendidosUncheckedCreateWithoutAdministradorInput = {
    suspendidoid?: number
    clienteid?: number | null
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    razon?: string | null
  }

  export type suspendidosCreateOrConnectWithoutAdministradorInput = {
    where: suspendidosWhereUniqueInput
    create: XOR<suspendidosCreateWithoutAdministradorInput, suspendidosUncheckedCreateWithoutAdministradorInput>
  }

  export type suspendidosCreateManyAdministradorInputEnvelope = {
    data: suspendidosCreateManyAdministradorInput | suspendidosCreateManyAdministradorInput[]
    skipDuplicates?: boolean
  }

  export type ticketsCreateWithoutAdministradorInput = {
    problema?: string | null
    resuelto?: boolean | null
    mensajes?: mensajesCreateNestedOneWithoutTicketsInput
    cliente?: clienteCreateNestedOneWithoutTicketsInput
  }

  export type ticketsUncheckedCreateWithoutAdministradorInput = {
    ticketid?: number
    clienteid?: number | null
    problema?: string | null
    resuelto?: boolean | null
    mensajes?: mensajesUncheckedCreateNestedOneWithoutTicketsInput
  }

  export type ticketsCreateOrConnectWithoutAdministradorInput = {
    where: ticketsWhereUniqueInput
    create: XOR<ticketsCreateWithoutAdministradorInput, ticketsUncheckedCreateWithoutAdministradorInput>
  }

  export type ticketsCreateManyAdministradorInputEnvelope = {
    data: ticketsCreateManyAdministradorInput | ticketsCreateManyAdministradorInput[]
    skipDuplicates?: boolean
  }

  export type usuarioUpsertWithoutAdministradorInput = {
    update: XOR<usuarioUpdateWithoutAdministradorInput, usuarioUncheckedUpdateWithoutAdministradorInput>
    create: XOR<usuarioCreateWithoutAdministradorInput, usuarioUncheckedCreateWithoutAdministradorInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutAdministradorInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutAdministradorInput, usuarioUncheckedUpdateWithoutAdministradorInput>
  }

  export type usuarioUpdateWithoutAdministradorInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
    cliente?: clienteUpdateOneWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutAdministradorInput = {
    usuarioid?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
    cliente?: clienteUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type aumentolimitehorarioUpsertWithWhereUniqueWithoutAdministradorInput = {
    where: aumentolimitehorarioWhereUniqueInput
    update: XOR<aumentolimitehorarioUpdateWithoutAdministradorInput, aumentolimitehorarioUncheckedUpdateWithoutAdministradorInput>
    create: XOR<aumentolimitehorarioCreateWithoutAdministradorInput, aumentolimitehorarioUncheckedCreateWithoutAdministradorInput>
  }

  export type aumentolimitehorarioUpdateWithWhereUniqueWithoutAdministradorInput = {
    where: aumentolimitehorarioWhereUniqueInput
    data: XOR<aumentolimitehorarioUpdateWithoutAdministradorInput, aumentolimitehorarioUncheckedUpdateWithoutAdministradorInput>
  }

  export type aumentolimitehorarioUpdateManyWithWhereWithoutAdministradorInput = {
    where: aumentolimitehorarioScalarWhereInput
    data: XOR<aumentolimitehorarioUpdateManyMutationInput, aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorInput>
  }

  export type aumentolimitehorarioScalarWhereInput = {
    AND?: aumentolimitehorarioScalarWhereInput | aumentolimitehorarioScalarWhereInput[]
    OR?: aumentolimitehorarioScalarWhereInput[]
    NOT?: aumentolimitehorarioScalarWhereInput | aumentolimitehorarioScalarWhereInput[]
    aumenthorarioid?: IntFilter<"aumentolimitehorario"> | number
    clienteid?: IntNullableFilter<"aumentolimitehorario"> | number | null
    cantidad?: IntNullableFilter<"aumentolimitehorario"> | number | null
    adminid?: IntNullableFilter<"aumentolimitehorario"> | number | null
    fechaabierto?: DateTimeNullableFilter<"aumentolimitehorario"> | Date | string | null
    fecharesuelto?: DateTimeNullableFilter<"aumentolimitehorario"> | Date | string | null
  }

  export type aumentolimitesmonetarioUpsertWithWhereUniqueWithoutAdministradorInput = {
    where: aumentolimitesmonetarioWhereUniqueInput
    update: XOR<aumentolimitesmonetarioUpdateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedUpdateWithoutAdministradorInput>
    create: XOR<aumentolimitesmonetarioCreateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedCreateWithoutAdministradorInput>
  }

  export type aumentolimitesmonetarioUpdateWithWhereUniqueWithoutAdministradorInput = {
    where: aumentolimitesmonetarioWhereUniqueInput
    data: XOR<aumentolimitesmonetarioUpdateWithoutAdministradorInput, aumentolimitesmonetarioUncheckedUpdateWithoutAdministradorInput>
  }

  export type aumentolimitesmonetarioUpdateManyWithWhereWithoutAdministradorInput = {
    where: aumentolimitesmonetarioScalarWhereInput
    data: XOR<aumentolimitesmonetarioUpdateManyMutationInput, aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorInput>
  }

  export type aumentolimitesmonetarioScalarWhereInput = {
    AND?: aumentolimitesmonetarioScalarWhereInput | aumentolimitesmonetarioScalarWhereInput[]
    OR?: aumentolimitesmonetarioScalarWhereInput[]
    NOT?: aumentolimitesmonetarioScalarWhereInput | aumentolimitesmonetarioScalarWhereInput[]
    aumentomonetarioid?: IntFilter<"aumentolimitesmonetario"> | number
    clienteid?: IntNullableFilter<"aumentolimitesmonetario"> | number | null
    cantidad?: DecimalNullableFilter<"aumentolimitesmonetario"> | Decimal | DecimalJsLike | number | string | null
    adminid?: IntNullableFilter<"aumentolimitesmonetario"> | number | null
    fechaabierto?: DateTimeNullableFilter<"aumentolimitesmonetario"> | Date | string | null
    fecharesuelto?: DateTimeNullableFilter<"aumentolimitesmonetario"> | Date | string | null
  }

  export type suspendidosUpsertWithWhereUniqueWithoutAdministradorInput = {
    where: suspendidosWhereUniqueInput
    update: XOR<suspendidosUpdateWithoutAdministradorInput, suspendidosUncheckedUpdateWithoutAdministradorInput>
    create: XOR<suspendidosCreateWithoutAdministradorInput, suspendidosUncheckedCreateWithoutAdministradorInput>
  }

  export type suspendidosUpdateWithWhereUniqueWithoutAdministradorInput = {
    where: suspendidosWhereUniqueInput
    data: XOR<suspendidosUpdateWithoutAdministradorInput, suspendidosUncheckedUpdateWithoutAdministradorInput>
  }

  export type suspendidosUpdateManyWithWhereWithoutAdministradorInput = {
    where: suspendidosScalarWhereInput
    data: XOR<suspendidosUpdateManyMutationInput, suspendidosUncheckedUpdateManyWithoutAdministradorInput>
  }

  export type suspendidosScalarWhereInput = {
    AND?: suspendidosScalarWhereInput | suspendidosScalarWhereInput[]
    OR?: suspendidosScalarWhereInput[]
    NOT?: suspendidosScalarWhereInput | suspendidosScalarWhereInput[]
    suspendidoid?: IntFilter<"suspendidos"> | number
    clienteid?: IntNullableFilter<"suspendidos"> | number | null
    fechainicio?: DateTimeNullableFilter<"suspendidos"> | Date | string | null
    fechafin?: DateTimeNullableFilter<"suspendidos"> | Date | string | null
    duracion?: IntNullableFilter<"suspendidos"> | number | null
    adminid?: IntNullableFilter<"suspendidos"> | number | null
    razon?: StringNullableFilter<"suspendidos"> | string | null
  }

  export type ticketsUpsertWithWhereUniqueWithoutAdministradorInput = {
    where: ticketsWhereUniqueInput
    update: XOR<ticketsUpdateWithoutAdministradorInput, ticketsUncheckedUpdateWithoutAdministradorInput>
    create: XOR<ticketsCreateWithoutAdministradorInput, ticketsUncheckedCreateWithoutAdministradorInput>
  }

  export type ticketsUpdateWithWhereUniqueWithoutAdministradorInput = {
    where: ticketsWhereUniqueInput
    data: XOR<ticketsUpdateWithoutAdministradorInput, ticketsUncheckedUpdateWithoutAdministradorInput>
  }

  export type ticketsUpdateManyWithWhereWithoutAdministradorInput = {
    where: ticketsScalarWhereInput
    data: XOR<ticketsUpdateManyMutationInput, ticketsUncheckedUpdateManyWithoutAdministradorInput>
  }

  export type ticketsScalarWhereInput = {
    AND?: ticketsScalarWhereInput | ticketsScalarWhereInput[]
    OR?: ticketsScalarWhereInput[]
    NOT?: ticketsScalarWhereInput | ticketsScalarWhereInput[]
    ticketid?: IntFilter<"tickets"> | number
    clienteid?: IntNullableFilter<"tickets"> | number | null
    problema?: StringNullableFilter<"tickets"> | string | null
    resuelto?: BoolNullableFilter<"tickets"> | boolean | null
    idadmin?: IntNullableFilter<"tickets"> | number | null
  }

  export type clienteCreateWithoutAmistad_amistad_cliente2idToclienteInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutAmistad_amistad_cliente2idToclienteInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutAmistad_amistad_cliente2idToclienteInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutAmistad_amistad_cliente2idToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_cliente2idToclienteInput>
  }

  export type clienteCreateWithoutAmistad_amistad_clienteidToclienteInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutAmistad_amistad_clienteidToclienteInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutAmistad_amistad_clienteidToclienteInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutAmistad_amistad_clienteidToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_clienteidToclienteInput>
  }

  export type clienteUpsertWithoutAmistad_amistad_cliente2idToclienteInput = {
    update: XOR<clienteUpdateWithoutAmistad_amistad_cliente2idToclienteInput, clienteUncheckedUpdateWithoutAmistad_amistad_cliente2idToclienteInput>
    create: XOR<clienteCreateWithoutAmistad_amistad_cliente2idToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_cliente2idToclienteInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutAmistad_amistad_cliente2idToclienteInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutAmistad_amistad_cliente2idToclienteInput, clienteUncheckedUpdateWithoutAmistad_amistad_cliente2idToclienteInput>
  }

  export type clienteUpdateWithoutAmistad_amistad_cliente2idToclienteInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutAmistad_amistad_cliente2idToclienteInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteUpsertWithoutAmistad_amistad_clienteidToclienteInput = {
    update: XOR<clienteUpdateWithoutAmistad_amistad_clienteidToclienteInput, clienteUncheckedUpdateWithoutAmistad_amistad_clienteidToclienteInput>
    create: XOR<clienteCreateWithoutAmistad_amistad_clienteidToclienteInput, clienteUncheckedCreateWithoutAmistad_amistad_clienteidToclienteInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutAmistad_amistad_clienteidToclienteInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutAmistad_amistad_clienteidToclienteInput, clienteUncheckedUpdateWithoutAmistad_amistad_clienteidToclienteInput>
  }

  export type clienteUpdateWithoutAmistad_amistad_clienteidToclienteInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutAmistad_amistad_clienteidToclienteInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type administradorCreateWithoutAumentolimitehorarioInput = {
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuario: usuarioCreateNestedOneWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsCreateNestedManyWithoutAdministradorInput
  }

  export type administradorUncheckedCreateWithoutAumentolimitehorarioInput = {
    adminid?: number
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuarioid: number
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutAdministradorInput
  }

  export type administradorCreateOrConnectWithoutAumentolimitehorarioInput = {
    where: administradorWhereUniqueInput
    create: XOR<administradorCreateWithoutAumentolimitehorarioInput, administradorUncheckedCreateWithoutAumentolimitehorarioInput>
  }

  export type clienteCreateWithoutAumentolimitehorarioInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutAumentolimitehorarioInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutAumentolimitehorarioInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutAumentolimitehorarioInput, clienteUncheckedCreateWithoutAumentolimitehorarioInput>
  }

  export type administradorUpsertWithoutAumentolimitehorarioInput = {
    update: XOR<administradorUpdateWithoutAumentolimitehorarioInput, administradorUncheckedUpdateWithoutAumentolimitehorarioInput>
    create: XOR<administradorCreateWithoutAumentolimitehorarioInput, administradorUncheckedCreateWithoutAumentolimitehorarioInput>
    where?: administradorWhereInput
  }

  export type administradorUpdateToOneWithWhereWithoutAumentolimitehorarioInput = {
    where?: administradorWhereInput
    data: XOR<administradorUpdateWithoutAumentolimitehorarioInput, administradorUncheckedUpdateWithoutAumentolimitehorarioInput>
  }

  export type administradorUpdateWithoutAumentolimitehorarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuario?: usuarioUpdateOneRequiredWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUpdateManyWithoutAdministradorNestedInput
  }

  export type administradorUncheckedUpdateWithoutAumentolimitehorarioInput = {
    adminid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutAdministradorNestedInput
  }

  export type clienteUpsertWithoutAumentolimitehorarioInput = {
    update: XOR<clienteUpdateWithoutAumentolimitehorarioInput, clienteUncheckedUpdateWithoutAumentolimitehorarioInput>
    create: XOR<clienteCreateWithoutAumentolimitehorarioInput, clienteUncheckedCreateWithoutAumentolimitehorarioInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutAumentolimitehorarioInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutAumentolimitehorarioInput, clienteUncheckedUpdateWithoutAumentolimitehorarioInput>
  }

  export type clienteUpdateWithoutAumentolimitehorarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutAumentolimitehorarioInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type administradorCreateWithoutAumentolimitesmonetarioInput = {
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuario: usuarioCreateNestedOneWithoutAdministradorInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsCreateNestedManyWithoutAdministradorInput
  }

  export type administradorUncheckedCreateWithoutAumentolimitesmonetarioInput = {
    adminid?: number
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuarioid: number
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutAdministradorInput
  }

  export type administradorCreateOrConnectWithoutAumentolimitesmonetarioInput = {
    where: administradorWhereUniqueInput
    create: XOR<administradorCreateWithoutAumentolimitesmonetarioInput, administradorUncheckedCreateWithoutAumentolimitesmonetarioInput>
  }

  export type clienteCreateWithoutAumentolimitesmonetarioInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutAumentolimitesmonetarioInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutAumentolimitesmonetarioInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutAumentolimitesmonetarioInput, clienteUncheckedCreateWithoutAumentolimitesmonetarioInput>
  }

  export type administradorUpsertWithoutAumentolimitesmonetarioInput = {
    update: XOR<administradorUpdateWithoutAumentolimitesmonetarioInput, administradorUncheckedUpdateWithoutAumentolimitesmonetarioInput>
    create: XOR<administradorCreateWithoutAumentolimitesmonetarioInput, administradorUncheckedCreateWithoutAumentolimitesmonetarioInput>
    where?: administradorWhereInput
  }

  export type administradorUpdateToOneWithWhereWithoutAumentolimitesmonetarioInput = {
    where?: administradorWhereInput
    data: XOR<administradorUpdateWithoutAumentolimitesmonetarioInput, administradorUncheckedUpdateWithoutAumentolimitesmonetarioInput>
  }

  export type administradorUpdateWithoutAumentolimitesmonetarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuario?: usuarioUpdateOneRequiredWithoutAdministradorNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUpdateManyWithoutAdministradorNestedInput
  }

  export type administradorUncheckedUpdateWithoutAumentolimitesmonetarioInput = {
    adminid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutAdministradorNestedInput
  }

  export type clienteUpsertWithoutAumentolimitesmonetarioInput = {
    update: XOR<clienteUpdateWithoutAumentolimitesmonetarioInput, clienteUncheckedUpdateWithoutAumentolimitesmonetarioInput>
    create: XOR<clienteCreateWithoutAumentolimitesmonetarioInput, clienteUncheckedCreateWithoutAumentolimitesmonetarioInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutAumentolimitesmonetarioInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutAumentolimitesmonetarioInput, clienteUncheckedUpdateWithoutAumentolimitesmonetarioInput>
  }

  export type clienteUpdateWithoutAumentolimitesmonetarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutAumentolimitesmonetarioInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type amistadCreateWithoutCliente_amistad_cliente2idToclienteInput = {
    aceptada?: boolean | null
    cliente_amistad_clienteidTocliente?: clienteCreateNestedOneWithoutAmistad_amistad_clienteidToclienteInput
  }

  export type amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput = {
    amistadid?: number
    clienteid?: number | null
    aceptada?: boolean | null
  }

  export type amistadCreateOrConnectWithoutCliente_amistad_cliente2idToclienteInput = {
    where: amistadWhereUniqueInput
    create: XOR<amistadCreateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput>
  }

  export type amistadCreateManyCliente_amistad_cliente2idToclienteInputEnvelope = {
    data: amistadCreateManyCliente_amistad_cliente2idToclienteInput | amistadCreateManyCliente_amistad_cliente2idToclienteInput[]
    skipDuplicates?: boolean
  }

  export type amistadCreateWithoutCliente_amistad_clienteidToclienteInput = {
    aceptada?: boolean | null
    cliente_amistad_cliente2idTocliente?: clienteCreateNestedOneWithoutAmistad_amistad_cliente2idToclienteInput
  }

  export type amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput = {
    amistadid?: number
    cliente2id?: number | null
    aceptada?: boolean | null
  }

  export type amistadCreateOrConnectWithoutCliente_amistad_clienteidToclienteInput = {
    where: amistadWhereUniqueInput
    create: XOR<amistadCreateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput>
  }

  export type amistadCreateManyCliente_amistad_clienteidToclienteInputEnvelope = {
    data: amistadCreateManyCliente_amistad_clienteidToclienteInput | amistadCreateManyCliente_amistad_clienteidToclienteInput[]
    skipDuplicates?: boolean
  }

  export type aumentolimitehorarioCreateWithoutClienteInput = {
    cantidad?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
    administrador?: administradorCreateNestedOneWithoutAumentolimitehorarioInput
  }

  export type aumentolimitehorarioUncheckedCreateWithoutClienteInput = {
    aumenthorarioid?: number
    cantidad?: number | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitehorarioCreateOrConnectWithoutClienteInput = {
    where: aumentolimitehorarioWhereUniqueInput
    create: XOR<aumentolimitehorarioCreateWithoutClienteInput, aumentolimitehorarioUncheckedCreateWithoutClienteInput>
  }

  export type aumentolimitehorarioCreateManyClienteInputEnvelope = {
    data: aumentolimitehorarioCreateManyClienteInput | aumentolimitehorarioCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type aumentolimitesmonetarioCreateWithoutClienteInput = {
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
    administrador?: administradorCreateNestedOneWithoutAumentolimitesmonetarioInput
  }

  export type aumentolimitesmonetarioUncheckedCreateWithoutClienteInput = {
    aumentomonetarioid?: number
    cantidad?: Decimal | DecimalJsLike | number | string | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitesmonetarioCreateOrConnectWithoutClienteInput = {
    where: aumentolimitesmonetarioWhereUniqueInput
    create: XOR<aumentolimitesmonetarioCreateWithoutClienteInput, aumentolimitesmonetarioUncheckedCreateWithoutClienteInput>
  }

  export type aumentolimitesmonetarioCreateManyClienteInputEnvelope = {
    data: aumentolimitesmonetarioCreateManyClienteInput | aumentolimitesmonetarioCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type usuarioCreateWithoutClienteInput = {
    nombre?: string | null
    apellido?: string | null
    email?: string | null
    password?: string | null
    dni?: string | null
    edad?: string | null
    img?: Uint8Array | null
    administrador?: administradorCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutClienteInput = {
    usuarioid?: number
    nombre?: string | null
    apellido?: string | null
    email?: string | null
    password?: string | null
    dni?: string | null
    edad?: string | null
    img?: Uint8Array | null
    administrador?: administradorUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutClienteInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutClienteInput, usuarioUncheckedCreateWithoutClienteInput>
  }

  export type disminucionlimitehorarioCreateWithoutClienteInput = {
    cantidad?: number | null
    fecha?: Date | string | null
  }

  export type disminucionlimitehorarioUncheckedCreateWithoutClienteInput = {
    disminucionhorarioid?: number
    cantidad?: number | null
    fecha?: Date | string | null
  }

  export type disminucionlimitehorarioCreateOrConnectWithoutClienteInput = {
    where: disminucionlimitehorarioWhereUniqueInput
    create: XOR<disminucionlimitehorarioCreateWithoutClienteInput, disminucionlimitehorarioUncheckedCreateWithoutClienteInput>
  }

  export type disminucionlimitehorarioCreateManyClienteInputEnvelope = {
    data: disminucionlimitehorarioCreateManyClienteInput | disminucionlimitehorarioCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type disminucionlimitemonetarioCreateWithoutClienteInput = {
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type disminucionlimitemonetarioUncheckedCreateWithoutClienteInput = {
    disminucionmontarioid?: number
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type disminucionlimitemonetarioCreateOrConnectWithoutClienteInput = {
    where: disminucionlimitemonetarioWhereUniqueInput
    create: XOR<disminucionlimitemonetarioCreateWithoutClienteInput, disminucionlimitemonetarioUncheckedCreateWithoutClienteInput>
  }

  export type disminucionlimitemonetarioCreateManyClienteInputEnvelope = {
    data: disminucionlimitemonetarioCreateManyClienteInput | disminucionlimitemonetarioCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type egresoCreateWithoutClienteInput = {
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    metododeretiro?: string | null
  }

  export type egresoUncheckedCreateWithoutClienteInput = {
    egresoid?: number
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    metododeretiro?: string | null
  }

  export type egresoCreateOrConnectWithoutClienteInput = {
    where: egresoWhereUniqueInput
    create: XOR<egresoCreateWithoutClienteInput, egresoUncheckedCreateWithoutClienteInput>
  }

  export type egresoCreateManyClienteInputEnvelope = {
    data: egresoCreateManyClienteInput | egresoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ingresoCreateWithoutClienteInput = {
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    cuponid?: number | null
    metododepago?: string | null
  }

  export type ingresoUncheckedCreateWithoutClienteInput = {
    ingresoid?: number
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    cuponid?: number | null
    metododepago?: string | null
  }

  export type ingresoCreateOrConnectWithoutClienteInput = {
    where: ingresoWhereUniqueInput
    create: XOR<ingresoCreateWithoutClienteInput, ingresoUncheckedCreateWithoutClienteInput>
  }

  export type ingresoCreateManyClienteInputEnvelope = {
    data: ingresoCreateManyClienteInput | ingresoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type jugadaCreateWithoutClienteInput = {
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
    partida?: partidaCreateNestedOneWithoutJugadaInput
  }

  export type jugadaUncheckedCreateWithoutClienteInput = {
    jugadaid?: number
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
    partidaid?: number | null
  }

  export type jugadaCreateOrConnectWithoutClienteInput = {
    where: jugadaWhereUniqueInput
    create: XOR<jugadaCreateWithoutClienteInput, jugadaUncheckedCreateWithoutClienteInput>
  }

  export type jugadaCreateManyClienteInputEnvelope = {
    data: jugadaCreateManyClienteInput | jugadaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type limitehorarioCreateWithoutClienteInput = {
    limitediario?: number | null
    limitesemanal?: number | null
    limitemensual?: number | null
  }

  export type limitehorarioUncheckedCreateWithoutClienteInput = {
    limitediario?: number | null
    limitesemanal?: number | null
    limitemensual?: number | null
  }

  export type limitehorarioCreateOrConnectWithoutClienteInput = {
    where: limitehorarioWhereUniqueInput
    create: XOR<limitehorarioCreateWithoutClienteInput, limitehorarioUncheckedCreateWithoutClienteInput>
  }

  export type limitemonetarioCreateWithoutClienteInput = {
    limitediario?: Decimal | DecimalJsLike | number | string | null
    limitesemanal?: Decimal | DecimalJsLike | number | string | null
    limitemensual?: Decimal | DecimalJsLike | number | string | null
  }

  export type limitemonetarioUncheckedCreateWithoutClienteInput = {
    limitediario?: Decimal | DecimalJsLike | number | string | null
    limitesemanal?: Decimal | DecimalJsLike | number | string | null
    limitemensual?: Decimal | DecimalJsLike | number | string | null
  }

  export type limitemonetarioCreateOrConnectWithoutClienteInput = {
    where: limitemonetarioWhereUniqueInput
    create: XOR<limitemonetarioCreateWithoutClienteInput, limitemonetarioUncheckedCreateWithoutClienteInput>
  }

  export type partidaCreateWithoutClienteInput = {
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    jugada?: jugadaCreateNestedManyWithoutPartidaInput
  }

  export type partidaUncheckedCreateWithoutClienteInput = {
    partidaid?: number
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    jugada?: jugadaUncheckedCreateNestedManyWithoutPartidaInput
  }

  export type partidaCreateOrConnectWithoutClienteInput = {
    where: partidaWhereUniqueInput
    create: XOR<partidaCreateWithoutClienteInput, partidaUncheckedCreateWithoutClienteInput>
  }

  export type partidaCreateManyClienteInputEnvelope = {
    data: partidaCreateManyClienteInput | partidaCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type pausaCreateWithoutClienteInput = {
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
  }

  export type pausaUncheckedCreateWithoutClienteInput = {
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
  }

  export type pausaCreateOrConnectWithoutClienteInput = {
    where: pausaWhereUniqueInput
    create: XOR<pausaCreateWithoutClienteInput, pausaUncheckedCreateWithoutClienteInput>
  }

  export type suspendidosCreateWithoutClienteInput = {
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    razon?: string | null
    administrador?: administradorCreateNestedOneWithoutSuspendidosInput
  }

  export type suspendidosUncheckedCreateWithoutClienteInput = {
    suspendidoid?: number
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    adminid?: number | null
    razon?: string | null
  }

  export type suspendidosCreateOrConnectWithoutClienteInput = {
    where: suspendidosWhereUniqueInput
    create: XOR<suspendidosCreateWithoutClienteInput, suspendidosUncheckedCreateWithoutClienteInput>
  }

  export type suspendidosCreateManyClienteInputEnvelope = {
    data: suspendidosCreateManyClienteInput | suspendidosCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ticketsCreateWithoutClienteInput = {
    problema?: string | null
    resuelto?: boolean | null
    mensajes?: mensajesCreateNestedOneWithoutTicketsInput
    administrador?: administradorCreateNestedOneWithoutTicketsInput
  }

  export type ticketsUncheckedCreateWithoutClienteInput = {
    ticketid?: number
    problema?: string | null
    resuelto?: boolean | null
    idadmin?: number | null
    mensajes?: mensajesUncheckedCreateNestedOneWithoutTicketsInput
  }

  export type ticketsCreateOrConnectWithoutClienteInput = {
    where: ticketsWhereUniqueInput
    create: XOR<ticketsCreateWithoutClienteInput, ticketsUncheckedCreateWithoutClienteInput>
  }

  export type ticketsCreateManyClienteInputEnvelope = {
    data: ticketsCreateManyClienteInput | ticketsCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type tiempodejuegoCreateWithoutClienteInput = {
    fecha: Date | string
    tiempo?: number | null
  }

  export type tiempodejuegoUncheckedCreateWithoutClienteInput = {
    fecha: Date | string
    tiempo?: number | null
  }

  export type tiempodejuegoCreateOrConnectWithoutClienteInput = {
    where: tiempodejuegoWhereUniqueInput
    create: XOR<tiempodejuegoCreateWithoutClienteInput, tiempodejuegoUncheckedCreateWithoutClienteInput>
  }

  export type tiempodejuegoCreateManyClienteInputEnvelope = {
    data: tiempodejuegoCreateManyClienteInput | tiempodejuegoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type amistadUpsertWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput = {
    where: amistadWhereUniqueInput
    update: XOR<amistadUpdateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedUpdateWithoutCliente_amistad_cliente2idToclienteInput>
    create: XOR<amistadCreateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_cliente2idToclienteInput>
  }

  export type amistadUpdateWithWhereUniqueWithoutCliente_amistad_cliente2idToclienteInput = {
    where: amistadWhereUniqueInput
    data: XOR<amistadUpdateWithoutCliente_amistad_cliente2idToclienteInput, amistadUncheckedUpdateWithoutCliente_amistad_cliente2idToclienteInput>
  }

  export type amistadUpdateManyWithWhereWithoutCliente_amistad_cliente2idToclienteInput = {
    where: amistadScalarWhereInput
    data: XOR<amistadUpdateManyMutationInput, amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteInput>
  }

  export type amistadScalarWhereInput = {
    AND?: amistadScalarWhereInput | amistadScalarWhereInput[]
    OR?: amistadScalarWhereInput[]
    NOT?: amistadScalarWhereInput | amistadScalarWhereInput[]
    amistadid?: IntFilter<"amistad"> | number
    clienteid?: IntNullableFilter<"amistad"> | number | null
    cliente2id?: IntNullableFilter<"amistad"> | number | null
    aceptada?: BoolNullableFilter<"amistad"> | boolean | null
  }

  export type amistadUpsertWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput = {
    where: amistadWhereUniqueInput
    update: XOR<amistadUpdateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedUpdateWithoutCliente_amistad_clienteidToclienteInput>
    create: XOR<amistadCreateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedCreateWithoutCliente_amistad_clienteidToclienteInput>
  }

  export type amistadUpdateWithWhereUniqueWithoutCliente_amistad_clienteidToclienteInput = {
    where: amistadWhereUniqueInput
    data: XOR<amistadUpdateWithoutCliente_amistad_clienteidToclienteInput, amistadUncheckedUpdateWithoutCliente_amistad_clienteidToclienteInput>
  }

  export type amistadUpdateManyWithWhereWithoutCliente_amistad_clienteidToclienteInput = {
    where: amistadScalarWhereInput
    data: XOR<amistadUpdateManyMutationInput, amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteInput>
  }

  export type aumentolimitehorarioUpsertWithWhereUniqueWithoutClienteInput = {
    where: aumentolimitehorarioWhereUniqueInput
    update: XOR<aumentolimitehorarioUpdateWithoutClienteInput, aumentolimitehorarioUncheckedUpdateWithoutClienteInput>
    create: XOR<aumentolimitehorarioCreateWithoutClienteInput, aumentolimitehorarioUncheckedCreateWithoutClienteInput>
  }

  export type aumentolimitehorarioUpdateWithWhereUniqueWithoutClienteInput = {
    where: aumentolimitehorarioWhereUniqueInput
    data: XOR<aumentolimitehorarioUpdateWithoutClienteInput, aumentolimitehorarioUncheckedUpdateWithoutClienteInput>
  }

  export type aumentolimitehorarioUpdateManyWithWhereWithoutClienteInput = {
    where: aumentolimitehorarioScalarWhereInput
    data: XOR<aumentolimitehorarioUpdateManyMutationInput, aumentolimitehorarioUncheckedUpdateManyWithoutClienteInput>
  }

  export type aumentolimitesmonetarioUpsertWithWhereUniqueWithoutClienteInput = {
    where: aumentolimitesmonetarioWhereUniqueInput
    update: XOR<aumentolimitesmonetarioUpdateWithoutClienteInput, aumentolimitesmonetarioUncheckedUpdateWithoutClienteInput>
    create: XOR<aumentolimitesmonetarioCreateWithoutClienteInput, aumentolimitesmonetarioUncheckedCreateWithoutClienteInput>
  }

  export type aumentolimitesmonetarioUpdateWithWhereUniqueWithoutClienteInput = {
    where: aumentolimitesmonetarioWhereUniqueInput
    data: XOR<aumentolimitesmonetarioUpdateWithoutClienteInput, aumentolimitesmonetarioUncheckedUpdateWithoutClienteInput>
  }

  export type aumentolimitesmonetarioUpdateManyWithWhereWithoutClienteInput = {
    where: aumentolimitesmonetarioScalarWhereInput
    data: XOR<aumentolimitesmonetarioUpdateManyMutationInput, aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteInput>
  }

  export type usuarioUpsertWithoutClienteInput = {
    update: XOR<usuarioUpdateWithoutClienteInput, usuarioUncheckedUpdateWithoutClienteInput>
    create: XOR<usuarioCreateWithoutClienteInput, usuarioUncheckedCreateWithoutClienteInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutClienteInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutClienteInput, usuarioUncheckedUpdateWithoutClienteInput>
  }

  export type usuarioUpdateWithoutClienteInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
    administrador?: administradorUpdateOneWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutClienteInput = {
    usuarioid?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    dni?: NullableStringFieldUpdateOperationsInput | string | null
    edad?: NullableStringFieldUpdateOperationsInput | string | null
    img?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
    administrador?: administradorUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type disminucionlimitehorarioUpsertWithWhereUniqueWithoutClienteInput = {
    where: disminucionlimitehorarioWhereUniqueInput
    update: XOR<disminucionlimitehorarioUpdateWithoutClienteInput, disminucionlimitehorarioUncheckedUpdateWithoutClienteInput>
    create: XOR<disminucionlimitehorarioCreateWithoutClienteInput, disminucionlimitehorarioUncheckedCreateWithoutClienteInput>
  }

  export type disminucionlimitehorarioUpdateWithWhereUniqueWithoutClienteInput = {
    where: disminucionlimitehorarioWhereUniqueInput
    data: XOR<disminucionlimitehorarioUpdateWithoutClienteInput, disminucionlimitehorarioUncheckedUpdateWithoutClienteInput>
  }

  export type disminucionlimitehorarioUpdateManyWithWhereWithoutClienteInput = {
    where: disminucionlimitehorarioScalarWhereInput
    data: XOR<disminucionlimitehorarioUpdateManyMutationInput, disminucionlimitehorarioUncheckedUpdateManyWithoutClienteInput>
  }

  export type disminucionlimitehorarioScalarWhereInput = {
    AND?: disminucionlimitehorarioScalarWhereInput | disminucionlimitehorarioScalarWhereInput[]
    OR?: disminucionlimitehorarioScalarWhereInput[]
    NOT?: disminucionlimitehorarioScalarWhereInput | disminucionlimitehorarioScalarWhereInput[]
    disminucionhorarioid?: IntFilter<"disminucionlimitehorario"> | number
    clienteid?: IntNullableFilter<"disminucionlimitehorario"> | number | null
    cantidad?: IntNullableFilter<"disminucionlimitehorario"> | number | null
    fecha?: DateTimeNullableFilter<"disminucionlimitehorario"> | Date | string | null
  }

  export type disminucionlimitemonetarioUpsertWithWhereUniqueWithoutClienteInput = {
    where: disminucionlimitemonetarioWhereUniqueInput
    update: XOR<disminucionlimitemonetarioUpdateWithoutClienteInput, disminucionlimitemonetarioUncheckedUpdateWithoutClienteInput>
    create: XOR<disminucionlimitemonetarioCreateWithoutClienteInput, disminucionlimitemonetarioUncheckedCreateWithoutClienteInput>
  }

  export type disminucionlimitemonetarioUpdateWithWhereUniqueWithoutClienteInput = {
    where: disminucionlimitemonetarioWhereUniqueInput
    data: XOR<disminucionlimitemonetarioUpdateWithoutClienteInput, disminucionlimitemonetarioUncheckedUpdateWithoutClienteInput>
  }

  export type disminucionlimitemonetarioUpdateManyWithWhereWithoutClienteInput = {
    where: disminucionlimitemonetarioScalarWhereInput
    data: XOR<disminucionlimitemonetarioUpdateManyMutationInput, disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteInput>
  }

  export type disminucionlimitemonetarioScalarWhereInput = {
    AND?: disminucionlimitemonetarioScalarWhereInput | disminucionlimitemonetarioScalarWhereInput[]
    OR?: disminucionlimitemonetarioScalarWhereInput[]
    NOT?: disminucionlimitemonetarioScalarWhereInput | disminucionlimitemonetarioScalarWhereInput[]
    disminucionmontarioid?: IntFilter<"disminucionlimitemonetario"> | number
    clienteid?: IntNullableFilter<"disminucionlimitemonetario"> | number | null
    cantidad?: DecimalNullableFilter<"disminucionlimitemonetario"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"disminucionlimitemonetario"> | Date | string | null
  }

  export type egresoUpsertWithWhereUniqueWithoutClienteInput = {
    where: egresoWhereUniqueInput
    update: XOR<egresoUpdateWithoutClienteInput, egresoUncheckedUpdateWithoutClienteInput>
    create: XOR<egresoCreateWithoutClienteInput, egresoUncheckedCreateWithoutClienteInput>
  }

  export type egresoUpdateWithWhereUniqueWithoutClienteInput = {
    where: egresoWhereUniqueInput
    data: XOR<egresoUpdateWithoutClienteInput, egresoUncheckedUpdateWithoutClienteInput>
  }

  export type egresoUpdateManyWithWhereWithoutClienteInput = {
    where: egresoScalarWhereInput
    data: XOR<egresoUpdateManyMutationInput, egresoUncheckedUpdateManyWithoutClienteInput>
  }

  export type egresoScalarWhereInput = {
    AND?: egresoScalarWhereInput | egresoScalarWhereInput[]
    OR?: egresoScalarWhereInput[]
    NOT?: egresoScalarWhereInput | egresoScalarWhereInput[]
    egresoid?: IntFilter<"egreso"> | number
    clienteid?: IntNullableFilter<"egreso"> | number | null
    monto?: DecimalNullableFilter<"egreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"egreso"> | Date | string | null
    metododeretiro?: StringNullableFilter<"egreso"> | string | null
  }

  export type ingresoUpsertWithWhereUniqueWithoutClienteInput = {
    where: ingresoWhereUniqueInput
    update: XOR<ingresoUpdateWithoutClienteInput, ingresoUncheckedUpdateWithoutClienteInput>
    create: XOR<ingresoCreateWithoutClienteInput, ingresoUncheckedCreateWithoutClienteInput>
  }

  export type ingresoUpdateWithWhereUniqueWithoutClienteInput = {
    where: ingresoWhereUniqueInput
    data: XOR<ingresoUpdateWithoutClienteInput, ingresoUncheckedUpdateWithoutClienteInput>
  }

  export type ingresoUpdateManyWithWhereWithoutClienteInput = {
    where: ingresoScalarWhereInput
    data: XOR<ingresoUpdateManyMutationInput, ingresoUncheckedUpdateManyWithoutClienteInput>
  }

  export type ingresoScalarWhereInput = {
    AND?: ingresoScalarWhereInput | ingresoScalarWhereInput[]
    OR?: ingresoScalarWhereInput[]
    NOT?: ingresoScalarWhereInput | ingresoScalarWhereInput[]
    ingresoid?: IntFilter<"ingreso"> | number
    clienteid?: IntNullableFilter<"ingreso"> | number | null
    monto?: DecimalNullableFilter<"ingreso"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"ingreso"> | Date | string | null
    cuponid?: IntNullableFilter<"ingreso"> | number | null
    metododepago?: StringNullableFilter<"ingreso"> | string | null
  }

  export type jugadaUpsertWithWhereUniqueWithoutClienteInput = {
    where: jugadaWhereUniqueInput
    update: XOR<jugadaUpdateWithoutClienteInput, jugadaUncheckedUpdateWithoutClienteInput>
    create: XOR<jugadaCreateWithoutClienteInput, jugadaUncheckedCreateWithoutClienteInput>
  }

  export type jugadaUpdateWithWhereUniqueWithoutClienteInput = {
    where: jugadaWhereUniqueInput
    data: XOR<jugadaUpdateWithoutClienteInput, jugadaUncheckedUpdateWithoutClienteInput>
  }

  export type jugadaUpdateManyWithWhereWithoutClienteInput = {
    where: jugadaScalarWhereInput
    data: XOR<jugadaUpdateManyMutationInput, jugadaUncheckedUpdateManyWithoutClienteInput>
  }

  export type jugadaScalarWhereInput = {
    AND?: jugadaScalarWhereInput | jugadaScalarWhereInput[]
    OR?: jugadaScalarWhereInput[]
    NOT?: jugadaScalarWhereInput | jugadaScalarWhereInput[]
    jugadaid?: IntFilter<"jugada"> | number
    clienteid?: IntNullableFilter<"jugada"> | number | null
    fecha?: DateTimeNullableFilter<"jugada"> | Date | string | null
    gananciaperdida?: IntNullableFilter<"jugada"> | number | null
    apuesta?: IntNullableFilter<"jugada"> | number | null
    hora?: IntNullableFilter<"jugada"> | number | null
    partidaid?: IntNullableFilter<"jugada"> | number | null
  }

  export type limitehorarioUpsertWithoutClienteInput = {
    update: XOR<limitehorarioUpdateWithoutClienteInput, limitehorarioUncheckedUpdateWithoutClienteInput>
    create: XOR<limitehorarioCreateWithoutClienteInput, limitehorarioUncheckedCreateWithoutClienteInput>
    where?: limitehorarioWhereInput
  }

  export type limitehorarioUpdateToOneWithWhereWithoutClienteInput = {
    where?: limitehorarioWhereInput
    data: XOR<limitehorarioUpdateWithoutClienteInput, limitehorarioUncheckedUpdateWithoutClienteInput>
  }

  export type limitehorarioUpdateWithoutClienteInput = {
    limitediario?: NullableIntFieldUpdateOperationsInput | number | null
    limitesemanal?: NullableIntFieldUpdateOperationsInput | number | null
    limitemensual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type limitehorarioUncheckedUpdateWithoutClienteInput = {
    limitediario?: NullableIntFieldUpdateOperationsInput | number | null
    limitesemanal?: NullableIntFieldUpdateOperationsInput | number | null
    limitemensual?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type limitemonetarioUpsertWithoutClienteInput = {
    update: XOR<limitemonetarioUpdateWithoutClienteInput, limitemonetarioUncheckedUpdateWithoutClienteInput>
    create: XOR<limitemonetarioCreateWithoutClienteInput, limitemonetarioUncheckedCreateWithoutClienteInput>
    where?: limitemonetarioWhereInput
  }

  export type limitemonetarioUpdateToOneWithWhereWithoutClienteInput = {
    where?: limitemonetarioWhereInput
    data: XOR<limitemonetarioUpdateWithoutClienteInput, limitemonetarioUncheckedUpdateWithoutClienteInput>
  }

  export type limitemonetarioUpdateWithoutClienteInput = {
    limitediario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitemensual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type limitemonetarioUncheckedUpdateWithoutClienteInput = {
    limitediario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitesemanal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    limitemensual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type partidaUpsertWithWhereUniqueWithoutClienteInput = {
    where: partidaWhereUniqueInput
    update: XOR<partidaUpdateWithoutClienteInput, partidaUncheckedUpdateWithoutClienteInput>
    create: XOR<partidaCreateWithoutClienteInput, partidaUncheckedCreateWithoutClienteInput>
  }

  export type partidaUpdateWithWhereUniqueWithoutClienteInput = {
    where: partidaWhereUniqueInput
    data: XOR<partidaUpdateWithoutClienteInput, partidaUncheckedUpdateWithoutClienteInput>
  }

  export type partidaUpdateManyWithWhereWithoutClienteInput = {
    where: partidaScalarWhereInput
    data: XOR<partidaUpdateManyMutationInput, partidaUncheckedUpdateManyWithoutClienteInput>
  }

  export type partidaScalarWhereInput = {
    AND?: partidaScalarWhereInput | partidaScalarWhereInput[]
    OR?: partidaScalarWhereInput[]
    NOT?: partidaScalarWhereInput | partidaScalarWhereInput[]
    partidaid?: IntFilter<"partida"> | number
    clienteid?: IntNullableFilter<"partida"> | number | null
    fecha?: DateTimeNullableFilter<"partida"> | Date | string | null
    gananciaperdida?: IntNullableFilter<"partida"> | number | null
    apuesta?: IntNullableFilter<"partida"> | number | null
  }

  export type pausaUpsertWithoutClienteInput = {
    update: XOR<pausaUpdateWithoutClienteInput, pausaUncheckedUpdateWithoutClienteInput>
    create: XOR<pausaCreateWithoutClienteInput, pausaUncheckedCreateWithoutClienteInput>
    where?: pausaWhereInput
  }

  export type pausaUpdateToOneWithWhereWithoutClienteInput = {
    where?: pausaWhereInput
    data: XOR<pausaUpdateWithoutClienteInput, pausaUncheckedUpdateWithoutClienteInput>
  }

  export type pausaUpdateWithoutClienteInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type pausaUncheckedUpdateWithoutClienteInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type suspendidosUpsertWithWhereUniqueWithoutClienteInput = {
    where: suspendidosWhereUniqueInput
    update: XOR<suspendidosUpdateWithoutClienteInput, suspendidosUncheckedUpdateWithoutClienteInput>
    create: XOR<suspendidosCreateWithoutClienteInput, suspendidosUncheckedCreateWithoutClienteInput>
  }

  export type suspendidosUpdateWithWhereUniqueWithoutClienteInput = {
    where: suspendidosWhereUniqueInput
    data: XOR<suspendidosUpdateWithoutClienteInput, suspendidosUncheckedUpdateWithoutClienteInput>
  }

  export type suspendidosUpdateManyWithWhereWithoutClienteInput = {
    where: suspendidosScalarWhereInput
    data: XOR<suspendidosUpdateManyMutationInput, suspendidosUncheckedUpdateManyWithoutClienteInput>
  }

  export type ticketsUpsertWithWhereUniqueWithoutClienteInput = {
    where: ticketsWhereUniqueInput
    update: XOR<ticketsUpdateWithoutClienteInput, ticketsUncheckedUpdateWithoutClienteInput>
    create: XOR<ticketsCreateWithoutClienteInput, ticketsUncheckedCreateWithoutClienteInput>
  }

  export type ticketsUpdateWithWhereUniqueWithoutClienteInput = {
    where: ticketsWhereUniqueInput
    data: XOR<ticketsUpdateWithoutClienteInput, ticketsUncheckedUpdateWithoutClienteInput>
  }

  export type ticketsUpdateManyWithWhereWithoutClienteInput = {
    where: ticketsScalarWhereInput
    data: XOR<ticketsUpdateManyMutationInput, ticketsUncheckedUpdateManyWithoutClienteInput>
  }

  export type tiempodejuegoUpsertWithWhereUniqueWithoutClienteInput = {
    where: tiempodejuegoWhereUniqueInput
    update: XOR<tiempodejuegoUpdateWithoutClienteInput, tiempodejuegoUncheckedUpdateWithoutClienteInput>
    create: XOR<tiempodejuegoCreateWithoutClienteInput, tiempodejuegoUncheckedCreateWithoutClienteInput>
  }

  export type tiempodejuegoUpdateWithWhereUniqueWithoutClienteInput = {
    where: tiempodejuegoWhereUniqueInput
    data: XOR<tiempodejuegoUpdateWithoutClienteInput, tiempodejuegoUncheckedUpdateWithoutClienteInput>
  }

  export type tiempodejuegoUpdateManyWithWhereWithoutClienteInput = {
    where: tiempodejuegoScalarWhereInput
    data: XOR<tiempodejuegoUpdateManyMutationInput, tiempodejuegoUncheckedUpdateManyWithoutClienteInput>
  }

  export type tiempodejuegoScalarWhereInput = {
    AND?: tiempodejuegoScalarWhereInput | tiempodejuegoScalarWhereInput[]
    OR?: tiempodejuegoScalarWhereInput[]
    NOT?: tiempodejuegoScalarWhereInput | tiempodejuegoScalarWhereInput[]
    clienteid?: IntFilter<"tiempodejuego"> | number
    fecha?: DateTimeFilter<"tiempodejuego"> | Date | string
    tiempo?: IntNullableFilter<"tiempodejuego"> | number | null
  }

  export type clienteCreateWithoutDisminucionlimitehorarioInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutDisminucionlimitehorarioInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutDisminucionlimitehorarioInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutDisminucionlimitehorarioInput, clienteUncheckedCreateWithoutDisminucionlimitehorarioInput>
  }

  export type clienteUpsertWithoutDisminucionlimitehorarioInput = {
    update: XOR<clienteUpdateWithoutDisminucionlimitehorarioInput, clienteUncheckedUpdateWithoutDisminucionlimitehorarioInput>
    create: XOR<clienteCreateWithoutDisminucionlimitehorarioInput, clienteUncheckedCreateWithoutDisminucionlimitehorarioInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutDisminucionlimitehorarioInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutDisminucionlimitehorarioInput, clienteUncheckedUpdateWithoutDisminucionlimitehorarioInput>
  }

  export type clienteUpdateWithoutDisminucionlimitehorarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutDisminucionlimitehorarioInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateWithoutDisminucionlimitemonetarioInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutDisminucionlimitemonetarioInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutDisminucionlimitemonetarioInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutDisminucionlimitemonetarioInput, clienteUncheckedCreateWithoutDisminucionlimitemonetarioInput>
  }

  export type clienteUpsertWithoutDisminucionlimitemonetarioInput = {
    update: XOR<clienteUpdateWithoutDisminucionlimitemonetarioInput, clienteUncheckedUpdateWithoutDisminucionlimitemonetarioInput>
    create: XOR<clienteCreateWithoutDisminucionlimitemonetarioInput, clienteUncheckedCreateWithoutDisminucionlimitemonetarioInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutDisminucionlimitemonetarioInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutDisminucionlimitemonetarioInput, clienteUncheckedUpdateWithoutDisminucionlimitemonetarioInput>
  }

  export type clienteUpdateWithoutDisminucionlimitemonetarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutDisminucionlimitemonetarioInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateWithoutEgresoInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutEgresoInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutEgresoInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutEgresoInput, clienteUncheckedCreateWithoutEgresoInput>
  }

  export type clienteUpsertWithoutEgresoInput = {
    update: XOR<clienteUpdateWithoutEgresoInput, clienteUncheckedUpdateWithoutEgresoInput>
    create: XOR<clienteCreateWithoutEgresoInput, clienteUncheckedCreateWithoutEgresoInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutEgresoInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutEgresoInput, clienteUncheckedUpdateWithoutEgresoInput>
  }

  export type clienteUpdateWithoutEgresoInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutEgresoInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateWithoutIngresoInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutIngresoInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutIngresoInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutIngresoInput, clienteUncheckedCreateWithoutIngresoInput>
  }

  export type clienteUpsertWithoutIngresoInput = {
    update: XOR<clienteUpdateWithoutIngresoInput, clienteUncheckedUpdateWithoutIngresoInput>
    create: XOR<clienteCreateWithoutIngresoInput, clienteUncheckedCreateWithoutIngresoInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutIngresoInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutIngresoInput, clienteUncheckedUpdateWithoutIngresoInput>
  }

  export type clienteUpdateWithoutIngresoInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutIngresoInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateWithoutJugadaInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutJugadaInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutJugadaInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutJugadaInput, clienteUncheckedCreateWithoutJugadaInput>
  }

  export type partidaCreateWithoutJugadaInput = {
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    cliente?: clienteCreateNestedOneWithoutPartidaInput
  }

  export type partidaUncheckedCreateWithoutJugadaInput = {
    partidaid?: number
    clienteid?: number | null
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
  }

  export type partidaCreateOrConnectWithoutJugadaInput = {
    where: partidaWhereUniqueInput
    create: XOR<partidaCreateWithoutJugadaInput, partidaUncheckedCreateWithoutJugadaInput>
  }

  export type clienteUpsertWithoutJugadaInput = {
    update: XOR<clienteUpdateWithoutJugadaInput, clienteUncheckedUpdateWithoutJugadaInput>
    create: XOR<clienteCreateWithoutJugadaInput, clienteUncheckedCreateWithoutJugadaInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutJugadaInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutJugadaInput, clienteUncheckedUpdateWithoutJugadaInput>
  }

  export type clienteUpdateWithoutJugadaInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutJugadaInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type partidaUpsertWithoutJugadaInput = {
    update: XOR<partidaUpdateWithoutJugadaInput, partidaUncheckedUpdateWithoutJugadaInput>
    create: XOR<partidaCreateWithoutJugadaInput, partidaUncheckedCreateWithoutJugadaInput>
    where?: partidaWhereInput
  }

  export type partidaUpdateToOneWithWhereWithoutJugadaInput = {
    where?: partidaWhereInput
    data: XOR<partidaUpdateWithoutJugadaInput, partidaUncheckedUpdateWithoutJugadaInput>
  }

  export type partidaUpdateWithoutJugadaInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: clienteUpdateOneWithoutPartidaNestedInput
  }

  export type partidaUncheckedUpdateWithoutJugadaInput = {
    partidaid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type clienteCreateWithoutLimitehorarioInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutLimitehorarioInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutLimitehorarioInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutLimitehorarioInput, clienteUncheckedCreateWithoutLimitehorarioInput>
  }

  export type clienteUpsertWithoutLimitehorarioInput = {
    update: XOR<clienteUpdateWithoutLimitehorarioInput, clienteUncheckedUpdateWithoutLimitehorarioInput>
    create: XOR<clienteCreateWithoutLimitehorarioInput, clienteUncheckedCreateWithoutLimitehorarioInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutLimitehorarioInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutLimitehorarioInput, clienteUncheckedUpdateWithoutLimitehorarioInput>
  }

  export type clienteUpdateWithoutLimitehorarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutLimitehorarioInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateWithoutLimitemonetarioInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutLimitemonetarioInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutLimitemonetarioInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutLimitemonetarioInput, clienteUncheckedCreateWithoutLimitemonetarioInput>
  }

  export type clienteUpsertWithoutLimitemonetarioInput = {
    update: XOR<clienteUpdateWithoutLimitemonetarioInput, clienteUncheckedUpdateWithoutLimitemonetarioInput>
    create: XOR<clienteCreateWithoutLimitemonetarioInput, clienteUncheckedCreateWithoutLimitemonetarioInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutLimitemonetarioInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutLimitemonetarioInput, clienteUncheckedUpdateWithoutLimitemonetarioInput>
  }

  export type clienteUpdateWithoutLimitemonetarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutLimitemonetarioInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ticketsCreateWithoutMensajesInput = {
    problema?: string | null
    resuelto?: boolean | null
    cliente?: clienteCreateNestedOneWithoutTicketsInput
    administrador?: administradorCreateNestedOneWithoutTicketsInput
  }

  export type ticketsUncheckedCreateWithoutMensajesInput = {
    ticketid?: number
    clienteid?: number | null
    problema?: string | null
    resuelto?: boolean | null
    idadmin?: number | null
  }

  export type ticketsCreateOrConnectWithoutMensajesInput = {
    where: ticketsWhereUniqueInput
    create: XOR<ticketsCreateWithoutMensajesInput, ticketsUncheckedCreateWithoutMensajesInput>
  }

  export type ticketsUpsertWithoutMensajesInput = {
    update: XOR<ticketsUpdateWithoutMensajesInput, ticketsUncheckedUpdateWithoutMensajesInput>
    create: XOR<ticketsCreateWithoutMensajesInput, ticketsUncheckedCreateWithoutMensajesInput>
    where?: ticketsWhereInput
  }

  export type ticketsUpdateToOneWithWhereWithoutMensajesInput = {
    where?: ticketsWhereInput
    data: XOR<ticketsUpdateWithoutMensajesInput, ticketsUncheckedUpdateWithoutMensajesInput>
  }

  export type ticketsUpdateWithoutMensajesInput = {
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cliente?: clienteUpdateOneWithoutTicketsNestedInput
    administrador?: administradorUpdateOneWithoutTicketsNestedInput
  }

  export type ticketsUncheckedUpdateWithoutMensajesInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    idadmin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type jugadaCreateWithoutPartidaInput = {
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
    cliente?: clienteCreateNestedOneWithoutJugadaInput
  }

  export type jugadaUncheckedCreateWithoutPartidaInput = {
    jugadaid?: number
    clienteid?: number | null
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
  }

  export type jugadaCreateOrConnectWithoutPartidaInput = {
    where: jugadaWhereUniqueInput
    create: XOR<jugadaCreateWithoutPartidaInput, jugadaUncheckedCreateWithoutPartidaInput>
  }

  export type jugadaCreateManyPartidaInputEnvelope = {
    data: jugadaCreateManyPartidaInput | jugadaCreateManyPartidaInput[]
    skipDuplicates?: boolean
  }

  export type clienteCreateWithoutPartidaInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutPartidaInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutPartidaInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutPartidaInput, clienteUncheckedCreateWithoutPartidaInput>
  }

  export type jugadaUpsertWithWhereUniqueWithoutPartidaInput = {
    where: jugadaWhereUniqueInput
    update: XOR<jugadaUpdateWithoutPartidaInput, jugadaUncheckedUpdateWithoutPartidaInput>
    create: XOR<jugadaCreateWithoutPartidaInput, jugadaUncheckedCreateWithoutPartidaInput>
  }

  export type jugadaUpdateWithWhereUniqueWithoutPartidaInput = {
    where: jugadaWhereUniqueInput
    data: XOR<jugadaUpdateWithoutPartidaInput, jugadaUncheckedUpdateWithoutPartidaInput>
  }

  export type jugadaUpdateManyWithWhereWithoutPartidaInput = {
    where: jugadaScalarWhereInput
    data: XOR<jugadaUpdateManyMutationInput, jugadaUncheckedUpdateManyWithoutPartidaInput>
  }

  export type clienteUpsertWithoutPartidaInput = {
    update: XOR<clienteUpdateWithoutPartidaInput, clienteUncheckedUpdateWithoutPartidaInput>
    create: XOR<clienteCreateWithoutPartidaInput, clienteUncheckedCreateWithoutPartidaInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutPartidaInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutPartidaInput, clienteUncheckedUpdateWithoutPartidaInput>
  }

  export type clienteUpdateWithoutPartidaInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutPartidaInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type clienteCreateWithoutPausaInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutPausaInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutPausaInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutPausaInput, clienteUncheckedCreateWithoutPausaInput>
  }

  export type clienteUpsertWithoutPausaInput = {
    update: XOR<clienteUpdateWithoutPausaInput, clienteUncheckedUpdateWithoutPausaInput>
    create: XOR<clienteCreateWithoutPausaInput, clienteUncheckedCreateWithoutPausaInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutPausaInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutPausaInput, clienteUncheckedUpdateWithoutPausaInput>
  }

  export type clienteUpdateWithoutPausaInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutPausaInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type administradorCreateWithoutSuspendidosInput = {
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuario: usuarioCreateNestedOneWithoutAdministradorInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsCreateNestedManyWithoutAdministradorInput
  }

  export type administradorUncheckedCreateWithoutSuspendidosInput = {
    adminid?: number
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuarioid: number
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutAdministradorInput
  }

  export type administradorCreateOrConnectWithoutSuspendidosInput = {
    where: administradorWhereUniqueInput
    create: XOR<administradorCreateWithoutSuspendidosInput, administradorUncheckedCreateWithoutSuspendidosInput>
  }

  export type clienteCreateWithoutSuspendidosInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutSuspendidosInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutSuspendidosInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutSuspendidosInput, clienteUncheckedCreateWithoutSuspendidosInput>
  }

  export type administradorUpsertWithoutSuspendidosInput = {
    update: XOR<administradorUpdateWithoutSuspendidosInput, administradorUncheckedUpdateWithoutSuspendidosInput>
    create: XOR<administradorCreateWithoutSuspendidosInput, administradorUncheckedCreateWithoutSuspendidosInput>
    where?: administradorWhereInput
  }

  export type administradorUpdateToOneWithWhereWithoutSuspendidosInput = {
    where?: administradorWhereInput
    data: XOR<administradorUpdateWithoutSuspendidosInput, administradorUncheckedUpdateWithoutSuspendidosInput>
  }

  export type administradorUpdateWithoutSuspendidosInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuario?: usuarioUpdateOneRequiredWithoutAdministradorNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUpdateManyWithoutAdministradorNestedInput
  }

  export type administradorUncheckedUpdateWithoutSuspendidosInput = {
    adminid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutAdministradorNestedInput
  }

  export type clienteUpsertWithoutSuspendidosInput = {
    update: XOR<clienteUpdateWithoutSuspendidosInput, clienteUncheckedUpdateWithoutSuspendidosInput>
    create: XOR<clienteCreateWithoutSuspendidosInput, clienteUncheckedCreateWithoutSuspendidosInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutSuspendidosInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutSuspendidosInput, clienteUncheckedUpdateWithoutSuspendidosInput>
  }

  export type clienteUpdateWithoutSuspendidosInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutSuspendidosInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type mensajesCreateWithoutTicketsInput = {
    mensaje?: string | null
  }

  export type mensajesUncheckedCreateWithoutTicketsInput = {
    mensaje?: string | null
  }

  export type mensajesCreateOrConnectWithoutTicketsInput = {
    where: mensajesWhereUniqueInput
    create: XOR<mensajesCreateWithoutTicketsInput, mensajesUncheckedCreateWithoutTicketsInput>
  }

  export type clienteCreateWithoutTicketsInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutTicketsInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutTicketsInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutTicketsInput, clienteUncheckedCreateWithoutTicketsInput>
  }

  export type administradorCreateWithoutTicketsInput = {
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuario: usuarioCreateNestedOneWithoutAdministradorInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosCreateNestedManyWithoutAdministradorInput
  }

  export type administradorUncheckedCreateWithoutTicketsInput = {
    adminid?: number
    balance?: bigint | number | null
    superadmin?: boolean | null
    usuarioid: number
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutAdministradorInput
  }

  export type administradorCreateOrConnectWithoutTicketsInput = {
    where: administradorWhereUniqueInput
    create: XOR<administradorCreateWithoutTicketsInput, administradorUncheckedCreateWithoutTicketsInput>
  }

  export type mensajesUpsertWithoutTicketsInput = {
    update: XOR<mensajesUpdateWithoutTicketsInput, mensajesUncheckedUpdateWithoutTicketsInput>
    create: XOR<mensajesCreateWithoutTicketsInput, mensajesUncheckedCreateWithoutTicketsInput>
    where?: mensajesWhereInput
  }

  export type mensajesUpdateToOneWithWhereWithoutTicketsInput = {
    where?: mensajesWhereInput
    data: XOR<mensajesUpdateWithoutTicketsInput, mensajesUncheckedUpdateWithoutTicketsInput>
  }

  export type mensajesUpdateWithoutTicketsInput = {
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mensajesUncheckedUpdateWithoutTicketsInput = {
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type clienteUpsertWithoutTicketsInput = {
    update: XOR<clienteUpdateWithoutTicketsInput, clienteUncheckedUpdateWithoutTicketsInput>
    create: XOR<clienteCreateWithoutTicketsInput, clienteUncheckedCreateWithoutTicketsInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutTicketsInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutTicketsInput, clienteUncheckedUpdateWithoutTicketsInput>
  }

  export type clienteUpdateWithoutTicketsInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutTicketsInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type administradorUpsertWithoutTicketsInput = {
    update: XOR<administradorUpdateWithoutTicketsInput, administradorUncheckedUpdateWithoutTicketsInput>
    create: XOR<administradorCreateWithoutTicketsInput, administradorUncheckedCreateWithoutTicketsInput>
    where?: administradorWhereInput
  }

  export type administradorUpdateToOneWithWhereWithoutTicketsInput = {
    where?: administradorWhereInput
    data: XOR<administradorUpdateWithoutTicketsInput, administradorUncheckedUpdateWithoutTicketsInput>
  }

  export type administradorUpdateWithoutTicketsInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuario?: usuarioUpdateOneRequiredWithoutAdministradorNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUpdateManyWithoutAdministradorNestedInput
  }

  export type administradorUncheckedUpdateWithoutTicketsInput = {
    adminid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutAdministradorNestedInput
  }

  export type clienteCreateWithoutTiempodejuegoInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    usuario: usuarioCreateNestedOneWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutTiempodejuegoInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    usuarioid: number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutTiempodejuegoInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutTiempodejuegoInput, clienteUncheckedCreateWithoutTiempodejuegoInput>
  }

  export type clienteUpsertWithoutTiempodejuegoInput = {
    update: XOR<clienteUpdateWithoutTiempodejuegoInput, clienteUncheckedUpdateWithoutTiempodejuegoInput>
    create: XOR<clienteCreateWithoutTiempodejuegoInput, clienteUncheckedCreateWithoutTiempodejuegoInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutTiempodejuegoInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutTiempodejuegoInput, clienteUncheckedUpdateWithoutTiempodejuegoInput>
  }

  export type clienteUpdateWithoutTiempodejuegoInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutTiempodejuegoInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    usuarioid?: IntFieldUpdateOperationsInput | number
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type administradorCreateWithoutUsuarioInput = {
    balance?: bigint | number | null
    superadmin?: boolean | null
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsCreateNestedManyWithoutAdministradorInput
  }

  export type administradorUncheckedCreateWithoutUsuarioInput = {
    adminid?: number
    balance?: bigint | number | null
    superadmin?: boolean | null
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutAdministradorInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutAdministradorInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutAdministradorInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutAdministradorInput
  }

  export type administradorCreateOrConnectWithoutUsuarioInput = {
    where: administradorWhereUniqueInput
    create: XOR<administradorCreateWithoutUsuarioInput, administradorUncheckedCreateWithoutUsuarioInput>
  }

  export type clienteCreateWithoutUsuarioInput = {
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioCreateNestedManyWithoutClienteInput
    egreso?: egresoCreateNestedManyWithoutClienteInput
    ingreso?: ingresoCreateNestedManyWithoutClienteInput
    jugada?: jugadaCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioCreateNestedOneWithoutClienteInput
    partida?: partidaCreateNestedManyWithoutClienteInput
    pausa?: pausaCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosCreateNestedManyWithoutClienteInput
    tickets?: ticketsCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoCreateNestedManyWithoutClienteInput
  }

  export type clienteUncheckedCreateWithoutUsuarioInput = {
    clienteid?: number
    balance?: bigint | number | null
    influencer?: boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_cliente2idToclienteInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedCreateNestedManyWithoutCliente_amistad_clienteidToclienteInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedCreateNestedManyWithoutClienteInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedCreateNestedManyWithoutClienteInput
    egreso?: egresoUncheckedCreateNestedManyWithoutClienteInput
    ingreso?: ingresoUncheckedCreateNestedManyWithoutClienteInput
    jugada?: jugadaUncheckedCreateNestedManyWithoutClienteInput
    limitehorario?: limitehorarioUncheckedCreateNestedOneWithoutClienteInput
    limitemonetario?: limitemonetarioUncheckedCreateNestedOneWithoutClienteInput
    partida?: partidaUncheckedCreateNestedManyWithoutClienteInput
    pausa?: pausaUncheckedCreateNestedOneWithoutClienteInput
    suspendidos?: suspendidosUncheckedCreateNestedManyWithoutClienteInput
    tickets?: ticketsUncheckedCreateNestedManyWithoutClienteInput
    tiempodejuego?: tiempodejuegoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type clienteCreateOrConnectWithoutUsuarioInput = {
    where: clienteWhereUniqueInput
    create: XOR<clienteCreateWithoutUsuarioInput, clienteUncheckedCreateWithoutUsuarioInput>
  }

  export type administradorUpsertWithoutUsuarioInput = {
    update: XOR<administradorUpdateWithoutUsuarioInput, administradorUncheckedUpdateWithoutUsuarioInput>
    create: XOR<administradorCreateWithoutUsuarioInput, administradorUncheckedCreateWithoutUsuarioInput>
    where?: administradorWhereInput
  }

  export type administradorUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: administradorWhereInput
    data: XOR<administradorUpdateWithoutUsuarioInput, administradorUncheckedUpdateWithoutUsuarioInput>
  }

  export type administradorUpdateWithoutUsuarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUpdateManyWithoutAdministradorNestedInput
  }

  export type administradorUncheckedUpdateWithoutUsuarioInput = {
    adminid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    superadmin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutAdministradorNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutAdministradorNestedInput
  }

  export type clienteUpsertWithoutUsuarioInput = {
    update: XOR<clienteUpdateWithoutUsuarioInput, clienteUncheckedUpdateWithoutUsuarioInput>
    create: XOR<clienteCreateWithoutUsuarioInput, clienteUncheckedCreateWithoutUsuarioInput>
    where?: clienteWhereInput
  }

  export type clienteUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: clienteWhereInput
    data: XOR<clienteUpdateWithoutUsuarioInput, clienteUncheckedUpdateWithoutUsuarioInput>
  }

  export type clienteUpdateWithoutUsuarioInput = {
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUpdateManyWithoutClienteNestedInput
    egreso?: egresoUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUpdateOneWithoutClienteNestedInput
    partida?: partidaUpdateManyWithoutClienteNestedInput
    pausa?: pausaUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUpdateManyWithoutClienteNestedInput
  }

  export type clienteUncheckedUpdateWithoutUsuarioInput = {
    clienteid?: IntFieldUpdateOperationsInput | number
    balance?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    influencer?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amistad_amistad_cliente2idTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteNestedInput
    amistad_amistad_clienteidTocliente?: amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteNestedInput
    aumentolimitehorario?: aumentolimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    aumentolimitesmonetario?: aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitehorario?: disminucionlimitehorarioUncheckedUpdateManyWithoutClienteNestedInput
    disminucionlimitemonetario?: disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteNestedInput
    egreso?: egresoUncheckedUpdateManyWithoutClienteNestedInput
    ingreso?: ingresoUncheckedUpdateManyWithoutClienteNestedInput
    jugada?: jugadaUncheckedUpdateManyWithoutClienteNestedInput
    limitehorario?: limitehorarioUncheckedUpdateOneWithoutClienteNestedInput
    limitemonetario?: limitemonetarioUncheckedUpdateOneWithoutClienteNestedInput
    partida?: partidaUncheckedUpdateManyWithoutClienteNestedInput
    pausa?: pausaUncheckedUpdateOneWithoutClienteNestedInput
    suspendidos?: suspendidosUncheckedUpdateManyWithoutClienteNestedInput
    tickets?: ticketsUncheckedUpdateManyWithoutClienteNestedInput
    tiempodejuego?: tiempodejuegoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type aumentolimitehorarioCreateManyAdministradorInput = {
    aumenthorarioid?: number
    clienteid?: number | null
    cantidad?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitesmonetarioCreateManyAdministradorInput = {
    aumentomonetarioid?: number
    clienteid?: number | null
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type suspendidosCreateManyAdministradorInput = {
    suspendidoid?: number
    clienteid?: number | null
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    razon?: string | null
  }

  export type ticketsCreateManyAdministradorInput = {
    ticketid?: number
    clienteid?: number | null
    problema?: string | null
    resuelto?: boolean | null
  }

  export type aumentolimitehorarioUpdateWithoutAdministradorInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cliente?: clienteUpdateOneWithoutAumentolimitehorarioNestedInput
  }

  export type aumentolimitehorarioUncheckedUpdateWithoutAdministradorInput = {
    aumenthorarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitehorarioUncheckedUpdateManyWithoutAdministradorInput = {
    aumenthorarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitesmonetarioUpdateWithoutAdministradorInput = {
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cliente?: clienteUpdateOneWithoutAumentolimitesmonetarioNestedInput
  }

  export type aumentolimitesmonetarioUncheckedUpdateWithoutAdministradorInput = {
    aumentomonetarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitesmonetarioUncheckedUpdateManyWithoutAdministradorInput = {
    aumentomonetarioid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type suspendidosUpdateWithoutAdministradorInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: clienteUpdateOneWithoutSuspendidosNestedInput
  }

  export type suspendidosUncheckedUpdateWithoutAdministradorInput = {
    suspendidoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type suspendidosUncheckedUpdateManyWithoutAdministradorInput = {
    suspendidoid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ticketsUpdateWithoutAdministradorInput = {
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    mensajes?: mensajesUpdateOneWithoutTicketsNestedInput
    cliente?: clienteUpdateOneWithoutTicketsNestedInput
  }

  export type ticketsUncheckedUpdateWithoutAdministradorInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    mensajes?: mensajesUncheckedUpdateOneWithoutTicketsNestedInput
  }

  export type ticketsUncheckedUpdateManyWithoutAdministradorInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type amistadCreateManyCliente_amistad_cliente2idToclienteInput = {
    amistadid?: number
    clienteid?: number | null
    aceptada?: boolean | null
  }

  export type amistadCreateManyCliente_amistad_clienteidToclienteInput = {
    amistadid?: number
    cliente2id?: number | null
    aceptada?: boolean | null
  }

  export type aumentolimitehorarioCreateManyClienteInput = {
    aumenthorarioid?: number
    cantidad?: number | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type aumentolimitesmonetarioCreateManyClienteInput = {
    aumentomonetarioid?: number
    cantidad?: Decimal | DecimalJsLike | number | string | null
    adminid?: number | null
    fechaabierto?: Date | string | null
    fecharesuelto?: Date | string | null
  }

  export type disminucionlimitehorarioCreateManyClienteInput = {
    disminucionhorarioid?: number
    cantidad?: number | null
    fecha?: Date | string | null
  }

  export type disminucionlimitemonetarioCreateManyClienteInput = {
    disminucionmontarioid?: number
    cantidad?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type egresoCreateManyClienteInput = {
    egresoid?: number
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    metododeretiro?: string | null
  }

  export type ingresoCreateManyClienteInput = {
    ingresoid?: number
    monto?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    cuponid?: number | null
    metododepago?: string | null
  }

  export type jugadaCreateManyClienteInput = {
    jugadaid?: number
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
    partidaid?: number | null
  }

  export type partidaCreateManyClienteInput = {
    partidaid?: number
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
  }

  export type suspendidosCreateManyClienteInput = {
    suspendidoid?: number
    fechainicio?: Date | string | null
    fechafin?: Date | string | null
    duracion?: number | null
    adminid?: number | null
    razon?: string | null
  }

  export type ticketsCreateManyClienteInput = {
    ticketid?: number
    problema?: string | null
    resuelto?: boolean | null
    idadmin?: number | null
  }

  export type tiempodejuegoCreateManyClienteInput = {
    fecha: Date | string
    tiempo?: number | null
  }

  export type amistadUpdateWithoutCliente_amistad_cliente2idToclienteInput = {
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cliente_amistad_clienteidTocliente?: clienteUpdateOneWithoutAmistad_amistad_clienteidToclienteNestedInput
  }

  export type amistadUncheckedUpdateWithoutCliente_amistad_cliente2idToclienteInput = {
    amistadid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type amistadUncheckedUpdateManyWithoutCliente_amistad_cliente2idToclienteInput = {
    amistadid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type amistadUpdateWithoutCliente_amistad_clienteidToclienteInput = {
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cliente_amistad_cliente2idTocliente?: clienteUpdateOneWithoutAmistad_amistad_cliente2idToclienteNestedInput
  }

  export type amistadUncheckedUpdateWithoutCliente_amistad_clienteidToclienteInput = {
    amistadid?: IntFieldUpdateOperationsInput | number
    cliente2id?: NullableIntFieldUpdateOperationsInput | number | null
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type amistadUncheckedUpdateManyWithoutCliente_amistad_clienteidToclienteInput = {
    amistadid?: IntFieldUpdateOperationsInput | number
    cliente2id?: NullableIntFieldUpdateOperationsInput | number | null
    aceptada?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type aumentolimitehorarioUpdateWithoutClienteInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administrador?: administradorUpdateOneWithoutAumentolimitehorarioNestedInput
  }

  export type aumentolimitehorarioUncheckedUpdateWithoutClienteInput = {
    aumenthorarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitehorarioUncheckedUpdateManyWithoutClienteInput = {
    aumenthorarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitesmonetarioUpdateWithoutClienteInput = {
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    administrador?: administradorUpdateOneWithoutAumentolimitesmonetarioNestedInput
  }

  export type aumentolimitesmonetarioUncheckedUpdateWithoutClienteInput = {
    aumentomonetarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aumentolimitesmonetarioUncheckedUpdateManyWithoutClienteInput = {
    aumentomonetarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    fechaabierto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecharesuelto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitehorarioUpdateWithoutClienteInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitehorarioUncheckedUpdateWithoutClienteInput = {
    disminucionhorarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitehorarioUncheckedUpdateManyWithoutClienteInput = {
    disminucionhorarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitemonetarioUpdateWithoutClienteInput = {
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitemonetarioUncheckedUpdateWithoutClienteInput = {
    disminucionmontarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type disminucionlimitemonetarioUncheckedUpdateManyWithoutClienteInput = {
    disminucionmontarioid?: IntFieldUpdateOperationsInput | number
    cantidad?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type egresoUpdateWithoutClienteInput = {
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metododeretiro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type egresoUncheckedUpdateWithoutClienteInput = {
    egresoid?: IntFieldUpdateOperationsInput | number
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metododeretiro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type egresoUncheckedUpdateManyWithoutClienteInput = {
    egresoid?: IntFieldUpdateOperationsInput | number
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metododeretiro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ingresoUpdateWithoutClienteInput = {
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cuponid?: NullableIntFieldUpdateOperationsInput | number | null
    metododepago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ingresoUncheckedUpdateWithoutClienteInput = {
    ingresoid?: IntFieldUpdateOperationsInput | number
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cuponid?: NullableIntFieldUpdateOperationsInput | number | null
    metododepago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ingresoUncheckedUpdateManyWithoutClienteInput = {
    ingresoid?: IntFieldUpdateOperationsInput | number
    monto?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cuponid?: NullableIntFieldUpdateOperationsInput | number | null
    metododepago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type jugadaUpdateWithoutClienteInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
    partida?: partidaUpdateOneWithoutJugadaNestedInput
  }

  export type jugadaUncheckedUpdateWithoutClienteInput = {
    jugadaid?: IntFieldUpdateOperationsInput | number
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
    partidaid?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type jugadaUncheckedUpdateManyWithoutClienteInput = {
    jugadaid?: IntFieldUpdateOperationsInput | number
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
    partidaid?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type partidaUpdateWithoutClienteInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    jugada?: jugadaUpdateManyWithoutPartidaNestedInput
  }

  export type partidaUncheckedUpdateWithoutClienteInput = {
    partidaid?: IntFieldUpdateOperationsInput | number
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    jugada?: jugadaUncheckedUpdateManyWithoutPartidaNestedInput
  }

  export type partidaUncheckedUpdateManyWithoutClienteInput = {
    partidaid?: IntFieldUpdateOperationsInput | number
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type suspendidosUpdateWithoutClienteInput = {
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
    administrador?: administradorUpdateOneWithoutSuspendidosNestedInput
  }

  export type suspendidosUncheckedUpdateWithoutClienteInput = {
    suspendidoid?: IntFieldUpdateOperationsInput | number
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type suspendidosUncheckedUpdateManyWithoutClienteInput = {
    suspendidoid?: IntFieldUpdateOperationsInput | number
    fechainicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fechafin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duracion?: NullableIntFieldUpdateOperationsInput | number | null
    adminid?: NullableIntFieldUpdateOperationsInput | number | null
    razon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ticketsUpdateWithoutClienteInput = {
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    mensajes?: mensajesUpdateOneWithoutTicketsNestedInput
    administrador?: administradorUpdateOneWithoutTicketsNestedInput
  }

  export type ticketsUncheckedUpdateWithoutClienteInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    idadmin?: NullableIntFieldUpdateOperationsInput | number | null
    mensajes?: mensajesUncheckedUpdateOneWithoutTicketsNestedInput
  }

  export type ticketsUncheckedUpdateManyWithoutClienteInput = {
    ticketid?: IntFieldUpdateOperationsInput | number
    problema?: NullableStringFieldUpdateOperationsInput | string | null
    resuelto?: NullableBoolFieldUpdateOperationsInput | boolean | null
    idadmin?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tiempodejuegoUpdateWithoutClienteInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tiempo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tiempodejuegoUncheckedUpdateWithoutClienteInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tiempo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tiempodejuegoUncheckedUpdateManyWithoutClienteInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tiempo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type jugadaCreateManyPartidaInput = {
    jugadaid?: number
    clienteid?: number | null
    fecha?: Date | string | null
    gananciaperdida?: number | null
    apuesta?: number | null
    hora?: number | null
  }

  export type jugadaUpdateWithoutPartidaInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
    cliente?: clienteUpdateOneWithoutJugadaNestedInput
  }

  export type jugadaUncheckedUpdateWithoutPartidaInput = {
    jugadaid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type jugadaUncheckedUpdateManyWithoutPartidaInput = {
    jugadaid?: IntFieldUpdateOperationsInput | number
    clienteid?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gananciaperdida?: NullableIntFieldUpdateOperationsInput | number | null
    apuesta?: NullableIntFieldUpdateOperationsInput | number | null
    hora?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}