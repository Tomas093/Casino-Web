
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.5.0
 * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
 */
Prisma.prismaVersion = {
  client: "6.5.0",
  engine: "173f8d54f8d52e692c7e27e72a88314ec7aeff60"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdministradorScalarFieldEnum = {
  adminid: 'adminid',
  balance: 'balance',
  superadmin: 'superadmin',
  usuarioid: 'usuarioid'
};

exports.Prisma.AmistadScalarFieldEnum = {
  amistadid: 'amistadid',
  clienteid: 'clienteid',
  cliente2id: 'cliente2id',
  aceptada: 'aceptada'
};

exports.Prisma.AumentolimitehorarioScalarFieldEnum = {
  aumenthorarioid: 'aumenthorarioid',
  clienteid: 'clienteid',
  cantidad: 'cantidad',
  adminid: 'adminid',
  fechaabierto: 'fechaabierto',
  fecharesuelto: 'fecharesuelto'
};

exports.Prisma.AumentolimitesmonetarioScalarFieldEnum = {
  aumentomonetarioid: 'aumentomonetarioid',
  clienteid: 'clienteid',
  cantidad: 'cantidad',
  adminid: 'adminid',
  fechaabierto: 'fechaabierto',
  fecharesuelto: 'fecharesuelto'
};

exports.Prisma.ClienteScalarFieldEnum = {
  clienteid: 'clienteid',
  balance: 'balance',
  influencer: 'influencer',
  usuarioid: 'usuarioid'
};

exports.Prisma.DisminucionlimitehorarioScalarFieldEnum = {
  disminucionhorarioid: 'disminucionhorarioid',
  clienteid: 'clienteid',
  cantidad: 'cantidad',
  fecha: 'fecha'
};

exports.Prisma.DisminucionlimitemonetarioScalarFieldEnum = {
  disminucionmontarioid: 'disminucionmontarioid',
  clienteid: 'clienteid',
  cantidad: 'cantidad',
  fecha: 'fecha'
};

exports.Prisma.EgresoScalarFieldEnum = {
  egresoid: 'egresoid',
  clienteid: 'clienteid',
  monto: 'monto',
  fecha: 'fecha',
  metododeretiro: 'metododeretiro'
};

exports.Prisma.IngresoScalarFieldEnum = {
  ingresoid: 'ingresoid',
  clienteid: 'clienteid',
  monto: 'monto',
  fecha: 'fecha',
  cuponid: 'cuponid',
  metododepago: 'metododepago'
};

exports.Prisma.JuegoScalarFieldEnum = {
  juegoid: 'juegoid',
  nombre: 'nombre',
  tipo: 'tipo',
  estado: 'estado'
};

exports.Prisma.JugadaScalarFieldEnum = {
  jugadaid: 'jugadaid',
  clienteid: 'clienteid',
  fecha: 'fecha',
  gananciaperdida: 'gananciaperdida',
  apuesta: 'apuesta',
  hora: 'hora',
  partidaid: 'partidaid'
};

exports.Prisma.LimitehorarioScalarFieldEnum = {
  clienteid: 'clienteid',
  limitediario: 'limitediario',
  limitesemanal: 'limitesemanal',
  limitemensual: 'limitemensual'
};

exports.Prisma.LimitemonetarioScalarFieldEnum = {
  clienteid: 'clienteid',
  limitediario: 'limitediario',
  limitesemanal: 'limitesemanal',
  limitemensual: 'limitemensual'
};

exports.Prisma.MensajesScalarFieldEnum = {
  ticketid: 'ticketid',
  mensaje: 'mensaje'
};

exports.Prisma.PartidaScalarFieldEnum = {
  partidaid: 'partidaid',
  clienteid: 'clienteid',
  fecha: 'fecha',
  gananciaperdida: 'gananciaperdida',
  apuesta: 'apuesta'
};

exports.Prisma.PausaScalarFieldEnum = {
  clienteid: 'clienteid',
  fechainicio: 'fechainicio',
  fechafin: 'fechafin',
  duracion: 'duracion'
};

exports.Prisma.PromocionScalarFieldEnum = {
  promocionid: 'promocionid',
  tipo: 'tipo',
  descripcion: 'descripcion',
  fechainicio: 'fechainicio',
  fechafin: 'fechafin',
  cantidadusos: 'cantidadusos',
  mincarga: 'mincarga',
  maxcarga: 'maxcarga'
};

exports.Prisma.SuspendidosScalarFieldEnum = {
  suspendidoid: 'suspendidoid',
  clienteid: 'clienteid',
  fechainicio: 'fechainicio',
  fechafin: 'fechafin',
  duracion: 'duracion',
  adminid: 'adminid',
  razon: 'razon'
};

exports.Prisma.TicketsScalarFieldEnum = {
  ticketid: 'ticketid',
  clienteid: 'clienteid',
  problema: 'problema',
  resuelto: 'resuelto',
  idadmin: 'idadmin'
};

exports.Prisma.TiempodejuegoScalarFieldEnum = {
  clienteid: 'clienteid',
  fecha: 'fecha',
  tiempo: 'tiempo'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  usuarioid: 'usuarioid',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  password: 'password',
  dni: 'dni',
  edad: 'edad',
  img: 'img'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  administrador: 'administrador',
  amistad: 'amistad',
  aumentolimitehorario: 'aumentolimitehorario',
  aumentolimitesmonetario: 'aumentolimitesmonetario',
  cliente: 'cliente',
  disminucionlimitehorario: 'disminucionlimitehorario',
  disminucionlimitemonetario: 'disminucionlimitemonetario',
  egreso: 'egreso',
  ingreso: 'ingreso',
  juego: 'juego',
  jugada: 'jugada',
  limitehorario: 'limitehorario',
  limitemonetario: 'limitemonetario',
  mensajes: 'mensajes',
  partida: 'partida',
  pausa: 'pausa',
  promocion: 'promocion',
  suspendidos: 'suspendidos',
  tickets: 'tickets',
  tiempodejuego: 'tiempodejuego',
  usuario: 'usuario'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
