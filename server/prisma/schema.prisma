generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administrador {
  adminid                 Int                       @id @default(autoincrement())
  superadmin              Boolean?
  usuarioid               Int                       @unique
  usuario                 usuario                   @relation(fields: [usuarioid], references: [usuarioid], onDelete: Cascade)
  aumentolimitehorario    aumentolimitehorario[]
  aumentolimitesmonetario aumentolimitesmonetario[]
  suspendidos             suspendidos[]
  ticket                  ticket[]
}

model amistad {
  id_amistad                           Int       @id @default(autoincrement())
  usuario1_id                          Int
  usuario2_id                          Int
  fecha_creacion                       DateTime? @default(now()) @db.Timestamp(6)
  usuario_amistad_usuario1_idTousuario usuario   @relation("amistad_usuario1_idTousuario", fields: [usuario1_id], references: [usuarioid], onDelete: NoAction, onUpdate: NoAction)
  usuario_amistad_usuario2_idTousuario usuario   @relation("amistad_usuario2_idTousuario", fields: [usuario2_id], references: [usuarioid], onDelete: NoAction, onUpdate: NoAction)
}

model aumentolimitehorario {
  aumenthorarioid Int            @id @default(autoincrement())
  clienteid       Int?
  cantidad        Int?
  adminid         Int?
  fechaabierto    DateTime?      @db.Timestamp(6)
  fecharesuelto   DateTime?      @db.Timestamp(6)
  administrador   administrador? @relation(fields: [adminid], references: [adminid], onDelete: Cascade, onUpdate: NoAction)
  cliente         cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model aumentolimitesmonetario {
  aumentomonetarioid Int            @id @default(autoincrement())
  clienteid          Int?
  cantidad           Decimal?       @db.Decimal(10, 2)
  adminid            Int?
  fechaabierto       DateTime?      @db.Timestamp(6)
  fecharesuelto      DateTime?      @db.Timestamp(6)
  administrador      administrador? @relation(fields: [adminid], references: [adminid], onDelete: Cascade, onUpdate: NoAction)
  cliente            cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model cliente {
  clienteid                  Int                          @id @default(autoincrement())
  balance                    BigInt?
  influencer                 Boolean?
  usuarioid                  Int                          @unique
  aumentolimitehorario       aumentolimitehorario[]
  aumentolimitesmonetario    aumentolimitesmonetario[]
  usuario                    usuario                      @relation(fields: [usuarioid], references: [usuarioid], onDelete: Cascade)
  disminucionlimitehorario   disminucionlimitehorario[]
  disminucionlimitemonetario disminucionlimitemonetario[]
  egreso                     egreso[]
  ingreso                    ingreso[]
  jugada                     jugada[]
  limitehorario              limitehorario?
  limitemonetario            limitemonetario?
  partida                    partida[]
  pausa                      pausa?
  suspendidos                suspendidos[]
  ticket                     ticket[]
  tiempodejuego              tiempodejuego[]
}

model disminucionlimitehorario {
  disminucionhorarioid Int       @id @default(autoincrement())
  clienteid            Int?
  cantidad             Int?
  fecha                DateTime? @db.Timestamp(6)
  cliente              cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model disminucionlimitemonetario {
  disminucionmontarioid Int       @id @default(autoincrement())
  clienteid             Int?
  cantidad              Decimal?  @db.Decimal(10, 2)
  fecha                 DateTime? @db.Timestamp(6)
  cliente               cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model egreso {
  egresoid  Int       @id @default(autoincrement())
  clienteid Int?
  monto     Decimal?  @db.Decimal(10, 2)
  fecha     DateTime? @db.Timestamp(6)
  metodo    String?   @db.VarChar(255)
  cliente   cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model ingreso {
  ingresoid Int       @id @default(autoincrement())
  clienteid Int?
  monto     Decimal?  @db.Decimal(10, 2)
  fecha     DateTime? @db.Timestamp(6)
  cuponid   Int?
  metodo    String?   @db.VarChar(255)
  cliente   cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model juego {
  juegoid     Int      @id @default(autoincrement())
  nombre      String?  @db.VarChar(255)
  funcionando Boolean?
  jugada      jugada[]
}

model jugada {
  jugadaid  Int       @id @default(autoincrement())
  clienteid Int?
  fecha     DateTime? @db.Timestamp(6)
  retorno   Int?
  apuesta   Int?
  juegoid   Int?
  juego     juego?    @relation(fields: [juegoid], references: [juegoid], onDelete: NoAction, onUpdate: NoAction, map: "fk_juegoid")
  cliente   cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model limitehorario {
  clienteid     Int     @id
  limitediario  Int?
  limitesemanal Int?
  limitemensual Int?
  cliente       cliente @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model limitemonetario {
  clienteid     Int      @id
  limitediario  Decimal? @db.Decimal(10, 2)
  limitesemanal Decimal? @db.Decimal(10, 2)
  limitemensual Decimal? @db.Decimal(10, 2)
  cliente       cliente  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model partida {
  partidaid       Int       @id @default(autoincrement())
  clienteid       Int?
  fecha           DateTime? @db.Timestamp(6)
  gananciaperdida Int?
  apuesta         Int?
  cliente         cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model pausa {
  clienteid   Int       @id
  fechainicio DateTime? @db.Timestamp(6)
  fechafin    DateTime? @db.Timestamp(6)
  duracion    Int?
  cliente     cliente   @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model promocion {
  promocionid  Int       @id @default(autoincrement())
  tipo         String?   @db.VarChar(255)
  descripcion  String?
  fechainicio  DateTime? @db.Timestamp(6)
  fechafin     DateTime? @db.Timestamp(6)
  cantidadusos Int?
  mincarga     Decimal?  @db.Decimal(10, 2)
  maxcarga     Decimal?  @db.Decimal(10, 2)
}

model suspendidos {
  suspendidoid  Int            @id @default(autoincrement())
  clienteid     Int?
  fechainicio   DateTime?      @db.Timestamp(6)
  fechafin      DateTime?      @db.Timestamp(6)
  duracion      Int?
  adminid       Int?
  razon         String?
  administrador administrador? @relation(fields: [adminid], references: [adminid], onDelete: Cascade, onUpdate: NoAction)
  cliente       cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)
}

model tiempodejuego {
  clienteid Int
  fecha     DateTime @db.Timestamp(6)
  tiempo    Int?
  cliente   cliente  @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction)

  @@id([clienteid, fecha])
}

model usuario {
  usuarioid                                                   Int                  @id @default(autoincrement())
  nombre                                                      String?              @db.VarChar(255)
  apellido                                                    String?              @db.VarChar(255)
  email                                                       String?              @unique @db.VarChar(255)
  password                                                    String?              @db.VarChar(255)
  dni                                                         String?
  img                                                         String?
  edad                                                        String?
  administrador                                               administrador?
  amistad_amistad_usuario1_idTousuario                        amistad[]            @relation("amistad_usuario1_idTousuario")
  amistad_amistad_usuario2_idTousuario                        amistad[]            @relation("amistad_usuario2_idTousuario")
  cliente                                                     cliente?
  solicitudesamistad_solicitudesamistad_id_receptorTousuario  solicitudesamistad[] @relation("solicitudesamistad_id_receptorTousuario")
  solicitudesamistad_solicitudesamistad_id_remitenteTousuario solicitudesamistad[] @relation("solicitudesamistad_id_remitenteTousuario")
}

model solicitudesamistad {
  id_solicitud                                     Int       @id @default(autoincrement())
  id_remitente                                     Int
  id_receptor                                      Int
  estado                                           String    @db.VarChar(20)
  fecha_creacion                                   DateTime? @default(now()) @db.Timestamp(6)
  usuario_solicitudesamistad_id_receptorTousuario  usuario   @relation("solicitudesamistad_id_receptorTousuario", fields: [id_receptor], references: [usuarioid], onDelete: NoAction, onUpdate: NoAction)
  usuario_solicitudesamistad_id_remitenteTousuario usuario   @relation("solicitudesamistad_id_remitenteTousuario", fields: [id_remitente], references: [usuarioid], onDelete: NoAction, onUpdate: NoAction)
}

model mensaje {
  mensajeid  Int       @id @default(autoincrement())
  ticketid   Int
  contenido  String
  fechaenvio DateTime? @default(now()) @db.Timestamp(6)
  usuarioid  Int
  tickets    ticket    @relation(fields: [ticketid], references: [ticketid], onDelete: Cascade, onUpdate: NoAction, map: "fk_ticket")
}

model ticket {
  ticketid      Int            @id(map: "tickets_pkey") @default(autoincrement())
  clienteid     Int?
  problema      String?
  resuelto      Boolean?       @default(false)
  adminid       Int?
  fechacreacion DateTime?      @default(now()) @db.Timestamp(6)
  fechacierre   DateTime?      @db.Timestamp(6)
  prioridad     String?
  categoria     String?
  mensaje       mensaje[]
  administrador administrador? @relation(fields: [adminid], references: [adminid], onDelete: Cascade, onUpdate: NoAction, map: "fk_admin")
  cliente       cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente")

  @@index([clienteid], map: "idx_tickets_clienteid")
  @@index([adminid], map: "idx_tickets_idadmin")
  @@index([resuelto], map: "idx_tickets_resuelto")
}

model faq {
  preguntaid   Int     @id @default(autoincrement())
  pregunta     String
  respuesta    String
  categoria    String  @db.VarChar(255)
  palabraclave String?
}
