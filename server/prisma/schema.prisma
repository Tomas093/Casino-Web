generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administrador {
  adminid                 Int                       @id @default(autoincrement())
  superadmin              Boolean?
  usuarioid               Int                       @unique
  usuario                 usuario                   @relation(fields: [usuarioid], references: [usuarioid], onDelete: Cascade)
  aumentolimitehorario    aumentolimitehorario[]
  aumentolimitesmonetario aumentolimitesmonetario[]
  suspendidos             suspendidos[]
  tickets                 tickets[]
}

model amistad {
  amistadid                           Int      @id @default(autoincrement())
  clienteid                           Int?
  cliente2id                          Int?
  aceptada                            Boolean?
  cliente_amistad_cliente2idTocliente cliente? @relation("amistad_cliente2idTocliente", fields: [cliente2id], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
  cliente_amistad_clienteidTocliente  cliente? @relation("amistad_clienteidTocliente", fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model aumentolimitehorario {
  aumenthorarioid Int            @id @default(autoincrement())
  clienteid       Int?
  cantidad        Int?
  adminid         Int?
  fechaabierto    DateTime?      @db.Timestamp(6)
  fecharesuelto   DateTime?      @db.Timestamp(6)
  administrador   administrador? @relation(fields: [adminid], references: [adminid], onDelete: NoAction, onUpdate: NoAction)
  cliente         cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model aumentolimitesmonetario {
  aumentomonetarioid Int            @id @default(autoincrement())
  clienteid          Int?
  cantidad           Decimal?       @db.Decimal(10, 2)
  adminid            Int?
  fechaabierto       DateTime?      @db.Timestamp(6)
  fecharesuelto      DateTime?      @db.Timestamp(6)
  administrador      administrador? @relation(fields: [adminid], references: [adminid], onDelete: NoAction, onUpdate: NoAction)
  cliente            cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model cliente {
  clienteid                           Int                          @id @default(autoincrement())
  balance                             BigInt?
  influencer                          Boolean?
  usuarioid                           Int                          @unique
  amistad_amistad_cliente2idTocliente amistad[]                    @relation("amistad_cliente2idTocliente")
  amistad_amistad_clienteidTocliente  amistad[]                    @relation("amistad_clienteidTocliente")
  aumentolimitehorario                aumentolimitehorario[]
  aumentolimitesmonetario             aumentolimitesmonetario[]
  usuario                             usuario                      @relation(fields: [usuarioid], references: [usuarioid], onDelete: Cascade)
  disminucionlimitehorario            disminucionlimitehorario[]
  disminucionlimitemonetario          disminucionlimitemonetario[]
  egreso                              egreso[]
  ingreso                             ingreso[]
  jugada                              jugada[]
  limitehorario                       limitehorario?
  limitemonetario                     limitemonetario?
  partida                             partida[]
  pausa                               pausa?
  suspendidos                         suspendidos[]
  tickets                             tickets[]
  tiempodejuego                       tiempodejuego[]
}

model disminucionlimitehorario {
  disminucionhorarioid Int       @id @default(autoincrement())
  clienteid            Int?
  cantidad             Int?
  fecha                DateTime? @db.Timestamp(6)
  cliente              cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model disminucionlimitemonetario {
  disminucionmontarioid Int       @id @default(autoincrement())
  clienteid             Int?
  cantidad              Decimal?  @db.Decimal(10, 2)
  fecha                 DateTime? @db.Timestamp(6)
  cliente               cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model egreso {
  egresoid       Int       @id @default(autoincrement())
  clienteid      Int?
  monto          Decimal?  @db.Decimal(10, 2)
  fecha          DateTime? @db.Timestamp(6)
  metododeretiro String?   @db.VarChar(255)
  cliente        cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model ingreso {
  ingresoid    Int       @id @default(autoincrement())
  clienteid    Int?
  monto        Decimal?  @db.Decimal(10, 2)
  fecha        DateTime? @db.Timestamp(6)
  cuponid      Int?
  metododepago String?   @db.VarChar(255)
  cliente      cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model juego {
  juegoid Int     @id @default(autoincrement())
  nombre  String? @db.VarChar(255)
  tipo    String? @db.VarChar(255)
  estado  String? @db.VarChar(255)
}

model jugada {
  jugadaid        Int       @id @default(autoincrement())
  clienteid       Int?
  fecha           DateTime? @db.Timestamp(6)
  gananciaperdida Int?
  apuesta         Int?
  hora            Int?
  partidaid       Int?
  cliente         cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
  partida         partida?  @relation(fields: [partidaid], references: [partidaid], onDelete: NoAction, onUpdate: NoAction)
}

model limitehorario {
  clienteid     Int     @id
  limitediario  Int?
  limitesemanal Int?
  limitemensual Int?
  cliente       cliente @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model limitemonetario {
  clienteid     Int      @id
  limitediario  Decimal? @db.Decimal(10, 2)
  limitesemanal Decimal? @db.Decimal(10, 2)
  limitemensual Decimal? @db.Decimal(10, 2)
  cliente       cliente  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model mensajes {
  ticketid Int     @id
  mensaje  String?
  tickets  tickets @relation(fields: [ticketid], references: [ticketid], onDelete: NoAction, onUpdate: NoAction)
}

model partida {
  partidaid       Int       @id @default(autoincrement())
  clienteid       Int?
  fecha           DateTime? @db.Timestamp(6)
  gananciaperdida Int?
  apuesta         Int?
  jugada          jugada[]
  cliente         cliente?  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model pausa {
  clienteid   Int       @id
  fechainicio DateTime? @db.Timestamp(6)
  fechafin    DateTime? @db.Timestamp(6)
  duracion    Int?
  cliente     cliente   @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model promocion {
  promocionid  Int       @id @default(autoincrement())
  tipo         String?   @db.VarChar(255)
  descripcion  String?
  fechainicio  DateTime? @db.Timestamp(6)
  fechafin     DateTime? @db.Timestamp(6)
  cantidadusos Int?
  mincarga     Decimal?  @db.Decimal(10, 2)
  maxcarga     Decimal?  @db.Decimal(10, 2)
}

model suspendidos {
  suspendidoid  Int            @id @default(autoincrement())
  clienteid     Int?
  fechainicio   DateTime?      @db.Timestamp(6)
  fechafin      DateTime?      @db.Timestamp(6)
  duracion      Int?
  adminid       Int?
  razon         String?
  administrador administrador? @relation(fields: [adminid], references: [adminid], onDelete: NoAction, onUpdate: NoAction)
  cliente       cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
}

model tickets {
  ticketid      Int            @id @default(autoincrement())
  clienteid     Int?
  problema      String?
  resuelto      Boolean?
  idadmin       Int?
  mensajes      mensajes?
  cliente       cliente?       @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)
  administrador administrador? @relation(fields: [idadmin], references: [adminid], onDelete: NoAction, onUpdate: NoAction)
}

model tiempodejuego {
  clienteid Int
  fecha     DateTime @db.Timestamp(6)
  tiempo    Int?
  cliente   cliente  @relation(fields: [clienteid], references: [clienteid], onDelete: NoAction, onUpdate: NoAction)

  @@id([clienteid, fecha])
}

model usuario {
  usuarioid     Int            @id @default(autoincrement())
  nombre        String?        @db.VarChar(255)
  apellido      String?        @db.VarChar(255)
  email         String?        @unique @db.VarChar(255)
  password      String?        @db.VarChar(255)
  dni           String?
  edad          String?
  img           String?
  administrador administrador?
  cliente       cliente?
}
